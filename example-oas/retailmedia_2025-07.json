{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - RetailMedia",
    "version": "2025-07"
  },
  "servers": [
    {
      "url": "https://api.criteo.com/2025-07"
    }
  ],
  "paths": {
    "/retail-media/account-management/accounts/{accountId}/brands/add": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Add brands to an account",
        "operationId": "AddBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrands"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRetailMediaBrands"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/account-management/accounts/{accountId}/brands/remove": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Remove brands from an account",
        "operationId": "RemoveBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrands"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRetailMediaBrands"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/account-management/accounts/{accountId}/create-brand-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Brand Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandBrandAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrandAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/account-management/accounts/{accountId}/create-seller-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Seller Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandSellerAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaSellerAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/account-management/accounts/{accountId}/private-market-child-accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets page of private market child accounts that are associated with the given account",
        "operationId": "ExternalApiAccounts_GetApiExternalV1AccountPrivateMarketChildAccountsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of accounts to be returned. The default is 25.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of accounts. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/account-management/accounts/{accountId}/sellers": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Replace the sellers associated with an account",
        "operationId": "UpdateSellers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceCollectionInputOfRetailMediaSeller"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfRetailMediaSeller"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets page of account objects that the current user can access",
        "operationId": "AccountsApi_GetApiV1ExternalAccounts",
        "parameters": [
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audience-segments": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all segments with a valid configuration, and returns the full segments. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment Update request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audience-segments/{audience-segment-id}/contact-list": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns the statistics of a contact list segment.",
        "operationId": "getAudienceSegmentContactListStatistics",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "Segment Id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audience-segments/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all segments with a valid configuration, and returns the full segments. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment creation parameter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audience-segments/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete the segments associated to the given IDs.",
        "operationId": "bulkDeleteAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment delete request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audience-segments/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Segment search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/audiences/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudiences",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Audience search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/balances": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of balance objects for the given account id",
        "operationId": "GetApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to get balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Create balance for the given account id",
        "operationId": "PostApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to create balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to set when creating a Retail Media Balance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "createBalance"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/balances/{balance-id}": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Get a balance for the given account id and balance id",
        "operationId": "GetApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Balance"
        ],
        "description": "Modify a balance for the given account id",
        "operationId": "PatchApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceModelV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "updateBalanceModel"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/balances/{balance-id}/add-funds": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Add funds to a balance for the given account id",
        "operationId": "PostApiV2ExternalAccountAddFundsByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to add funds to",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options of adding funds to a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFundsToBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "addFundsToBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/balances/{balance-id}/change-dates": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Change dates of a balance for the given account id",
        "operationId": "PostApiV2ExternalAccountChangeDatesByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify schedule of a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDatesOfBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "changeDatesOfBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/campaigns": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the editable and creatable campaign attributes including all types of budgets for each campaigns in relation to the account id, limited by the campaign ids.",
        "operationId": "Campaigns_GetApi202301ExternalAccountCampaignsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to request the campaign for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a campaign and assign budgets for the given account id with creatable campaign attributes given in request body constrained by business validation. The validation error includes details and source of errors. Pacing can be adjusted and affected by the status of the campaign and the days left on the campaign if auto daily pacing is enabled.",
        "operationId": "Campaigns_PostApi202301ExternalAccountCampaignsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to request the campaign for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creatable campaign attributes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCampaignV202301"
              }
            }
          },
          "x-bodyName": "campaign"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/creatives": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "CreativesApi_GetApi202110ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a creative for an account",
        "operationId": "CreativesApi_PostApi202210ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to create a creative for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeCreateModel202207"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creatives created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/creatives/{creative-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the specified creative",
        "operationId": "GetApiV2ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a creative",
        "operationId": "CreativesApi_PutApi202210ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id containing the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeUpdateModel202207"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creative updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/creatives/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "PostApiV2ExternalAccountCreativesSearchByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-ids",
            "in": "query",
            "description": "Creatives to filter by",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{account-id}/line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of line item objects for the given account id",
        "operationId": "GetApiV2ExternalAccountLineItemsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToCampaignId",
            "in": "query",
            "description": "The campaign ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limitToType",
            "in": "query",
            "description": "The campaign types that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "enum": [
                "Unknown",
                "Auction",
                "Preferred"
              ],
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLineItemPagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{accountId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountBrandsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{accountId}/catalogs": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "CatalogApi_PostApiV1ExternalAccountCatalogsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfCatalogRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{accountId}/catalogs/sellers": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "Catalog_PostApiV1ExternalAccountCatalogsSellersByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfSellerCatalogRequest"
              }
            }
          },
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/{accountId}/grant-consent": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "",
        "description": "Grant consent to a business application on behalf of a Private Market demand account",
        "operationId": "GrantConsent",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The demand account ID on which to grant consent",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            }
          },
          "x-bodyName": "grantConsentInput"
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/retail-media/accounts/{accountId}/retailers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountRetailersByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/accounts/sellers/search": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Get the sellers mapped to provided accounts",
        "operationId": "SearchSellers",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            }
          },
          "x-bodyName": "searchDetails"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/assets": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates an asset",
        "operationId": "CreateAsset",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AssetFile"
                ],
                "properties": {
                  "AssetFile": {
                    "type": "string",
                    "description": "The asset binary content",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/auction-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the auction line item for the given line item id",
        "operationId": "GetApiV2ExternalAuctionLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the auction line item for the given line item id",
        "operationId": "PutApiV2ExternalAuctionLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionLineItemUpdateModelRequest"
              }
            }
          },
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/audience-segments/{audience-segment-id}/contact-list/add-remove": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove identifiers to or from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "updateContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaContactlistOperation"
                },
                "example": {
                  "type": "AddRemoveContactlistResult",
                  "data": {
                    "contactListId": 568708742535471104,
                    "operation": "add",
                    "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                    "identifierType": "madid",
                    "nbValidIdentifiers": 7343,
                    "nbInvalidIdentifiers": 13,
                    "sampleInvalidIdentifiers": [
                      "InvalidIdentifier"
                    ]
                  },
                  "errors": [
                    {
                      "traceId": "667ac683ac797284.667ac683ac797284<:667ac683ac797284",
                      "type": "availability",
                      "code": "internal-error",
                      "instance": "",
                      "title": "Internal error"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers'"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [ ]
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/audience-segments/{audience-segment-id}/contact-list/clear": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete all identifiers from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "DeleteContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Contact List identifiers were deleted",
            "content": {
              "application/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "667ac683ac797284.667ac683ac797284<:667ac683ac797284",
                      "type": "availability",
                      "code": "internal-error",
                      "instance": "",
                      "title": "Internal error"
                    }
                  ],
                  "warnings": [ ]
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/balances/{balance-id}/campaigns": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of campaigns for the given balanceId",
        "operationId": "BalancesApi_GetApi202110ExternalBalanceCampaignsByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to get campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/balances/{balance-id}/campaigns/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "appends one or more campaigns to the specified balance",
        "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsAppendByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to add campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The campaigns to append",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
              }
            }
          },
          "x-bodyName": "campaigns"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/balances/{balance-id}/campaigns/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes one or more campaigns on the specified balance",
        "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsDeleteByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to remove campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The campaigns to append",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
              }
            }
          },
          "x-bodyName": "campaigns"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/balances/{balanceId}/history": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets the balance's historical change data.",
        "operationId": "GetBalanceHistory",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "Balance id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "limitToChangeTypes",
            "in": "query",
            "description": "Comma separated change types string that will be queried.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) starting offset in the collection.",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfBalanceHistoryChangeDataCaptureV1"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/campaigns/{campaign-id}/auction-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of auction line item objects for the given campaign id",
        "operationId": "GetApiV2ExternalCampaignAuctionLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates new auction line item with the specified settings",
        "operationId": "PostApiV2ExternalCampaignAuctionLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionLineItemCreateModelRequest"
              }
            }
          },
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/campaigns/{campaign-id}/preferred-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of preferred line item objects for the given campaign id",
        "operationId": "GetApiV2ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2PagedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2PagedListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates a new preferred line item with the specified settings",
        "operationId": "LineItemsApi_PostApi202110ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemCreateModelV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the editable and creatable campaign attributes including all types of budgets given the campaign id",
        "operationId": "Campaigns_GetApi202301ExternalCampaignByCampaignId",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Campaign Id of the campaign detail",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Edit a campaign for the given campaign id with a given editable attributes. This will return updated creatable and editable attributes of the campaign as the result of the operation. Pacing can be adjusted and affected by the status of the campaign and the days left on the campaign if auto daily pacing is enabled.",
        "operationId": "Campaigns_PutApi202301ExternalCampaignByCampaignId",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Campaign Id of the updating campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Editable campaign attributes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCampaignV202301"
              }
            }
          },
          "x-bodyName": "campaign"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/campaigns/{campaignId}/campaign-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get current campaign budget overrides by given external campaign id.",
        "operationId": "GetCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update campaign budget overrides by given external campaign id and new campaign budget overrides settings.",
        "operationId": "UpdateCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New campaign budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            }
          },
          "x-bodyName": "campaignBudgetOverridesInput"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/catalogs/{catalogId}/output": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Output the indicated catalog. Catalogs are only available for retrieval when their associated status request\r\nis at a Success status.\r\nProduces application/x-json-stream of v2021_07 CatalogProduct json objects.",
        "operationId": "CatalogApi_GetApiV1ExternalCatalogOutputByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog download initiated.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "Catalog has expired.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": { }
            }
          },
          "400": {
            "description": "The indicated catalog is not available for retrieval, wait for a success status.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/retail-media/catalogs/{catalogId}/status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Check the status of a catalog request.",
        "operationId": "CatalogApi_GetApiV1ExternalCatalogStatusByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog request found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/categories": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search categories by text and retailer.",
        "operationId": "CategorySearchApi_GetApi202204ExternalCategories",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "retailerId",
            "in": "query",
            "description": "The retailer id for which Categories fetched",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "textSubstring",
            "in": "query",
            "description": "Query string to search across Categories",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category202204ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/categories/{categoryId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search for a specific category by categoryId.",
        "operationId": "CategorySearchApi_GetApi202204ExternalCategorieByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of the desired category",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieval completed and category is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category202204"
                }
              }
            }
          },
          "400": {
            "description": "No IDs were passed in."
          },
          "500": {
            "description": "A non-request input based error occurred in the server."
          }
        }
      }
    },
    "/retail-media/line-items/{externalLineItemId}/keywords/recommended": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieves a collection of recommended keywords for a line item",
        "operationId": "GetRecommendedKeywords",
        "parameters": [
          {
            "name": "externalLineItemId",
            "in": "path",
            "description": "The external line item identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRecommendedKeywordsResult"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{id}/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch keywords associated with the specified line item",
        "operationId": "FetchKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordsModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{id}/keywords/add-remove": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add or Remove keywords from the line item in bulk",
        "operationId": "AddRemoveKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveKeywordsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{id}/keywords/set-bid": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Set bid overrides for associated keywords to the given line item in bulk",
        "operationId": "SetKeywordBids",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBidsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the line item for the given line item id",
        "operationId": "GetApiV2ExternalLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/bid-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch all bid multipliers for a given line item",
        "operationId": "GetApiV2ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "External LineItemId for bid multiplier retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BidMultipliers Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the bid multipliers for a given line item",
        "operationId": "PutApiV2ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "External LineItemId for bid multiplier retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New Bid Multipliers to be set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemBidMultipliersV2Request"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "BidMultipliers Updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/products": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieve a page of promoted products for a line item",
        "operationId": "FetchPromotedProducts",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of attribute names from the response model to compute and return.\r\n            Valid values are `status` and `bidOverride` in any order. Defaults to `status`.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum page size to fetch. Defaults to 500.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first item to fetch. Defaults to zero.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted products associated with the line item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedProductResourceCollectionOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/products/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append a collection of promoted products to a line item",
        "operationId": "AppendPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promoted products appended to the line item with warnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "204": {
            "description": "Promoted products appended to the line item"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/products/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Remove a collection of promoted products from a line item",
        "operationId": "DeletePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products removed from the line item"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/products/pause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Pause a collection of promoted products associated with a line item",
        "operationId": "PausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{line-item-id}/products/unpause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Un-pause a collection of promoted products associated with a line item",
        "operationId": "UnpausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products un-paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/line-items/{lineItemId}/line-item-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a collection of monthly and daily budget overrides for the provided line item.",
        "operationId": "GetLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The line item id to get budget overrides for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update line item budget overrides by given external line item id and new line item budget overrides settings.",
        "operationId": "UpdateLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "Line item external id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New line item budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            }
          },
          "x-bodyName": "lineItemBudgetOverridesInput"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the preferred line item for the given line item id",
        "operationId": "GetApiV2ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the preferred line item for the given line item id",
        "operationId": "LineItemsApi_PutApi202110ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemUpdateModelV2Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the add to basket target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the add to basket target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The add to basket target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketTarget202110Request"
              }
            }
          },
          "x-bodyName": "addToBasketTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more add to basket ids to targeting on the specified line item.  The resulting state of the add to basket target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more add to basket ids from targeting on the specified line item.  The resulting state of the add to basket target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/audiences": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the audience target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the audience target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The audience target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceTarget202110Request"
              }
            }
          },
          "x-bodyName": "audienceTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more audiences ids to targeting on the specified line item.  The resulting state of the audience target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Audience ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more audiences ids from targeting on the specified line item.  The resulting state of the audience target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Audience ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/stores": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the store target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the store target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The store target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTarget202110Request"
              }
            }
          },
          "x-bodyName": "storeTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/stores/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more store ids to targeting on the specified line item.  The resulting state of the store target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Store ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/preferred-line-items/{line-item-id}/targeting/stores/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more store ids from targeting on the specified line item.  The resulting state of the store target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Store ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
              }
            }
          },
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/reports/{reportId}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the output of an async report",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/reports/{reportId}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the status of an async report",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/reports/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Return an asynchronous Campaigns Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/reports/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Line Items Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/reports/revenue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Revenue Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncRevenueReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/retailers/{retailer-id}/templates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get retailer creative templates",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerTemplatesByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "External retailer id to retrieve creative templates for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/retailers/{retailer-id}/templates/{template-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the template for the specified retailer id and template id",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerByRetailerId}Templates{templateId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "Retailer Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "template-id",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template found for the retailer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/retailers/{retailerId}/cpc-min-bids": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get overall and individual minimum bid amount for given retailer id and sku id list.",
        "operationId": "GetCpcMinBidsBySkuIdsV1",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "Retailer Id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Cpc minimum bid amount request object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            }
          },
          "x-bodyName": "cpcMinBidsRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/retail-media/retailers/{retailerId}/pages": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the page types available for the given retailer",
        "operationId": "RetailerApi_GetApi202110ExternalRetailerPagesByRetailerId",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailers to fetch pages for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pages fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalRetailerPages202110"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddFundsToBalanceV2": {
        "required": [
          "deltaAmount"
        ],
        "type": "object",
        "properties": {
          "deltaAmount": {
            "type": "number",
            "description": "Amount of billable funds to be added / decreased allotted to the balance.",
            "format": "decimal"
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options of adding funds to a balance.",
        "x-used-in-request": true
      },
      "AddFundsToBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAddFundsToBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "AddRemoveKeywordModel": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword to be added or removed",
        "x-used-in-request": true
      },
      "AddRemoveKeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddRemoveKeywordModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "AddRemoveKeywordsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to add or remove keywords from a line item",
        "x-used-in-request": true
      },
      "AddRemoveKeywordsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "AddToBasketIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AddToBasketTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AddToBasketTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Used for the /me endpoint. Contains information about the currently authenticated application that we accept to give to our clients",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-response": true
      },
      "Asset": {
        "required": [
          "fileExtension"
        ],
        "type": "object",
        "properties": {
          "fileExtension": {
            "type": "string",
            "description": "The file extension that is asset is representing. Example: jpg, png, gif or pdf."
          },
          "fileLocation": {
            "type": "string",
            "description": "A url pointing towards the static file the asset represents.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Handles pointing towards binary content that advertisers can use later on, for example in their creatives.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "AssetResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Asset"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents an entity in a guild compliant way",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssetResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body",
        "x-used-in-response": true
      },
      "AsyncCampaignsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "id": {
            "type": "string",
            "description": "Campaign id to report on"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Campaigns report body request",
        "x-used-in-request": true
      },
      "AsyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncCampaignsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "id": {
            "type": "string",
            "description": "Line Item id to report on"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Line Items report body request",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncLineItemsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatusResponseResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "Async Report response format",
        "x-used-in-response": true
      },
      "AsyncRevenueReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account ids to filter"
          },
          "advertiserTypes": {
            "type": "array",
            "items": {
              "enum": [
                "retailer",
                "brand",
                "seller"
              ],
              "type": "string"
            },
            "description": "Filter on the type of advertiser: retailer, brand, seller"
          },
          "buyType": {
            "enum": [
              "auction",
              "preferredDeals",
              "sponsorship"
            ],
            "type": "string",
            "description": "Filter on buy type: Auction, Preferred Deals or Sponsorship"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "clickMatchLevel": {
            "enum": [
              "sameSku",
              "sameCategory",
              "sameBrand",
              "campaign"
            ],
            "type": "string",
            "description": "Click Match Level: Campaign, Same SKU, Same Category or Same Brand",
            "default": "campaign"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "parentAccount",
                "accountId",
                "accountName",
                "accountTypeName",
                "advertiserType",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "campaignStartDate",
                "campaignEndDate",
                "lineItemId",
                "lineItemName",
                "lineItemStartDate",
                "lineItemEndDate",
                "lineItemStatus",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "placementId",
                "placementName",
                "pageTypeName",
                "environment",
                "pageCategory",
                "advProductId",
                "advProductName",
                "advProductGtin",
                "advProductMpn",
                "buyType",
                "soldBy",
                "saleChannel",
                "salesChannel",
                "attributionSettings",
                "activityType",
                "keyword",
                "skuRelation",
                "retailerCategoryId",
                "retailerCategoryName",
                "taxonomyBreadcrumb",
                "taxonomy1Id",
                "taxonomy1Name",
                "taxonomy2Id",
                "taxonomy2Name",
                "taxonomy3Id",
                "taxonomy3Name",
                "taxonomy4Id",
                "taxonomy4Name",
                "taxonomy5Id",
                "taxonomy5Name",
                "taxonomy6Id",
                "taxonomy6Name",
                "taxonomy7Id",
                "taxonomy7Name"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json"
          },
          "id": {
            "type": "string",
            "description": "Supply account id to report on"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Supply account ids to report on"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to filter"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "numberOfCampaigns",
                "numberOfLineItems",
                "numberOfSkus",
                "skuPrice",
                "pageViews",
                "impressions",
                "productClicks",
                "placementClicks",
                "clicks",
                "sales",
                "units",
                "transactions",
                "assistedSales",
                "assistedUnits",
                "revenue",
                "openAuctionRevenue",
                "preferredDealsRevenue",
                "ctr",
                "cr",
                "cpc",
                "cpm",
                "roas",
                "workingMedia",
                "netRevenue",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoResumed",
                "videoPaused",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "advertiser",
              "environment",
              "pageType",
              "productCategory",
              "brand"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to advertiser reportType"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Retailer ids to filter"
          },
          "revenueType": {
            "enum": [
              "auction",
              "preferred"
            ],
            "type": "string",
            "description": "Type of revenue"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "skuRelations": {
            "type": "array",
            "items": {
              "enum": [
                "sameSku",
                "sameParentSku",
                "sameCategory",
                "sameBrand",
                "sameSeller"
              ],
              "type": "string"
            },
            "description": "Filter on sku relations: Same SKU, Same Parent SKU, Same Category, Same Brand or Same Seller"
          },
          "soldBy": {
            "enum": [
              "directSold",
              "indirectSold",
              "privateMarket"
            ],
            "type": "string",
            "description": "Filter on the seller: Indirect Sold, Direct Sold or Private Market"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "viewMatchLevel": {
            "enum": [
              "sameSku",
              "sameCategory",
              "sameBrand",
              "campaign"
            ],
            "type": "string",
            "description": "View Match Level: Campaign, Same SKU, Same Category or Same Brand",
            "default": "campaign"
          }
        },
        "description": "Async Revenue report body request",
        "x-used-in-request": true
      },
      "AsyncRevenueReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncRevenueReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncRevenueReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncRevenueReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AuctionLineItemCreateModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfAuctionLineItemCreateModel"
          }
        },
        "description": "Data model for a create input resource",
        "x-used-in-request": true
      },
      "AuctionLineItemPagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "AuctionLineItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "AuctionLineItemUpdateModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAuctionLineItemUpdateModel"
          }
        },
        "description": "Data model for an input resource",
        "x-used-in-request": true
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of an audience error",
        "x-used-in-response": true
      },
      "AudienceIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AudienceTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AudienceTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of the warning",
        "x-used-in-response": true
      },
      "BalanceCampaign202110ListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
            }
          }
        },
        "description": "A class implementing the request of the Criteo API with a collection of entities as body",
        "x-used-in-request": true
      },
      "BalanceCampaign202110PagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "BalanceHistoryChangeDataCaptureV1": {
        "required": [
          "changeDetails",
          "changeType",
          "dateOfModification",
          "modifiedByUser"
        ],
        "type": "object",
        "properties": {
          "changeDetails": {
            "$ref": "#/components/schemas/ChangeDetailsV1"
          },
          "changeType": {
            "enum": [
              "BalanceCreated",
              "BalanceAdded",
              "BalanceRemoved",
              "BalanceUncapped",
              "BalanceCapped",
              "EndDate",
              "StartDate",
              "BalanceName",
              "PoNumber",
              "ValueAdd",
              "Unknown"
            ],
            "type": "string",
            "description": "Represent the type of change states of the history."
          },
          "dateOfModification": {
            "type": "string",
            "description": "Date when data change has occured.",
            "format": "date-time"
          },
          "memo": {
            "type": "string",
            "description": "Memo associate with the insertion order modification.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "modifiedByUser": {
            "type": "string",
            "description": "Username who modified the insertion order."
          }
        },
        "additionalProperties": false,
        "description": "Data model represents the data change capture of balance history.",
        "x-used-in-response": true
      },
      "BalanceResponseV2": {
        "required": [
          "name",
          "startDate",
          "balanceType",
          "spendType",
          "privateMarketBillingType"
        ],
        "type": "object",
        "properties": {
          "balanceType": {
            "enum": [
              "unknown",
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Type of the balance."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time of the balance.",
            "format": "date-time"
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "privateMarketBillingType": {
            "enum": [
              "notApplicable",
              "billByRetailer",
              "billByCriteo",
              "unknown"
            ],
            "type": "string",
            "description": "Billing type for Private Market of the balance."
          },
          "remaining": {
            "type": "number",
            "description": "Amount of remaining funds of the balance.",
            "format": "decimal",
            "nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Spend Type of the balance."
          },
          "spent": {
            "type": "number",
            "description": "Amount of spent funds of the balance.",
            "format": "decimal",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "scheduled",
              "active",
              "ended"
            ],
            "type": "string",
            "description": "Status of the balance."
          },
          "updatedAt": {
            "type": "string",
            "description": "Update time of the balance.",
            "format": "date-time"
          }
        },
        "description": "A Retail Media Balance used to determine the funds available for any or all campaigns in an account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "BalanceResponseV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-used-in-response": true
      },
      "CampaignAttributesV202301": {
        "required": [
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string",
            "default": "30D"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "drawableBalanceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string",
            "default": "auction"
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "default": "none"
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Campaign",
        "x-used-in-request": true
      },
      "CampaignBudgetOverrides": {
        "required": [
          "dailyBudgetOverrides",
          "monthlyBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "dailyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignDailyBudgetOverride"
            },
            "description": "Campaign budget override daily part, chronological order restricted."
          },
          "monthlyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMonthlyBudgetOverride"
            },
            "description": "Campaign budget override monthly part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Campaign budget overrides including Monthly and Daily budget overrides.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "CampaignDailyBudgetOverride": {
        "required": [
          "duration",
          "maxDailySpend"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign daily budget override.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "CampaignMonthlyBudgetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign monthly budget override.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "CampaignV202301": {
        "required": [
          "accountId",
          "promotedBrandIds",
          "budgetSpent",
          "budgetRemaining",
          "createdAt",
          "updatedAt",
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "long-id"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string",
            "default": "30D"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "drawableBalanceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          },
          "promotedBrandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "inactive",
              "scheduled",
              "ended"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string",
            "default": "auction"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "default": "none"
          }
        },
        "description": "A Retail Media Campaign used to represent an advertiser's marketing objective",
        "x-used-in-response": true
      },
      "Category202204": {
        "required": [
          "text",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category Name"
          },
          "parentId": {
            "type": "string",
            "description": "Category ParentId"
          },
          "text": {
            "type": "string",
            "description": "Category Text"
          }
        },
        "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID",
        "x-used-in-response": true
      },
      "Category202204ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCategory202204"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources",
        "x-used-in-response": true
      },
      "ChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to modify schedule of a balance.",
        "x-used-in-request": true
      },
      "ChangeDatesOfBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfChangeDatesOfBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "ChangeDetailsV1": {
        "type": "object",
        "properties": {
          "changeValue": {
            "type": "string",
            "description": "Change detail of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "previousValue": {
            "type": "string",
            "description": "Previous value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Change details of a property of the balance.",
        "x-used-in-response": true
      },
      "ChoiceOption": {
        "required": [
          "dependentVariables",
          "id"
        ],
        "type": "object",
        "properties": {
          "dependentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            },
            "description": "Template variables unblocked when the option is chosen"
          },
          "id": {
            "type": "string",
            "description": "The id of the option"
          }
        },
        "additionalProperties": false,
        "description": "An option given in a choice",
        "x-used-in-response": true
      },
      "ChoiceVariableSpecification": {
        "required": [
          "options"
        ],
        "type": "object",
        "properties": {
          "maxSelected": {
            "type": "integer",
            "description": "The maximum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minSelected": {
            "type": "integer",
            "description": "The minimum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChoiceOption"
            },
            "description": "The available options"
          }
        },
        "additionalProperties": false,
        "description": "Specification of choice variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ChoiceVariableValue": {
        "required": [
          "chosenOptions"
        ],
        "type": "object",
        "properties": {
          "chosenOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The chosen options"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template choice variable (among different accepted options)",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ColorVariableValue": {
        "type": "object",
        "properties": {
          "color": {
            "pattern": "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type": "string",
            "description": "The displayed color (HEX format)",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template color variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CommonError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API Common error structure",
        "x-used-in-response": true
      },
      "CommonLineItemPagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCommonLineItem"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "CommonLineItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCommonLineItem"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "CommonWarning": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API Base common warning",
        "x-used-in-response": true
      },
      "CpcMinBidsRequest": {
        "required": [
          "skuIds"
        ],
        "type": "object",
        "properties": {
          "skuIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Sku id list for which minimum bid amounts are requested."
          }
        },
        "additionalProperties": false,
        "description": "Cpc Min Bids request object.",
        "x-used-in-request": true
      },
      "CpcMinBidsResponse": {
        "required": [
          "overallMinBid",
          "skuMinBids"
        ],
        "type": "object",
        "properties": {
          "overallMinBid": {
            "type": "number",
            "description": "Overall minimum bid amount for the given list of sku ids.",
            "format": "double"
          },
          "skuMinBids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkuMinBid"
            },
            "description": "Minimum bid amounts for each of the given list of sku ids."
          }
        },
        "additionalProperties": false,
        "description": "Cpc Min Bids response object.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CreateBalanceV2": {
        "required": [
          "name",
          "startDate",
          "spendType"
        ],
        "type": "object",
        "properties": {
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Type of the balance spend."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date"
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Balance",
        "x-used-in-request": true
      },
      "CreateBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreateBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "Creative2": {
        "required": [
          "name",
          "status",
          "brandId",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "associatedLineItemIds",
          "updatedAt",
          "creativeFormatV2Type",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated Line Item Ids"
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64"
          },
          "creativeFormatV2Type": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "Custom",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "format": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment2"
            },
            "description": "Environment type (e.g. mobile, web, app)"
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32"
          },
          "status": {
            "enum": [
              "Ready",
              "InUse",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "format": "string"
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Template Name"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A creative entity",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Creative202110": {
        "required": [
          "name",
          "status",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "brandId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string"
          },
          "retailerId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "enum": [
              "Ready",
              "In_Use",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "format": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata and usage info of a preferred deals creative",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Creative202110ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative202110"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative202210": {
        "required": [
          "name",
          "status",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "creativeFormatType",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated Line Item Ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "creativeFormatType": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "format": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment202210"
            },
            "description": "Environment type (e.g. mobile, web, app)"
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32"
          },
          "status": {
            "enum": [
              "Ready",
              "In_Use",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "format": "string"
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Template Name"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A creative entity",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Creative202210Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative202210"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative2"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "CreativeCreateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Create model of a creative",
        "x-used-in-request": true
      },
      "CreativeUpdateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Update model of a creative",
        "x-used-in-request": true
      },
      "DailyLineItemBudgetOverride": {
        "required": [
          "duration"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a daily budget override",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "EditableCampaignAttributesV202301": {
        "required": [
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate",
          "clickAttributionWindow",
          "viewAttributionWindow"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string"
          }
        },
        "description": "An object that represents the available options to set when editing a Retail Media Campaign",
        "x-used-in-request": true
      },
      "EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceOfRetailMediaChildAccount"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata.",
        "x-used-in-response": true
      },
      "EntityResourceOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaAccount"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "EntityResourceOfRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaChildAccount"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "x-used-in-response": true
      },
      "EntityResourceOutcomeOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourceOfRetailMediaAccount"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "x-used-in-response": true
      },
      "ErrorCodeResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Definition of the error code",
        "x-used-in-response": true
      },
      "ExternalAccount": {
        "required": [
          "countries",
          "currency",
          "name",
          "parentAccountLabel",
          "timeZone",
          "type"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currency": {
            "type": "string"
          },
          "name": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string"
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "parentAccountLabel": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string"
          },
          "subtype": {
            "enum": [
              "unknown",
              "brand",
              "seller"
            ],
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "timeZone": {
            "type": "string"
          },
          "type": {
            "enum": [
              "unknown",
              "supply",
              "demand"
            ],
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Account used to launch campaigns and line items",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalAddToBasketIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category ids that add to basket should target"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product ids that add to basket should target"
          }
        },
        "description": "Update model for updating add to basket target ids",
        "x-used-in-request": true
      },
      "ExternalAddToBasketTarget202110": {
        "required": [
          "scope"
        ],
        "type": "object",
        "properties": {
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category ids that add to basket should target"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product ids that add to basket should target"
          },
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the add to basket target"
          }
        },
        "description": "Identifies add to basket targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalAuctionLineItem": {
        "required": [
          "name",
          "startDate",
          "targetRetailerId",
          "campaignId",
          "budgetRemaining",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "format": "double"
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "default": false
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A Retail Media Auction Line Item used to hold bid settings for one or many promoted products on a single retailer",
        "x-used-in-response": true
      },
      "ExternalAuctionLineItemCreateModel": {
        "required": [
          "name",
          "startDate",
          "targetRetailerId"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "default": false
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          }
        },
        "description": "Model to create a retail media auction line item",
        "x-used-in-request": true
      },
      "ExternalAuctionLineItemUpdateModel": {
        "required": [
          "name",
          "startDate",
          "status",
          "targetBid",
          "isAutoDailyPacing"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        },
        "description": "Model to update a retail media auction line item",
        "x-used-in-request": true
      },
      "ExternalAudienceIdsUpdateModel202110": {
        "required": [
          "audienceIds"
        ],
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "Audience ids that should be targeted"
          }
        },
        "description": "Update model for updating audience target ids",
        "x-used-in-request": true
      },
      "ExternalAudienceTarget202110": {
        "required": [
          "scope",
          "audienceIds"
        ],
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "Audience ids that should be targeted"
          },
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the audience target"
          }
        },
        "description": "Identifies audience targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalBalanceCampaign202110": {
        "type": "object",
        "description": "Campaigns related to the balance",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalBrand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Brand used to represent a collection of products sold under the same umbrella name",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalCatalogRequest": {
        "type": "object",
        "properties": {
          "brandIdFilter": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "format": {
            "enum": [
              "json-newline"
            ],
            "type": "string",
            "default": "json-newline"
          }
        },
        "description": "A request for a catalog under the specified format. Currently \"json-newline\" is supported.",
        "x-used-in-request": true
      },
      "ExternalCatalogStatus": {
        "required": [
          "status",
          "currency",
          "rowCount",
          "fileSizeBytes",
          "md5Checksum",
          "createdAt",
          "message"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "description": "An ISO4217 representation of the currency products are listed under in this catalog.",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "md5Checksum": {
            "type": "string",
            "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "An optional information message intended for developer consumption.",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "description": "An enumeration of the status of the catalog."
          }
        },
        "description": "The status of an asynchronous request to generate a catalog",
        "x-used-in-response": true
      },
      "ExternalCommonLineItem": {
        "required": [
          "name",
          "type",
          "startDate",
          "targetRetailerId",
          "campaignId",
          "budgetRemaining",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "format": "double"
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A common line item to hold line item information shared between preferred and auction line items",
        "x-used-in-response": true
      },
      "ExternalLineItemBidMultipliersV2": {
        "type": "object",
        "properties": {
          "category": {
            "type": "number",
            "description": "Categories Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "categoryMenu": {
            "type": "number",
            "description": "CategoryMenu Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "checkout": {
            "type": "number",
            "description": "Checkout Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "confirmation": {
            "type": "number",
            "description": "Confirmation Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "deals": {
            "type": "number",
            "description": "Deals Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "favorites": {
            "type": "number",
            "description": "Favorites Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "home": {
            "type": "number",
            "description": "Home Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "merchandising": {
            "type": "number",
            "description": "Merchandising Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "productDetail": {
            "type": "number",
            "description": "ProductDetail Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "search": {
            "type": "number",
            "description": "Search Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "searchBar": {
            "type": "number",
            "description": "SearchBar Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "The Bid Multiplier Entity of a LineItem",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemCappingV2": {
        "required": [
          "type",
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "unknown",
              "day",
              "session"
            ],
            "type": "string",
            "description": "Line Item Capping Type Enum"
          }
        },
        "description": "Frequency Capping for a Preferred Line Item",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPageCategoryV2": {
        "required": [
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "includeChildren": {
            "type": "boolean",
            "default": true
          }
        },
        "description": "Category information for a preferred line item page",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPageV2": {
        "required": [
          "pageType"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalLineItemPageCategoryV2"
            },
            "nullable": true
          },
          "pageType": {
            "enum": [
              "unknown",
              "search",
              "home",
              "browse",
              "checkout",
              "category",
              "productDetail",
              "confirmation",
              "merchandising",
              "deals",
              "favorites",
              "searchBar",
              "categoryMenu"
            ],
            "type": "string",
            "description": "Page Type Enum"
          },
          "searchKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "Page information for a preferred line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemCreateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "pacing",
          "page",
          "targetRetailerId",
          "budget"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "double"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "description": "Line Item Pacing Enum"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          }
        },
        "description": "Model used to create a preferred line item",
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemUpdateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "double"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "default": "accelerated"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          }
        },
        "description": "Model used to update a preferred line item",
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status",
          "targetRetailerId",
          "campaignId",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creativeId": {
            "type": "string",
            "description": "External creative Id",
            "format": "long-id",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A Retail Media Preferred Line Item used to hold bid settings for one or many promoted products on a single retailer",
        "x-used-in-response": true
      },
      "ExternalRetailer": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "campaignEligibilities": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "auction",
                "preferred",
                "offsite",
                "offsiteCpc"
              ],
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "maxLength": 100,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Retailer used to represent a selection of products from multiple brands",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailerPages202110": {
        "type": "object",
        "properties": {
          "pageTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of valid pages for a retailer"
          }
        },
        "description": "Wraps a list of valid pages for a retailer",
        "x-used-in-response": true
      },
      "ExternalRetailMediaAccount": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Paying entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries associated with the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currencyId": {
            "type": "string",
            "description": "the currency for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true,
            "x-optional-in-response": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "parentAccountLabel": {
            "type": "string",
            "description": "parent account label for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "brands": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "list of brands to link to the new account",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account",
        "x-used-in-request": true
      },
      "ExternalRetailMediaBrands": {
        "required": [
          "brandIds"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false,
        "description": "A collection of brand ids",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Paying entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries associated with the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currencyId": {
            "type": "string",
            "description": "the currency for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true,
            "x-optional-in-response": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaSeller": {
        "required": [
          "retailerId",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "integer",
            "description": "the retailer id",
            "format": "int32"
          },
          "sellerId": {
            "type": "string",
            "description": "the seller id"
          }
        },
        "additionalProperties": false,
        "description": "used to define the exact seller linked with an account",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaSellerAccountCreation": {
        "required": [
          "sellers"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalRetailMediaSeller"
            },
            "description": "list of sellers to associate to the new account"
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account",
        "x-used-in-request": true
      },
      "ExternalStoreIdsUpdateModel202110": {
        "required": [
          "storeIds"
        ],
        "type": "object",
        "properties": {
          "storeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Store ids that should be targeted"
          }
        },
        "description": "Update model for updating store target ids",
        "x-used-in-request": true
      },
      "ExternalStoreTarget202110": {
        "required": [
          "scope",
          "storeIds"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the store target"
          },
          "storeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Store ids that should be targeted"
          }
        },
        "description": "Identifies store targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "FilesVariablesSpecification": {
        "required": [
          "extensions"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Jpeg",
                "Png",
                "Gif",
                "Pdf"
              ],
              "type": "string",
              "description": "File extensions supported in templates",
              "format": "string"
            },
            "description": "The accepted file extensions"
          },
          "maxBytes": {
            "type": "integer",
            "description": "The maximum amount of bytes per file",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxFile": {
            "type": "integer",
            "description": "The maximum amount of files required",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minFiles": {
            "type": "integer",
            "description": "The minimum amount of files requires",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Specification of a file variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "FilesVariableValue": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The assets representing the images to be displayed"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template file variable (one or several files), like images in a creative",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "GrantConsentInput": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GrantConsentModelValueResource"
          }
        },
        "description": "An object that encapsulates GrantConsentModel",
        "x-used-in-request": true
      },
      "GrantConsentModel": {
        "required": [
          "callbackUrl",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "callbackState": {
            "type": "string"
          },
          "callbackUrl": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          }
        },
        "description": "An object that represents the required (ClientId and CallbackUrl) and optional (CallbackState) parameters when granting consents on behalf of a Private Market demand account",
        "x-used-in-request": true
      },
      "GrantConsentModelValueResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GrantConsentModel"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "HyperlinkVariableValue": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to redirect to",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template hyperlink variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "InputKeywords": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative broad phrased",
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative exact phrase",
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied positive exact phrases",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Keywords submitted by the user binned by type after some cleanup has been performed"
      },
      "InputKeywordsModel": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords to be added or removed from a line item."
      },
      "InputResourceOfAuctionLineItemCreateModel": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItemCreateModel"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "InputResourceOfPreferredLineItemCreateModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemCreateModelV2"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "JsonApiBodyWithExternalIdOfEditableCampaignAttributesV202301AndCampaignV202301": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/EditableCampaignAttributesV202301"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "JsonApiBodyWithIdOfInt64AndAccountAndAccount": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAccount"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndBrandAndBrand": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalBrand"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CampaignV202301"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogStatus"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersV2AndLineItemBidMultipliersV2": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalLineItemBidMultipliersV2"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndRetailerAndRetailer": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailer"
          },
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithoutIdOfCampaignAttributesV202301AndCampaignV202301": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CampaignAttributesV202301"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogRequest"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "JsonApiBodyWithoutIdOfSellerCatalogRequestAndSellerCatalogRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SellerCatalogRequest"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "JsonApiPageResponseOfAccount": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndAccountAndAccount"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfBrand": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndBrandAndBrand"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfCampaignV202301": {
        "required": [
          "metadata",
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfRetailer": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndRetailerAndRetailer"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiRequestOfCatalogRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "x-used-in-request": true
      },
      "JsonApiRequestOfSellerCatalogRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfSellerCatalogRequestAndSellerCatalogRequest"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "nullable": true,
        "x-used-in-request": true
      },
      "JsonApiSingleResponseOfCampaignV202301": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-used-in-response": true
      },
      "JsonApiSingleResponseOfCatalogStatus": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-used-in-response": true
      },
      "JsonApiSingleResponseOfLineItemBidMultipliersV2": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersV2AndLineItemBidMultipliersV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-used-in-response": true
      },
      "KeywordDataModel": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywordsModel"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "reviewState": {
            "$ref": "#/components/schemas/ReviewStateModel"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override"
      },
      "Keywords": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "description": "The bid to use when a positive keyword matches the shopper search phrase",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which this keyword was created in UTC",
            "format": "date-time"
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywords"
          },
          "matchType": {
            "enum": [
              "PositiveExactMatch",
              "NegativeExactMatch",
              "NegativeBroadMatch",
              "Unknown"
            ],
            "type": "string",
            "description": "The matching algorthim to be use when comparing this keyword with the shopper search phrase"
          },
          "reviewState": {
            "enum": [
              "InReview",
              "Recommended",
              "Approved",
              "AutoApproved",
              "Rejected",
              "AutoRejected",
              "Unkown"
            ],
            "type": "string",
            "description": "Review status of the keyword"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the keyword was last modified in UTC",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Data associated with a normalized keyword phrase"
      },
      "KeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/KeywordDataModel"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "KeywordsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/KeywordsModel"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "KeywordsModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/KeywordsModelResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Response object containing keywords associated with a line item.",
        "x-used-in-response": true
      },
      "LineItemBidMultipliersV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliersV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "nullable": true,
        "x-used-in-request": true
      },
      "LineItemBidMultipliersV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliersV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-used-in-response": true
      },
      "LineItemBudgetOverrides": {
        "required": [
          "dailyLineItemBudgetOverrides",
          "monthlyLineItemBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "dailyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyLineItemBudgetOverride"
            },
            "description": "Line item budget override daily part, chronological order restricted."
          },
          "monthlyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyLineItemBudegetOverride"
            },
            "description": "Line item budget override monthly part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Line item budget overrides including Monthly and Daily budget overrides.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "LineItemProductStatus": {
        "enum": [
          "unknown",
          "active",
          "paused"
        ],
        "type": "string",
        "description": "The status of a promoted product in the context of the line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "MatchTypeModel": {
        "enum": [
          "PositiveExactMatch",
          "NegativeExactMatch",
          "NegativeBroadMatch"
        ],
        "type": "string",
        "description": "The match type of a keyword.",
        "x-used-in-request": true
      },
      "Metadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "MonthlyLineItemBudegetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a monthly budget override",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "NillableDecimal": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The value. If missing or null the value is set to \"null\"",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value",
        "nullable": true,
        "x-used-in-request": true
      },
      "NillableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The string's value. If missing or null the string's value is set to \"null\"",
            "nullable": true
          }
        },
        "description": "Placeholder object for string value  for which \"null\" is a valid business value",
        "nullable": true,
        "x-used-in-request": true
      },
      "Outcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "PagedResourceCollectionOutcomeOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "PageMetadata": {
        "required": [
          "currentPageIndex",
          "currentPageSize"
        ],
        "type": "object",
        "properties": {
          "currentPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "currentPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "totalItemsAcrossAllPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request",
        "x-used-in-response": true
      },
      "PageOfBalanceHistoryChangeDataCaptureV1": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceHistoryChangeDataCaptureV1"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of items with metadata for offset and limit based paging.",
        "x-used-in-response": true
      },
      "PageTypeEnvironment2": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "description": "Creative format, defining where the creative can be served",
              "format": "string"
            },
            "description": "List of environments per PageType",
            "nullable": true,
            "x-optional-in-response": true
          },
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals",
              "Favorites",
              "SearchBar",
              "CategoryMenu"
            ],
            "type": "string",
            "description": "Creative PageType",
            "format": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The PageType-Environment Tuples for creatives",
        "x-used-in-response": true
      },
      "PageTypeEnvironment202210": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "description": "Creative format, defining where the creative can be served",
              "format": "string"
            },
            "description": "List of environments per PageType",
            "nullable": true,
            "x-optional-in-response": true
          },
          "pageType": {
            "enum": [
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Creative PageType",
            "format": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The PageType-Environment Tuples for creatives",
        "x-used-in-response": true
      },
      "PostCampaignV202301": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCampaignAttributesV202301AndCampaignV202301"
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Campaign",
        "x-used-in-request": true
      },
      "PreferredLineItemCreateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfPreferredLineItemCreateModelV2"
          }
        },
        "description": "Data model for a create input resource",
        "x-used-in-request": true
      },
      "PreferredLineItemUpdateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemUpdateModelV2"
          }
        },
        "description": "Data model for an input resource",
        "x-used-in-request": true
      },
      "PreferredLineItemV2PagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "PreferredLineItemV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-used-in-response": true
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem."
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "string",
            "description": "Technical information, only used in non-prod environments"
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type"
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category."
          }
        },
        "description": "Data model for common error or warning",
        "x-used-in-response": true
      },
      "ProductMetadata": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of items available.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "Zero based offset of the first item in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "responseCount": {
            "type": "integer",
            "description": "Number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata about the response. Used for pagination.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ProductResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "PromotedProduct": {
        "type": "object",
        "properties": {
          "bidOverride": {
            "type": "number",
            "description": "The bid override for the promoted product for this line item. Ignored unless adding a product.",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "A retailer defined SKU ID for the promoted product.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "$ref": "#/components/schemas/LineItemProductStatus"
          }
        },
        "additionalProperties": false,
        "description": "A promoted product.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "PromotedProductResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PromotedProduct"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing a promoted product.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "PromotedProductResourceCollectionInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request object containing promoted products to be appended, deleted, paused or unpaused.",
        "x-used-in-request": true
      },
      "PromotedProductResourceCollectionOutcome": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "meta": {
            "$ref": "#/components/schemas/ProductMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing promoted products.",
        "x-used-in-response": true
      },
      "PutCampaignV202301": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithExternalIdOfEditableCampaignAttributesV202301AndCampaignV202301"
          }
        },
        "description": "An object that represents the available options to set when editing a Retail Media Campaign",
        "x-used-in-request": true
      },
      "RecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Keywords"
            },
            "description": "Dictionary of keywords to their keyword models",
            "nullable": true,
            "x-optional-in-response": true
          },
          "recommendedKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Collection of recommended keywords",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for recommended keywords",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ReportOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "ResourceOfAddFundsToBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AddFundsToBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfAuctionLineItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItem"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ResourceOfAuctionLineItemUpdateModel": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItemUpdateModel"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "ResourceOfBalanceCampaign202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalBalanceCampaign202110"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents an entity in a guild compliant way",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ResourceOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BalanceResponseV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfCategory202204": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Category202204"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ResourceOfChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeDatesOfBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfCommonLineItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalCommonLineItem"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ResourceOfCreateBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfCreative2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfCreative202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative202110"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true
      },
      "ResourceOfCreative202210": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative202210"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfLineItemBidMultipliersV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalLineItemBidMultipliersV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "ResourceOfPreferredLineItemUpdateModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemUpdateModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "ResourceOfPreferredLineItemV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "nullable": true,
        "x-used-in-response": true
      },
      "ResourceOfTemplate": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Template"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfUpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateBalanceModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "RetailMediaContactlistAmendment": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users to add or remove, each in the schema specified"
              },
              "identifierType": {
                "enum": [
                  "Email",
                  "UserIdentifier",
                  "IdentityLink",
                  "Gum",
                  "CustomerId",
                  "PhoneNumber"
                ],
                "type": "string",
                "description": "What type of identifiers are used"
              },
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Whether to add or remove users"
              }
            },
            "description": "Attributes of retail media contact list amendment"
          },
          "type": {
            "type": "string",
            "description": "User List",
            "example": "AddRemoveContactlist"
          }
        },
        "description": "Request data of retail media contact list amendment",
        "x-used-in-request": true
      },
      "RetailMediaContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistAmendment"
          }
        },
        "description": "Request of Retail Media contactlist",
        "x-used-in-request": true
      },
      "RetailMediaContactlistOperation": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistOperationResponseAttributes"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "nullable": true,
            "example": "AddRemoveContactlistResult",
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Operation on Retail Media contact list",
        "x-used-in-response": true
      },
      "RetailMediaContactlistOperationResponseAttributes": {
        "required": [
          "contactListId",
          "operation",
          "requestDate"
        ],
        "type": "object",
        "properties": {
          "contactListId": {
            "type": "integer",
            "description": "The affected user list id",
            "format": "int64"
          },
          "identifierType": {
            "type": "string",
            "description": "The schema specified for of the identifiers",
            "nullable": true,
            "x-optional-in-response": true
          },
          "nbInvalidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were invalid for the specified schema",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "nbValidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were valid for the specified schema",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "operation": {
            "type": "string",
            "description": "The action recorded"
          },
          "requestDate": {
            "type": "string",
            "description": "When the action was recorded",
            "format": "date-time"
          },
          "sampleInvalidIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A sample of invalid identifiers if there is some",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "The attributes of Retail Media contact list operation",
        "x-used-in-response": true
      },
      "RetailMediaSeller": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "seller name",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "integer",
            "description": "the retailer id",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sellerId": {
            "type": "string",
            "description": "the seller id",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "used to define the exact seller linked with an account",
        "x-used-in-response": true
      },
      "ReviewStateModel": {
        "enum": [
          "InReview",
          "Recommended",
          "Approved",
          "AutoApproved",
          "Rejected",
          "AutoRejected"
        ],
        "type": "string",
        "description": "The state of a keyword in the context of a line item."
      },
      "RmAlgebraNodeV1": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "audienceSegmentId": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "not": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Node in the audience algebra definition.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the audience (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "description": "Description of the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "Name of the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata",
        "x-used-in-response": true
      },
      "RmAudienceSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audience ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids (linked to the result audiences)"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          }
        },
        "description": "Available filters to perform a search on audiences. If present, the filters are AND'ed together when applied.",
        "x-used-in-request": true
      },
      "RmAudienceSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "RmAudienceSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Metadata for the audience search response.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several values.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentCreateEntityV1": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "contactList": {
            "$ref": "#/components/schemas/RmContactListCreateV1"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsCreateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSegmentDeleteEntityV1": {
        "type": "object",
        "description": "Segment to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-request": true
      },
      "RmAudienceSegmentDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "RmAudienceSegmentEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the segment (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "contactList": {
            "$ref": "#/components/schemas/RmContactListV1"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "description": "Description of the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "ContactList",
              "Events"
            ],
            "type": "string",
            "description": "Type of segment (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "x-used-in-response": true
      },
      "RmAudienceSegmentEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata",
        "x-used-in-response": true
      },
      "RmAudienceSegmentIdEntityV1": {
        "type": "object",
        "description": "Audience Segment entity only with its ID",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "x-used-in-response": true
      },
      "RmAudienceSegmentIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceSegmentSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids"
          },
          "audienceSegmentTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "ContactList",
                "Events"
              ],
              "type": "string"
            },
            "description": "List of segment types"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          }
        },
        "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Metadata for the audience segment search response.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentUpdateEntityV1": {
        "type": "object",
        "properties": {
          "contactList": {
            "$ref": "#/components/schemas/RmContactListUpdateV1"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsUpdateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-request": true
      },
      "RmAudienceSegmentUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "RmcaCommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "type": "integer",
            "description": "The problem's HTTP Status code.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": { },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "RmContactListCreateV1": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list type"
          }
        },
        "description": "Settings to target users with your contact lists.",
        "x-used-in-request": true
      },
      "RmContactListStatisticsEntityV1": {
        "type": "object",
        "properties": {
          "matchRate": {
            "type": "number",
            "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "numberOfIdentifiers": {
            "type": "integer",
            "description": "Number of identifiers in the contact list.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "numberOfMatches": {
            "type": "integer",
            "description": "Number of matched identifiers in the contact list.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Contact list statistics.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "ContactListStatistics",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmContactListStatisticsEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmContactListStatisticsEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-used-in-response": true
      },
      "RmContactListUpdateV1": {
        "type": "object",
        "description": "Settings to update the contact list of the segment",
        "x-used-in-request": true
      },
      "RmContactListV1": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "Unknown",
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list identifier's type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Is the segment read-only",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sharingStatus": {
            "enum": [
              "Unknown",
              "NotShared",
              "SharedWithAll",
              "SharedWithDemandAccounts"
            ],
            "type": "string",
            "description": "Indicates if the contact list is shared with other accounts",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Settings to target users with your contact lists.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmEventsCreateV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the categories your segment might be interested in"
          },
          "lookbackDays": {
            "enum": [
              "Unknown",
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "Number of days of the lookback windows"
          },
          "maxPrice": {
            "type": "number",
            "description": "Reach people who’ve shown interest in products with a maximum price",
            "format": "double"
          },
          "minPrice": {
            "type": "number",
            "description": "Reach people who’ve shown interest in products with a minimum price",
            "format": "double"
          },
          "shopperActivity": {
            "enum": [
              "Unknown",
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Types of shopper activity."
          }
        },
        "description": "Settings to target users based on their behavior",
        "x-used-in-request": true
      },
      "RmEventsUpdateV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the categories your segment might be interested in"
          },
          "lookbackDays": {
            "enum": [
              "Unknown",
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "Number of days of the lookback windows"
          },
          "maxPrice": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "minPrice": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "shopperActivity": {
            "enum": [
              "Unknown",
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Types of shopper activity."
          }
        },
        "description": "Settings to target users based on their behavior",
        "x-used-in-request": true
      },
      "RmEventsV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of brand ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of category ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "lookbackDays": {
            "enum": [
              "Unknown",
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "The number of days to look back",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxPrice": {
            "type": "number",
            "description": "Maximum price of the products",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minPrice": {
            "type": "number",
            "description": "Minimum price of the products",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "shopperActivity": {
            "enum": [
              "Unknown",
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Reach people who performed specific action",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Settings to target users based on their behavior",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "SdkApiRestCommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "Section": {
        "required": [
          "templateVariables"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "templateVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            }
          },
          "title": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Section object that hold template variables",
        "nullable": true,
        "x-used-in-response": true
      },
      "SellerCatalogRequest": {
        "type": "object",
        "properties": {
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerIdentifier"
            },
            "description": "A list of sellers to restict the catalog to."
          }
        },
        "description": "Used to requst a catalog of seller SKUs",
        "nullable": true,
        "x-used-in-request": true
      },
      "SellerIdentifier": {
        "required": [
          "retailerId",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "string",
            "description": "The retailer Id that the seller operates under"
          },
          "sellerId": {
            "type": "string",
            "description": "The id for the seller based on the corresponding retailer"
          }
        },
        "description": "Identifies a Unique Seller",
        "x-used-in-request": true
      },
      "SellerSearch": {
        "required": [
          "accountIds"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of accounts to return seller information for. max length of 25"
          },
          "includeDetails": {
            "type": "boolean",
            "description": "whether to include additional fields beyond the sellerId and retailerId in the response.\r\nMay improve performance when set to false.",
            "default": false
          }
        },
        "additionalProperties": false,
        "description": "request body for the seller search endpoint",
        "x-used-in-request": true
      },
      "SellerSearchResult": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "the id for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaSeller"
            },
            "description": "the details for mapped sellers for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "holds an AccountId and the mapped seller information for that account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "SetBidModel": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override",
        "x-used-in-request": true
      },
      "SetBidsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetBidModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "SetBidsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetBidsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to set bid overrides for keywords associated with a line item",
        "x-used-in-request": true
      },
      "SetBidsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SetBidsModel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "SkuMinBid": {
        "required": [
          "minBid",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "minBid": {
            "type": "number",
            "description": "Minimum bid amount value.",
            "format": "double"
          },
          "skuId": {
            "type": "string",
            "description": "Sku id."
          }
        },
        "additionalProperties": false,
        "description": "An object represents the minimum bid amount value of a sku.",
        "x-used-in-response": true
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "md5CheckSum": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Status of an async report request",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "StatusResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/StatusResponse"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "StoreIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "StoreTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "StoreTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "Template": {
        "required": [
          "creativeFormat",
          "name",
          "skuCollectionMin",
          "skuPerCollectionMin",
          "allCollectionsMandatory",
          "createdAt",
          "updatedAt",
          "sections"
        ],
        "type": "object",
        "properties": {
          "allCollectionsMandatory": {
            "type": "boolean",
            "description": "Marks whether or not all collections are mandatory"
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which the template was created",
            "format": "date-time"
          },
          "creativeFormat": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "The kind of creative this template can be used to build.",
            "format": "string"
          },
          "displayableSkusMax": {
            "type": "integer",
            "description": "Maximum number of displayable skus",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "The name of the template"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            },
            "description": "The sections holding various template variables"
          },
          "skuCollectionMax": {
            "type": "integer",
            "description": "Maximum number of skus in the collection",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "skuCollectionMin": {
            "type": "integer",
            "description": "Minimum number of skus in the collection",
            "format": "int32"
          },
          "skuPerCollectionMax": {
            "type": "integer",
            "description": "Maximum number of skus per collection",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "skuPerCollectionMin": {
            "type": "integer",
            "description": "Minimum number of skus per collection",
            "format": "int32"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the template was updated",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A template for creating creatives.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TemplateListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfTemplate"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "TemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfTemplate"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "TemplateVariable": {
        "required": [
          "id",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "choiceVariableSpecification": {
            "$ref": "#/components/schemas/ChoiceVariableSpecification"
          },
          "filesVariablesSpecification": {
            "$ref": "#/components/schemas/FilesVariablesSpecification"
          },
          "id": {
            "type": "string",
            "description": "The id of the variable"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the variable is required"
          },
          "textVariableSpecification": {
            "$ref": "#/components/schemas/TextVariableSpecification"
          },
          "type": {
            "enum": [
              "Text",
              "Choice",
              "Color",
              "Files",
              "Hyperlink"
            ],
            "type": "string",
            "description": "The type of the variable",
            "format": "string"
          }
        },
        "additionalProperties": false,
        "description": "A variable in a creative template",
        "x-used-in-response": true
      },
      "TemplateVariableValue": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "choiceVariableValue": {
            "$ref": "#/components/schemas/ChoiceVariableValue"
          },
          "colorVariableValue": {
            "$ref": "#/components/schemas/ColorVariableValue"
          },
          "filesVariableValue": {
            "$ref": "#/components/schemas/FilesVariableValue"
          },
          "hyperlinkVariableValue": {
            "$ref": "#/components/schemas/HyperlinkVariableValue"
          },
          "id": {
            "type": "string",
            "description": "The id of the template variable the value is applied to"
          },
          "textVariableValue": {
            "$ref": "#/components/schemas/TextVariableValue"
          },
          "videoVariableValue": {
            "$ref": "#/components/schemas/VideoVariableValue"
          }
        },
        "additionalProperties": false,
        "description": "A value for a variable in a creative template.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "TextVariableSpecification": {
        "type": "object",
        "properties": {
          "maxChars": {
            "type": "integer",
            "description": "The maximum amount of characters accepted for the text",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Specification of a text variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TextVariableValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The displayed text",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template text variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "UpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when updating a Retail Media Balance.",
        "x-used-in-request": true
      },
      "UpdateBalanceModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfUpdateBalanceModelV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "ValueResourceCollectionInputOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfRetailMediaSeller"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for several value objects.",
        "x-used-in-request": true
      },
      "ValueResourceCollectionOutcomeOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfRetailMediaSeller"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects.",
        "x-used-in-response": true
      },
      "ValueResourceCollectionOutcomeOfSellerSearchResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfSellerSearchResult"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects.",
        "x-used-in-response": true
      },
      "ValueResourceCpcMinBidsRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CpcMinBidsRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ValueResourceCpcMinBidsResponse": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CpcMinBidsResponse"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceInputCpcMinBidsRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceCpcMinBidsRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrandAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrands"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfRetailMediaSellerAccountCreation": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaSellerAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfSellerSearch": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfSellerSearch"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CampaignBudgetOverrides"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LineItemBudgetOverrides"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RecommendedKeywordsResult"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaBrandAccountCreation"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ValueResourceOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaBrands"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaSeller"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "ValueResourceOfRetailMediaSellerAccountCreation": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaSellerAccountCreation"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ValueResourceOfSellerSearch": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SellerSearch"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ValueResourceOfSellerSearchResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SellerSearchResult"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeCpcMinBidsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceCpcMinBidsResponse"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRecommendedKeywordsResult"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrands"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object.",
        "x-used-in-response": true
      },
      "ValueTypeResourceOfAddToBasketIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAddToBasketIdsUpdateModel202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAddToBasketTarget202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAddToBasketTarget202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAudienceIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAudienceIdsUpdateModel202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAudienceTarget202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalAudienceTarget202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ValueTypeResourceOfStoreIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalStoreIdsUpdateModel202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfStoreTarget202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalStoreTarget202110"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "VideoVariableValue": {
        "required": [
          "url",
          "width",
          "height",
          "duration"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "minLength": 1,
            "type": "string",
            "description": "The video's duration"
          },
          "height": {
            "type": "integer",
            "description": "The video's height",
            "format": "int32"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "The vast video url"
          },
          "width": {
            "type": "integer",
            "description": "The video's width",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template video variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Analytics"
    },
    {
      "name": "Audience"
    },
    {
      "name": "Balance"
    },
    {
      "name": "Campaign"
    },
    {
      "name": "Gateway"
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}