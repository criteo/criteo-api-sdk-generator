{
    "openapi": "3.0.1",
    "info": {
        "title": "Criteo API",
        "description": "Criteo publicly exposed API",
        "version": "2022-04"
    },
    "servers": [
        {
            "url": "https://api.criteo.com"
        }
    ],
    "paths": {
        "/me": {
            "get": {
                "tags": [
                    "Gateway"
                ],
                "description": "Get information about the currently logged application",
                "operationId": "GetCurrentApplication",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Creates a token based either on supplied client credentials or on single use authorization code",
                "description": "Creates a token when the supplied client credentials are valid",
                "operationId": "GetToken",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "grant_type",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "type": "string"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "redirect_uri": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of account objects that the current user can access",
                "operationId": "AccountsApi_GetApiV1ExternalAccounts",
                "parameters": [
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{accountId}/retailers": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of retailer objects that are associated with the given account",
                "operationId": "AccountsApi_GetApiV1ExternalAccountRetailersByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The given account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{accountId}/brands": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of retailer objects that are associated with the given account",
                "operationId": "AccountsApi_GetApiV1ExternalAccountBrandsByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The given account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/assets": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Creates an asset",
                "operationId": "CreateAsset",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "AssetFile"
                                ],
                                "properties": {
                                    "AssetFile": {
                                        "type": "string",
                                        "description": "The asset binary content",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{accountId}/audiences": {
            "get": {
                "tags": [
                    "Audience"
                ],
                "description": "Get a page of audiences for a given account ID",
                "operationId": "AudienceApi_GetAudiencesByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "External account ID which owns audience.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-example": "68004146450571264"
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "Limits results to the entity IDs specified; parameter key is repeated, eg. limitToId=1&limitToId=2",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Specifies the maximum number of entities returned in a single page; defaults to 25 entities per page",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-example": 25
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "Returns the specified page of results given a pageSize; pages are 0-indexed",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-example": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A page of audiences for the supplied account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPageOfAudiencesByAccountIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid account ID.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "The audience was not found.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "406": {
                        "description": "The Accept header must contain application/json.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "415": {
                        "description": "The Content-Type header must be application/json if present.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Create an audience for a given account ID",
                "operationId": "AudienceApi_CreateAudience",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "ID of the account to which this audience belongs.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-example": "68004146450571264"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRetailMediaAudienceRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "201": {
                        "description": "The audience that was just created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateRetailMediaAudienceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid account ID. - OR - Missing or invalid retailerID field. - OR - Missing or invalid name field. Name should be less than 255 characters. - OR - Missing or invalid userType field. Valid values are: 'buy', 'view'. - OR - The retailerTaxonomyIds is not a valid list of IDs or may contain more than 100 elements. - OR - Missing or invalid lookbackDays field.  Valid values are: 7, 14,  30, 45, 60, 90, 120, 150 or 180. - OR - Exactly one of retailerTaxonomyIds or globalBrandIds must be specified, but not both. - OR - The retailer is invalid because it is not live - OR - The globalBrandIds is not a valid list of IDs or may contain more than 100 elements.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "The audience was not found. - OR - You do not have permission to access these global brands.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "406": {
                        "description": "The Accept header must contain application/json.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "409": {
                        "description": "An audience name should be unique per account.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "415": {
                        "description": "The Content-Type header must be application/json if present.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{accountId}/catalogs": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Create a request for a Catalog available to the indicated account.",
                "operationId": "CatalogApi_PostApiV1ExternalAccountCatalogsByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account to request the catalog for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonApiRequestOfCatalogRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Catalog request successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/catalogs/{catalogId}/status": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Check the status of a catalog request.",
                "operationId": "CatalogApi_GetApiV1ExternalCatalogStatusByCatalogId",
                "parameters": [
                    {
                        "name": "catalogId",
                        "in": "path",
                        "description": "A catalog ID returned from an account catalog request.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catalog request found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/catalogs/{catalogId}/output": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Output the indicated catalog. Catalogs are only available for retrieval when their associated status request\r\nis at a Success status.\r\nProduces application/x-json-stream of v2021_07 CatalogProduct json objects.",
                "operationId": "CatalogApi_GetApiV1ExternalCatalogOutputByCatalogId",
                "parameters": [
                    {
                        "name": "catalogId",
                        "in": "path",
                        "description": "A catalog ID returned from an account catalog request.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catalog download initiated.",
                        "content": {
                            "application/x-json-stream": {},
                            "application/json": {}
                        }
                    },
                    "400": {
                        "description": "The indicated catalog is not available for retrieval, wait for a success status.",
                        "content": {
                            "application/x-json-stream": {},
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/retailers/{retailerId}/pages": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the page types available for the given retailer",
                "operationId": "RetailerApi_GetApi202110ExternalRetailerPagesByRetailerId",
                "parameters": [
                    {
                        "name": "retailerId",
                        "in": "path",
                        "description": "The retailers to fetch pages for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pages fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalRetailerPages202110"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{account-id}/creatives": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get account creatives",
                "operationId": "CreativesApi_GetApi202110ExternalAccountCreativesByAccountId",
                "parameters": [
                    {
                        "name": "account-id",
                        "in": "path",
                        "description": "External account id to retrieve creatives for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Creatives found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Creative202110ListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/categories": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Endpoint to search categories by text and retailer.",
                "operationId": "CategorySearchApi_GetApi202204ExternalCategories",
                "parameters": [
                    {
                        "name": "retailerId",
                        "in": "query",
                        "description": "The retailer id for which Categories fetched",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "textSubstring",
                        "in": "query",
                        "description": "Query string to search across Categories",
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The start position in the overall list of matches. Must be zero or greater.",
                        "schema": {
                            "maximum": 500,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of results to return with each call. Must be greater than zero.",
                        "schema": {
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 100
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category202204ListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/categories/{categoryId}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Endpoint to search for a specific category by categoryId.",
                "operationId": "CategorySearchApi_GetApi202204ExternalCategorieByCategoryId",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of the desired category",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieval completed and category is returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category202204"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No IDs were passed in.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request input based error occurred in the server.",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/reports/campaigns": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "Request a campaign report",
                "operationId": "requestCampaignReport",
                "requestBody": {
                    "description": "// Body of the request\n{\n  \"data\": {\n    \"type\": \"RetailMediaReportRequest\",\n    \"attributes\": {\n      \"reportType\": string, // the name of the report being requested\n      //only one of \"id\" or \"ids\" can be provided for a request\n      \"id\": string, // the campaign id to select\n      \"ids\": Array[string], //the campaign ids to select\n      \"startDate\": string, // YYYY-MM-DD format\n      \"endDate\": string, // YYYY-MM-DD format\n      \"timeZone\": string, // examples: 'Europe/London', 'Asia/Tokyo', 'America/New_York'\n      // both attribution windows must be specified when one is specified\n      \"clickAttributionWindow\": \"7D\", \"14D\", or \"30D\"  // optional. defaults to campaign's click attribution window\n      \"viewAttributionWindow\": \"none\", \"1D\", \"7D\", \"14D\", \"30D\" // optional. defaults to campaign's view attribution window\n      \"format\": One of \"json\" (default),\"json-compact\",\"json-newline\" or \"csv\" // output format, defaults to json-compact\n    }\n  }\n}",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeReportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns the status of the report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeReportStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Authorization or token invalid"
                    },
                    "403": {
                        "description": "Must have access to RetailMedia accounts"
                    }
                }
            }
        },
        "/2022-04/retail-media/reports/line-items": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "Request a line item report",
                "operationId": "requestLineItemReport",
                "requestBody": {
                    "description": "// Body of the request\n{\n  \"data\": {\n    \"type\": \"RetailMediaReportRequest\",\n    \"attributes\": {\n      \"reportType\": string, // the name of the report being requested\n      //only one of \"id\" or \"ids\" can be provided for a request\n      \"id\": string, // the line item id to select\n      \"ids: Array[string] // the line item ids to select\n      \"startDate\": string, // YYYY-MM-DD format\n      \"endDate\": string, // YYYY-MM-DD format\n      \"timeZone\": string, // examples: 'Europe/London', 'Asia/Tokyo', 'America/New_York'\n      // both attribution windows must be specified when one is specified\n      \"clickAttributionWindow\": \"7D\", \"14D\", or \"30D\"  // optional. defaults to campaign's click attribution window\n      \"viewAttributionWindow\": \"none\", \"1D\", \"7D\", \"14D\", \"30D\" // optional. defaults to campaign's view attribution window\n      \"format\": One of \"json\" (default),\"json-compact\",\"json-newline\" or \"csv\" // output format, defaults to json-compact\n    }\n  }\n}",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnvelopeReportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns the status of the report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeReportStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequest"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Authorization or token invalid"
                    },
                    "403": {
                        "description": "Must have access to RetailMedia accounts"
                    }
                }
            }
        },
        "/2022-04/retail-media/reports/{reportId}/output": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "description": "Request the report output",
                "operationId": "getReportOutput",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "report id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ee439121-13e3-4734-9f67-c504dd921a41"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The output",
                        "headers": {
                            "Content-Disposition": {
                                "description": "Returns a filename for the output",
                                "required": true,
                                "schema": {
                                    "type": "string"
                                },
                                "example": "inline; filename=data_<reportId>.csv"
                            }
                        },
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Authorization or token invalid"
                    },
                    "403": {
                        "description": "Must have access to RetailMedia accounts"
                    },
                    "404": {
                        "description": "ReportId not found"
                    }
                }
            }
        },
        "/2022-04/retail-media/reports/{reportId}/status": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "description": "Get the status of the report",
                "operationId": "getReportStatus",
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "report id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ee439121-13e3-4734-9f67-c504dd921a41"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the status of the report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvelopeReportStatus"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Missing Authorization or token invalid"
                    },
                    "403": {
                        "description": "Must have access to RetailMedia accounts"
                    },
                    "404": {
                        "description": "ReportId not found"
                    }
                }
            }
        },
        "/2022-04/retail-media/auction-line-items/{line-item-id}/targeting/keywords": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint gets the keyword target on the specified line item.",
                "operationId": "TargetingApi_GetApi202110ExternalAuctionLineItemTargetingKeywordsByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/auction-line-items/{line-item-id}/targeting/keywords/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint appends one or more keywords to targeting on the specified line item.  The resulting state of the keyword target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalAuctionLineItemTargetingKeywordsAppendByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeywordTarget202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "keywordsToAppend"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/auction-line-items/{line-item-id}/targeting/keywords/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint removes one or more keywords from targeting on the specified line item.  The resulting state of the keyword target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalAuctionLineItemTargetingKeywordsDeleteByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KeywordTarget202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "keywordsToRemove"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeywordTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/stores": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint gets the store target on the specified line item.",
                "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint sets the scope of the store target on the specified line item.",
                "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The store target to set the scope for",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTarget202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "storeTarget"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/stores/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint appends one or more store ids to targeting on the specified line item.  The resulting state of the store target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresAppendByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Store ids to append to the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToAppend"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/stores/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint removes one or more store ids from targeting on the specified line item.  The resulting state of the store target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresDeleteByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Store ids to remove from the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToRemove"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoreTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint gets the add to basket target on the specified line item.",
                "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint sets the scope of the add to basket target on the specified line item.",
                "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The add to basket target to set the scope for",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToBasketTarget202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "addToBasketTarget"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint appends one or more add to basket ids to targeting on the specified line item.  The resulting state of the add to basket target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketAppendByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Ids to append to the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToAppend"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint removes one or more add to basket ids from targeting on the specified line item.  The resulting state of the add to basket target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketDeleteByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Ids to remove from the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToRemove"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/audiences": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint gets the audience target on the specified line item.",
                "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint sets the scope of the audience target on the specified line item.",
                "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The audience target to set the scope for",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceTarget202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "audienceTarget"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint appends one or more audiences ids to targeting on the specified line item.  The resulting state of the audience target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesAppendByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Audience ids to append to the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToAppend"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint removes one or more audiences ids from targeting on the specified line item.  The resulting state of the audience target is returned.",
                "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesDeleteByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "Audience ids to remove from the target",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "idsToRemove"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceTarget202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}/products/pause": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint pauses one or more promoted products on a specified line item.",
                "operationId": "PromotedProducts_PostApi202110ExternalLineItemProductsPauseByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The products from which their IDs will be used to pause.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromotedProduct202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "promotedProductsToPause"
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}/products/unpause": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint unpauses one or more promoted products on a specified line item.",
                "operationId": "PromotedProducts_PostApi202110ExternalLineItemProductsUnpauseByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The products from which their IDs will be used to unpause.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromotedProduct202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "promotedProductsToUnpause"
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{accountId}/campaigns": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Creates a new campaign with the specified settings",
                "operationId": "CampaignsApi_PostApiV1ExternalAccountCampaignsByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The given account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The campaign settings to create a campaign with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalPostCampaign"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "campaign"
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaign"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of campaign objects for the given account id",
                "operationId": "CampaignsApi_GetApiV1ExternalAccountCampaignsByAccountId",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The given account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiPageResponseOfCampaign"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/campaigns/{campaignId}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets the campaign for the given campaign id",
                "operationId": "CampaignsApi_GetApiV1ExternalCampaignByCampaignId",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaign"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the campaign for the given campaign id",
                "operationId": "CampaignsApi_PutApiV1ExternalCampaignByCampaignId",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The campaign settings to update that campaign with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExternalPutCampaign"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "campaign"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaign"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/campaigns/{campaign-id}/auction-line-items": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of auction line item objects for the given campaign id",
                "operationId": "GetApiV2ExternalCampaignAuctionLineItemsByCampaignId",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Creates new auction line item with the specified settings",
                "operationId": "PostApiV2ExternalCampaignAuctionLineItemsByCampaignId",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The line item settings to create a line item with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuctionLineItemCreateModelRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "lineItem"
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets the line item for the given line item id",
                "operationId": "GetApiV2ExternalLineItemByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The given line item id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonLineItemResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{account-id}/line-items": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of line item objects for the given account id",
                "operationId": "GetApiV2ExternalAccountLineItemsByAccountId",
                "parameters": [
                    {
                        "name": "account-id",
                        "in": "path",
                        "description": "The given account id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToCampaignId",
                        "in": "query",
                        "description": "The campaign ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToType",
                        "in": "query",
                        "description": "The campaign types that you would like to limit your result set to",
                        "schema": {
                            "enum": [
                                "Unknown",
                                "Auction",
                                "Preferred"
                            ],
                            "type": "string"
                        },
                        "x-nullable": true
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonLineItemPagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/auction-line-items/{line-item-id}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets the auction line item for the given line item id",
                "operationId": "GetApiV2ExternalAuctionLineItemByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The given line item id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the auction line item for the given line item id",
                "operationId": "PutApiV2ExternalAuctionLineItemByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The given line item id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The line item settings to create a line item with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuctionLineItemUpdateModelRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "lineItem"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuctionLineItemResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/preferred-line-items/{line-item-id}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets the preferred line item for the given line item id",
                "operationId": "LineItemsApi_GetApi202110ExternalPreferredLineItemByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The given line item id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the preferred line item for the given line item id",
                "operationId": "LineItemsApi_PutApi202110ExternalPreferredLineItemByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The given line item id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The line item settings to create a line item with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreferredLineItemUpdateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "lineItem"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}/products": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint gets the promoted products on the specified line item.",
                "operationId": "PromotedProductsApi_GetApi202110ExternalLineItemProductsByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromotedProduct202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}/products/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint appends one or more products to promote on the specified line item.  The resulting state of the line item is returned.",
                "operationId": "PromotedProductsApi_PostApi202110ExternalLineItemProductsAppendByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "the products to append to this line item",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromotedProduct202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "promotedProductsToAppend"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromotedProduct202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/line-items/{line-item-id}/products/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "This endpoint removes one or more products from promotion on the specified line item.  The resulting state of the line item is returned.",
                "operationId": "PromotedProductsApi_PostApi202110ExternalLineItemProductsDeleteByLineItemId",
                "parameters": [
                    {
                        "name": "line-item-id",
                        "in": "path",
                        "description": "The line item to interact with",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromotedProduct202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "promotedProductsToRemove"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromotedProduct202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/campaigns/{campaign-id}/preferred-line-items": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of preferred line item objects for the given campaign id",
                "operationId": "LineItemsApi_GetApi202110ExternalCampaignPreferredLineItemsByCampaignId",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110PagedListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Creates a new preferred line item with the specified settings",
                "operationId": "LineItemsApi_PostApi202110ExternalCampaignPreferredLineItemsByCampaignId",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "The given campaign id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The line item settings to create a line item with",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreferredLineItemCreateModel202110Request"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "lineItem"
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreferredLineItem202110Response"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/accounts/{account-id}/balances": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of balance objects for the given account id",
                "operationId": "BalancesApi_GetApi202110ExternalAccountBalancesByAccountId",
                "parameters": [
                    {
                        "name": "account-id",
                        "in": "path",
                        "description": "The account to get balances for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Balance202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/balances/{balance-id}/campaigns": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Gets page of campaigns for the given balanceId",
                "operationId": "BalancesApi_GetApi202110ExternalBalanceCampaignsByBalanceId",
                "parameters": [
                    {
                        "name": "balance-id",
                        "in": "path",
                        "description": "The balance to get campaigns from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "limitToId",
                        "in": "query",
                        "description": "The ids that you would like to limit your result set to",
                        "style": "form",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "description": "The 0 indexed page index you would like to receive given the page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "The maximum number of items you would like to receive in this request",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "x-nullable": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/balances/{balance-id}/campaigns/append": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "appends one or more campaigns to the specified balance",
                "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsAppendByBalanceId",
                "parameters": [
                    {
                        "name": "balance-id",
                        "in": "path",
                        "description": "The balance to add campaigns from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The campaigns to append",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "campaigns"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-04/retail-media/balances/{balance-id}/campaigns/delete": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Removes one or more campaigns on the specified balance",
                "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsDeleteByBalanceId",
                "parameters": [
                    {
                        "name": "balance-id",
                        "in": "path",
                        "description": "The balance to remove campaigns from",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "x-nullable": false
                    }
                ],
                "requestBody": {
                    "description": "The campaigns to append",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
                            }
                        }
                    },
                    "x-nullable": false,
                    "x-bodyName": "campaigns"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApplicationSummaryModelResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ApplicationSummaryModelResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Response of ApplicationSummaryModel"
            },
            "ApplicationSummaryModelResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ApplicationSummaryModel"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "CommonProblem": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string",
                        "description": "The request correlation ID this problem comes from."
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "The problem's category."
                    },
                    "code": {
                        "type": "string",
                        "description": "A machine-readable  error code, expressed as a string value."
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI that identifies the specific occurrence of the problem."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short human-readable description of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "string"
                    }
                },
                "description": "Common problem object. Can be specialized as needed."
            },
            "ApplicationSummaryModel": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    },
                    "criteoService": {
                        "type": "string"
                    }
                },
                "description": "Model of ApplicationSummary"
            },
            "AccessTokenModel": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "description": "The access token issued by the authorization server."
                    },
                    "token_type": {
                        "type": "string",
                        "description": "The type of the token issued."
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "The refresh token issued by the authorization server.",
                        "x-nullable": true
                    },
                    "expires_in": {
                        "type": "integer",
                        "description": "The lifetime in seconds of the access token.For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value.",
                        "format": "int32"
                    }
                },
                "description": "Access Token to be used with other services"
            },
            "OAuthErrorModel": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "error_description": {
                        "type": "string"
                    },
                    "error_uri": {
                        "type": "string"
                    }
                }
            },
            "JsonApiPageResponseOfAccount": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndAccountAndAccount"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
                "x-nullable": false
            },
            "JsonApiPageResponseOfRetailer": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndRetailerAndRetailer"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
                "x-nullable": false
            },
            "JsonApiPageResponseOfBrand": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndBrandAndBrand"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
                "x-nullable": false
            },
            "PageMetadata": {
                "required": [
                    "currentPageSize",
                    "currentPageIndex"
                ],
                "type": "object",
                "properties": {
                    "totalItemsAcrossAllPages": {
                        "type": "integer",
                        "format": "int64",
                        "x-nullable": true
                    },
                    "currentPageSize": {
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    "currentPageIndex": {
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int64",
                        "x-nullable": true
                    },
                    "nextPage": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "previousPage": {
                        "type": "string",
                        "x-nullable": false
                    }
                },
                "description": "Metadata related to the current request",
                "x-nullable": false
            },
            "CommonError": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error.",
                        "x-nullable": false
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
                        "x-nullable": false
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
                        "x-nullable": false
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
                        "x-nullable": false
                    },
                    "detail": {
                        "type": "string",
                        "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
                        "x-nullable": false
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
                        "x-nullable": false
                    },
                    "stackTrace": {
                        "type": "string",
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
                        "x-nullable": false
                    }
                },
                "description": "A JSON:API Common error structure",
                "x-nullable": false
            },
            "CommonWarning": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error.",
                        "x-nullable": false
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
                        "x-nullable": false
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
                        "x-nullable": false
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
                        "x-nullable": false
                    },
                    "detail": {
                        "type": "string",
                        "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
                        "x-nullable": false
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
                        "x-nullable": false
                    },
                    "stackTrace": {
                        "type": "string",
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
                        "x-nullable": false
                    }
                },
                "description": "A JSON:API Base common warning",
                "x-nullable": false
            },
            "JsonApiBodyWithIdOfInt64AndAccountAndAccount": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAccount"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "JsonApiBodyWithIdOfInt64AndRetailerAndRetailer": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalRetailer"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "JsonApiBodyWithIdOfInt64AndBrandAndBrand": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalBrand"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "ExternalAccount": {
                "required": [
                    "name",
                    "type",
                    "countries",
                    "currency",
                    "parentAccountLabel",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 510,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "supply",
                            "demand"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "subtype": {
                        "enum": [
                            "unknown",
                            "brand",
                            "seller"
                        ],
                        "type": "string",
                        "x-nullable": true
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "x-nullable": false
                    },
                    "currency": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "parentAccountLabel": {
                        "maxLength": 510,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "timeZone": {
                        "type": "string",
                        "x-nullable": false
                    }
                },
                "description": "A Retail Media Account used to launch campaigns and line items",
                "x-nullable": false
            },
            "ExternalRetailer": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "type": "string",
                        "x-nullable": false
                    },
                    "campaignEligibilities": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "unknown",
                                "auction",
                                "preferred"
                            ],
                            "type": "string",
                            "x-nullable": false
                        },
                        "x-nullable": false
                    }
                },
                "description": "A Retail Media Retailer used to represent a selection of products from multiple brands",
                "x-nullable": false
            },
            "ExternalBrand": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 120,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    }
                },
                "description": "A Retail Media Brand used to represent a collection of products sold under the same umbrella name",
                "x-nullable": false
            },
            "AssetResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AssetResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body"
            },
            "AssetResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/Asset"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "Asset": {
                "required": [
                    "fileExtension"
                ],
                "type": "object",
                "properties": {
                    "fileExtension": {
                        "type": "string",
                        "description": "The file extension that is asset is representing. Example: jpg, png, gif or pdf."
                    },
                    "fileLocation": {
                        "type": "string",
                        "description": "A url pointing towards the static file the asset represents."
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "description": "Handles pointing towards binary content that advertisers can use later on, for example in their creatives."
            },
            "GetPageOfAudiencesByAccountIdResponse": {
                "required": [
                    "data",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RetailMediaAudience"
                        },
                        "description": "data",
                        "readOnly": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "description": "errors",
                        "readOnly": true
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "description": "warnings",
                        "readOnly": true
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    }
                },
                "description": "Response for page of audiences by given account"
            },
            "CreateRetailMediaAudienceResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreateRetailMediaAudience"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "description": "errors",
                        "readOnly": true
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "description": "warnings",
                        "readOnly": true
                    }
                },
                "description": "Response of CreateAudienceRequest"
            },
            "CreateRetailMediaAudienceRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreateRetailMediaAudienceBody"
                    }
                },
                "description": "Request to create an audience"
            },
            "RetailMediaAudience": {
                "required": [
                    "attributes",
                    "audienceType",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "audienceType": {
                        "enum": [
                            "customerList",
                            "userBehavior"
                        ],
                        "type": "string",
                        "description": "Type of the audience",
                        "example": "customerList"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique ID of this audience.",
                        "example": "314159"
                    },
                    "type": {
                        "type": "string",
                        "description": "Name of the entity i.e. RetailMediaAudienceSummary",
                        "example": "RetailMediaAudienceSummary"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/RetailMediaAudienceAttributes"
                    }
                },
                "description": "All the information about a retail media audience"
            },
            "CreateRetailMediaAudience": {
                "required": [
                    "attributes",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "RetailMediaAudience"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Unique ID of this audience.",
                        "format": "int64",
                        "example": 314159
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/CreateRetailMediaAudienceAttributes"
                    }
                },
                "description": "Retail Media audience used in audience creation"
            },
            "CreateRetailMediaAudienceBody": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "RetailMediaAudience"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/CreateRetailMediaAudienceAttributes"
                    }
                },
                "description": "Request body of CreateRetailMediaAudienceRequest"
            },
            "RetailMediaAudienceAttributes": {
                "required": [
                    "name",
                    "retailerId"
                ],
                "type": "object",
                "properties": {
                    "retailerId": {
                        "type": "string",
                        "description": "ID of the retailer associated with this audience",
                        "example": "68004146450571264"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the audience.",
                        "example": "Test audience"
                    },
                    "userBehaviorDetails": {
                        "$ref": "#/components/schemas/UserBehaviorDetails"
                    },
                    "customerListDetails": {
                        "$ref": "#/components/schemas/CustomerListDetails"
                    }
                },
                "description": "Fields of a retail media audience"
            },
            "CreateRetailMediaAudienceAttributes": {
                "required": [
                    "lookbackWindow",
                    "name",
                    "retailerId",
                    "userType"
                ],
                "type": "object",
                "properties": {
                    "userType": {
                        "enum": [
                            "viewer",
                            "buyer"
                        ],
                        "type": "string",
                        "description": "Type of the user",
                        "example": "viewer"
                    },
                    "lookbackWindow": {
                        "enum": [
                            "P7D",
                            "P14D",
                            "P30D",
                            "P45D",
                            "P60D",
                            "P90D",
                            "P120D",
                            "P150D",
                            "P180D"
                        ],
                        "type": "string",
                        "description": "Length of lookback window",
                        "example": "P7D"
                    },
                    "brandIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The brands to target"
                    },
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The categories to target"
                    },
                    "retailerId": {
                        "type": "string",
                        "description": "ID of the retailer associated with this audience",
                        "example": "68004146450571264"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the audience.",
                        "example": "Test audience"
                    }
                },
                "description": "Parameters needed to create an audience"
            },
            "UserBehaviorDetails": {
                "required": [
                    "lookbackWindow",
                    "targetIds",
                    "targetType",
                    "userType"
                ],
                "type": "object",
                "properties": {
                    "targetType": {
                        "enum": [
                            "brand",
                            "category"
                        ],
                        "type": "string",
                        "description": "Type of target",
                        "example": "category"
                    },
                    "targetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ist of ids for the target type"
                    },
                    "lookbackWindow": {
                        "enum": [
                            "P7D",
                            "P14D",
                            "P30D",
                            "P45D",
                            "P60D",
                            "P90D",
                            "P120D",
                            "P150D",
                            "P180D"
                        ],
                        "type": "string",
                        "description": "Length of lookback window",
                        "example": "P7D"
                    },
                    "userType": {
                        "enum": [
                            "viewer",
                            "buyer"
                        ],
                        "type": "string",
                        "description": "Type of the user",
                        "example": "viewer"
                    }
                },
                "description": "Details about a user behavior retail media audience"
            },
            "CustomerListDetails": {
                "required": [
                    "size"
                ],
                "type": "object",
                "properties": {
                    "size": {
                        "type": "string",
                        "description": "Number of users in the customer list audience.",
                        "example": "34212"
                    }
                },
                "description": "Details of a customer list audience"
            },
            "JsonApiSingleResponseOfCatalogStatus": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
                "x-nullable": false
            },
            "ExternalRetailerPages202110": {
                "type": "object",
                "properties": {
                    "pageTypes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "List of valid pages for a retailer",
                        "x-nullable": false
                    }
                },
                "description": "Wraps a list of valid pages for a retailer",
                "x-nullable": false
            },
            "Creative202110ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfCreative202110"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a list of response resources",
                "x-nullable": false
            },
            "Category202204ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfCategory202204"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a list of response resources",
                "x-nullable": false
            },
            "Category202204": {
                "required": [
                    "text",
                    "name",
                    "parentId"
                ],
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "description": "Category Text",
                        "x-nullable": false
                    },
                    "name": {
                        "type": "string",
                        "description": "Category Name",
                        "x-nullable": false
                    },
                    "parentId": {
                        "type": "string",
                        "description": "Category ParentId",
                        "x-nullable": false
                    }
                },
                "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID",
                "x-nullable": false
            },
            "JsonApiRequestOfCatalogRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
                "x-nullable": false
            },
            "JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalCatalogStatus"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "ResourceOfCreative202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Creative202110"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string",
                        "description": "The request correlation ID this problem comes from.",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "The problem's category.",
                        "x-nullable": false
                    },
                    "code": {
                        "type": "string",
                        "description": "A machine-readable  error code, expressed as a string value.",
                        "x-nullable": false
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI that identifies the specific occurrence of the problem.",
                        "x-nullable": false
                    },
                    "title": {
                        "type": "string",
                        "description": "A short human-readable description of the problem type",
                        "x-nullable": false
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem",
                        "x-nullable": false
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
                        "x-nullable": false
                    },
                    "stackTrace": {
                        "type": "string",
                        "description": "Technical information, only used in non-prod environments",
                        "x-nullable": false
                    }
                },
                "description": "Data model for common error or warning",
                "x-nullable": false
            },
            "ResourceOfCategory202204": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/Category202204"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalCatalogRequest"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "ExternalCatalogStatus": {
                "required": [
                    "status",
                    "currency",
                    "rowCount",
                    "fileSizeBytes",
                    "md5Checksum",
                    "createdAt",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "Unknown",
                            "Pending",
                            "Success",
                            "Failure",
                            "Expired"
                        ],
                        "type": "string",
                        "description": "An enumeration of the status of the catalog.",
                        "x-nullable": false
                    },
                    "currency": {
                        "type": "string",
                        "description": "An ISO4217 representation of the currency products are listed under in this catalog.",
                        "x-nullable": false
                    },
                    "rowCount": {
                        "type": "integer",
                        "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
                        "format": "int32",
                        "x-nullable": true
                    },
                    "fileSizeBytes": {
                        "type": "integer",
                        "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
                        "format": "int32",
                        "x-nullable": true
                    },
                    "md5Checksum": {
                        "type": "string",
                        "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
                        "x-nullable": false
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional information message intended for developer consumption.",
                        "x-nullable": false
                    }
                },
                "description": "The status of an asynchronous request to generate a catalog",
                "x-nullable": false
            },
            "Creative202110": {
                "required": [
                    "name",
                    "status",
                    "retailerId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "status": {
                        "enum": [
                            "Ready",
                            "In_Use",
                            "Archived",
                            "Deleted"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "brandId": {
                        "type": "integer",
                        "format": "int64",
                        "x-nullable": true
                    },
                    "retailerId": {
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    },
                    "associatedLineItemIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    }
                },
                "description": "Metadata and usage info of a preferred deals creative",
                "x-nullable": false
            },
            "ExternalCatalogRequest": {
                "type": "object",
                "properties": {
                    "format": {
                        "enum": [
                            "json-newline"
                        ],
                        "type": "string",
                        "default": "json-newline",
                        "x-nullable": false
                    },
                    "brandIdFilter": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A request for a catalog under the specified format. Currently \"json-newline\" is supported.",
                "x-nullable": false
            },
            "EnvelopeReportStatus": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReportStatus"
                    }
                },
                "description": "Standard response envelope"
            },
            "BadRequest": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "description": "The errors"
                    }
                },
                "description": "Bad request errors"
            },
            "EnvelopeReportRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReportRequest"
                    }
                },
                "description": "Standard response envelope"
            },
            "ReportStatus": {
                "required": [
                    "type",
                    "id",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/ReportStatusAttributes"
                    },
                    "id": {
                        "type": "string",
                        "description": "The reportId"
                    },
                    "type": {
                        "type": "string",
                        "description": "Always \"RetailMediaReportStatus\""
                    }
                },
                "description": "Report Status"
            },
            "Error": {
                "required": [
                    "code",
                    "type",
                    "traceId",
                    "instance"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case."
                    },
                    "detail": {
                        "type": "string",
                        "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem."
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem."
                    },
                    "source": {
                        "$ref": "#/components/schemas/MapString"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology e.g. .Net, Scala, etc"
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type."
                    },
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "Type should be: \"validation\", \"unavailable, \"violation\", \"permission\", ..."
                    }
                },
                "description": "Error"
            },
            "ReportRequest": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/ReportRequestAttributes"
                    },
                    "type": {
                        "type": "string",
                        "description": "Always \"RetailMediaReportRequest\""
                    }
                },
                "description": "Report Request"
            },
            "ReportStatusAttributes": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Timestamp when the report started to execute",
                        "format": "date-time"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Timestamp when the cached report will expire",
                        "format": "date-time"
                    },
                    "fileSizeBytes": {
                        "type": "integer",
                        "description": "Total size of file, only populated on success",
                        "format": "int64",
                        "x-nullable": true
                    },
                    "md5Checksum": {
                        "type": "string",
                        "description": "The MD5 checksum of the content, only populated on success",
                        "x-nullable": true
                    },
                    "message": {
                        "type": "string",
                        "description": "Failure message, only populated on failure",
                        "x-nullable": true
                    },
                    "rowCount": {
                        "type": "integer",
                        "description": "Rows of data in report, only populated on success",
                        "format": "int64",
                        "x-nullable": true
                    },
                    "status": {
                        "enum": [
                            "pending",
                            "success",
                            "failure",
                            "expired"
                        ],
                        "type": "string",
                        "description": "One of \"pending\", \"success\", \"failure\", or \"expired\""
                    }
                },
                "description": "Report Status Attributes"
            },
            "MapString": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)."
            },
            "ReportRequestAttributes": {
                "required": [
                    "reportType",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "clickAttributionWindow": {
                        "enum": [
                            "7D",
                            "14D",
                            "30D"
                        ],
                        "type": "string",
                        "description": "Defaults to value from campaign or one of \"7D\", \"14D\", or \"30D\". If specified, viewAttributionWindow must also be specified"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "YYYY-MM-DD, must not be before startDate and not more than 100 days later",
                        "format": "date"
                    },
                    "format": {
                        "enum": [
                            "csv",
                            "json",
                            "json-compact",
                            "json-newline"
                        ],
                        "type": "string",
                        "description": "One of \"json\" (default),\"json-compact\",\"json-newline\" or \"csv\"",
                        "default": "json"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the campaign or line item.  Either 'id' or 'ids' must be specified, but not both"
                    },
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ids of the campaigns or line items.  Either 'id' or 'ids' must be specified, but not both"
                    },
                    "reportType": {
                        "enum": [
                            "summary",
                            "keyword",
                            "pageType",
                            "productCategory",
                            "product",
                            "attributedTransactions"
                        ],
                        "type": "string",
                        "description": "One of \"summary\", \"keyword\", \"pageType\", \"productCategory\", \"product\", or \"attributedTransactions\""
                    },
                    "startDate": {
                        "type": "string",
                        "description": "YYYY-MM-DD",
                        "format": "date"
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "viewAttributionWindow": {
                        "enum": [
                            "none",
                            "1D",
                            "7D",
                            "14D",
                            "30D"
                        ],
                        "type": "string",
                        "description": "Defaults to value from campaign or one of \"none\", \"1D\", \"7D\", \"14D\", or \"30D\". If specified, must be less than clickAttributionWindow, which must also be specified."
                    }
                },
                "description": "Report Request Attributes"
            },
            "KeywordTarget202110Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfKeywordTarget202110"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a value type resource outcome",
                "x-nullable": false
            },
            "StoreTarget202110Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a value type resource outcome",
                "x-nullable": false
            },
            "AddToBasketTarget202110Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a value type resource outcome",
                "x-nullable": false
            },
            "AudienceTarget202110Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a value type resource outcome",
                "x-nullable": false
            },
            "JsonApiSingleResponseOfCampaign": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignAndCampaign"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
                "x-nullable": false
            },
            "JsonApiPageResponseOfCampaign": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonError"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonWarning"
                        },
                        "x-nullable": false
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignAndCampaign"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
                "x-nullable": false
            },
            "AuctionLineItemPagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "AuctionLineItemResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for response resource",
                "x-nullable": false
            },
            "CommonLineItemResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfCommonLineItem"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for response resource",
                "x-nullable": false
            },
            "CommonLineItemPagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfCommonLineItem"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "PreferredLineItem202110Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfPreferredLineItem202110"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for response resource",
                "x-nullable": false
            },
            "PromotedProduct202110PagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfPromotedProduct202110"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "PreferredLineItem202110PagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfPreferredLineItem202110"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "Balance202110PagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfBalance202110"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "BalanceCampaign202110PagedListResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/PageMetadata"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
                        },
                        "x-nullable": false
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true,
                        "x-nullable": false
                    }
                },
                "description": "Data model for a paged list of response resources",
                "x-nullable": false
            },
            "KeywordTarget202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfKeywordTarget202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "StoreTarget202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "StoreIdsUpdateModel202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfStoreIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "AddToBasketTarget202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "AddToBasketIdsUpdateModel202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "AudienceTarget202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "AudienceIdsUpdateModel202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueTypeResourceOfAudienceIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type input resource",
                "x-nullable": false
            },
            "PromotedProduct202110ListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfPromotedProduct202110"
                        },
                        "x-nullable": false
                    }
                },
                "description": "Data model for a list of input resources",
                "x-nullable": false
            },
            "ExternalPostCampaign": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCampaignAttributesAndCampaign"
                    }
                },
                "description": "An object that represents the available options to set when creating a Retail Media Campaign",
                "x-nullable": false
            },
            "ExternalPutCampaign": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/JsonApiBodyWithExternalIdOfEditableCampaignAttributesAndCampaign"
                    }
                },
                "description": "An object that represents the available options to set when editing a Retail Media Campaign",
                "x-nullable": false
            },
            "AuctionLineItemCreateModelRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/InputResourceOfAuctionLineItemCreateModel"
                    }
                },
                "description": "Data model for a create input resource",
                "x-nullable": false
            },
            "AuctionLineItemUpdateModelRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfAuctionLineItemUpdateModel"
                    }
                },
                "description": "Data model for an input resource",
                "x-nullable": false
            },
            "PreferredLineItemUpdateModel202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfPreferredLineItemUpdateModel202110"
                    }
                },
                "description": "Data model for an input resource",
                "x-nullable": false
            },
            "PreferredLineItemCreateModel202110Request": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/InputResourceOfPreferredLineItemCreateModel202110"
                    }
                },
                "description": "Data model for a create input resource",
                "x-nullable": false
            },
            "BalanceCampaign202110ListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
                        },
                        "x-nullable": false
                    }
                },
                "description": "A class implementing the request of the Criteo API as described in API Guild Guidelines with a collection of entities as body\r\nhttps://criteo.atlassian.net/wiki/spaces/GUA/pages/1564541212/Response+Body+Guidelines",
                "x-nullable": false
            },
            "ValueTypeResourceOfKeywordTarget202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalKeywordTarget202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "ValueTypeResourceOfStoreTarget202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalStoreTarget202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "ValueTypeResourceOfAddToBasketTarget202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAddToBasketTarget202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "ValueTypeResourceOfAudienceTarget202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAudienceTarget202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "JsonApiBodyWithIdOfInt64AndCampaignAndCampaign": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalCampaign"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "ResourceOfAuctionLineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAuctionLineItem"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfCommonLineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalCommonLineItem"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfPreferredLineItem202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalPreferredLineItem202110"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfPromotedProduct202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalPromotedProduct202110"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfBalance202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalBalance202110"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way",
                "x-nullable": false
            },
            "ResourceOfBalanceCampaign202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalBalanceCampaign202110"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way",
                "x-nullable": false
            },
            "ValueTypeResourceOfStoreIdsUpdateModel202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalStoreIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "ValueTypeResourceOfAddToBasketIdsUpdateModel202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAddToBasketIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "ValueTypeResourceOfAudienceIdsUpdateModel202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAudienceIdsUpdateModel202110"
                    }
                },
                "description": "Data model for a value type resource",
                "x-nullable": false
            },
            "JsonApiBodyWithoutIdOfCampaignAttributesAndCampaign": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalCampaignAttributes"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "JsonApiBodyWithExternalIdOfEditableCampaignAttributesAndCampaign": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalEditableCampaignAttributes"
                    }
                },
                "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
                "x-nullable": false
            },
            "InputResourceOfAuctionLineItemCreateModel": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAuctionLineItemCreateModel"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfAuctionLineItemUpdateModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalAuctionLineItemUpdateModel"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ResourceOfPreferredLineItemUpdateModel202110": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalPreferredLineItemUpdateModel202110"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "InputResourceOfPreferredLineItemCreateModel202110": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ExternalPreferredLineItemCreateModel202110"
                    }
                },
                "description": "Data model for a Resource",
                "x-nullable": false
            },
            "ExternalKeywordTarget202110": {
                "required": [
                    "keywords"
                ],
                "type": "object",
                "properties": {
                    "keywords": {
                        "type": "object",
                        "additionalProperties": {
                            "enum": [
                                "unknown",
                                "negativeExact",
                                "negativeBroad"
                            ],
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Keywords that targeting specifications exist for",
                        "x-nullable": false
                    }
                },
                "description": "Identifies keyword targeting for a line item",
                "x-nullable": false
            },
            "ExternalStoreTarget202110": {
                "required": [
                    "scope",
                    "storeIds"
                ],
                "type": "object",
                "properties": {
                    "scope": {
                        "enum": [
                            "unknown",
                            "include",
                            "exclude"
                        ],
                        "type": "string",
                        "description": "Scope of the store target",
                        "x-nullable": false
                    },
                    "storeIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Store ids that should be targeted",
                        "x-nullable": false
                    }
                },
                "description": "Identifies store targeting for a line item",
                "x-nullable": false
            },
            "ExternalAddToBasketTarget202110": {
                "required": [
                    "scope"
                ],
                "type": "object",
                "properties": {
                    "scope": {
                        "enum": [
                            "unknown",
                            "include",
                            "exclude"
                        ],
                        "type": "string",
                        "description": "Scope of the add to basket target",
                        "x-nullable": false
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Product ids that add to basket should target",
                        "x-nullable": false
                    },
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Category ids that add to basket should target",
                        "x-nullable": false
                    }
                },
                "description": "Identifies add to basket targeting for a line item",
                "x-nullable": false
            },
            "ExternalAudienceTarget202110": {
                "required": [
                    "scope",
                    "audienceIds"
                ],
                "type": "object",
                "properties": {
                    "scope": {
                        "enum": [
                            "unknown",
                            "include",
                            "exclude"
                        ],
                        "type": "string",
                        "description": "Scope of the audience target",
                        "x-nullable": false
                    },
                    "audienceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "description": "Audience ids that should be targeted",
                        "x-nullable": false
                    }
                },
                "description": "Identifies audience targeting for a line item",
                "x-nullable": false
            },
            "ExternalCampaign": {
                "required": [
                    "accountId",
                    "promotedBrandIds",
                    "budgetSpent",
                    "budgetRemaining",
                    "createdAt",
                    "updatedAt",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "promotedBrandIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "x-nullable": false
                    },
                    "budgetSpent": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "budgetRemaining": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "inactive"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "auction",
                            "preferred"
                        ],
                        "type": "string",
                        "default": "auction",
                        "x-nullable": false
                    },
                    "drawableBalanceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "x-nullable": false
                    },
                    "clickAttributionWindow": {
                        "enum": [
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "default": "30D",
                        "x-nullable": false
                    },
                    "viewAttributionWindow": {
                        "enum": [
                            "none",
                            "1D",
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "default": "none",
                        "x-nullable": false
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "clickAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    },
                    "viewAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    }
                },
                "description": "A Retail Media Campaign used to represent an advertiser's marketing objective",
                "x-nullable": false
            },
            "ExternalAuctionLineItem": {
                "required": [
                    "name",
                    "startDate",
                    "targetRetailerId",
                    "campaignId",
                    "budgetRemaining",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "maxBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "monthlyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "dailyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "bidStrategy": {
                        "enum": [
                            "unknown",
                            "conversion",
                            "clicks",
                            "revenue"
                        ],
                        "type": "string",
                        "default": "conversion",
                        "x-nullable": false
                    },
                    "targetRetailerId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "targetBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "isAutoDailyPacing": {
                        "type": "boolean",
                        "default": false,
                        "x-nullable": false
                    },
                    "campaignId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budgetSpent": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "budgetRemaining": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    }
                },
                "description": "A Retail Media Auction Line Item used to hold bid settings for one or many promoted products on a single retailer",
                "x-nullable": false
            },
            "ExternalCommonLineItem": {
                "required": [
                    "name",
                    "type",
                    "startDate",
                    "targetRetailerId",
                    "campaignId",
                    "budgetRemaining",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "auction",
                            "preferred"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "targetRetailerId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "campaignId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budgetSpent": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "budgetRemaining": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    }
                },
                "description": "A common line item to hold line item information shared between preferred and auction line items",
                "x-nullable": false
            },
            "ExternalPreferredLineItem202110": {
                "required": [
                    "name",
                    "startDate",
                    "endDate",
                    "status",
                    "pacing",
                    "page",
                    "targetRetailerId",
                    "budget",
                    "campaignId",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "pacing": {
                        "enum": [
                            "unknown",
                            "standard",
                            "accelerated"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "capping": {
                        "$ref": "#/components/schemas/ExternalLineItemCapping202110"
                    },
                    "page": {
                        "$ref": "#/components/schemas/ExternalLineItemPage202110"
                    },
                    "targetRetailerId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budget": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "campaignId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budgetSpent": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "budgetRemaining": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "creativeId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": true
                    }
                },
                "description": "A Retail Media Preferred Line Item used to hold bid settings for one or many promoted products on a single retailer",
                "x-nullable": false
            },
            "ExternalPromotedProduct202110": {
                "type": "object",
                "properties": {
                    "bidOverride": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    }
                },
                "description": "identifies a promoted product",
                "x-nullable": false
            },
            "ExternalBalance202110": {
                "required": [
                    "name",
                    "poNumber",
                    "memo",
                    "deposited",
                    "spent",
                    "remaining",
                    "startDate",
                    "endDate",
                    "status",
                    "createdAt",
                    "updatedAt"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "poNumber": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "memo": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "deposited": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "spent": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "remaining": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "scheduled",
                            "active",
                            "ended"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": false
                    }
                },
                "description": "A Retail Media Balance used to determine the funds available for any or all campaigns in an account",
                "x-nullable": false
            },
            "ExternalBalanceCampaign202110": {
                "type": "object",
                "description": "Campaigns related to the balance",
                "x-nullable": false
            },
            "ExternalStoreIdsUpdateModel202110": {
                "required": [
                    "storeIds"
                ],
                "type": "object",
                "properties": {
                    "storeIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Store ids that should be targeted",
                        "x-nullable": false
                    }
                },
                "description": "Update model for updating store target ids",
                "x-nullable": false
            },
            "ExternalAddToBasketIdsUpdateModel202110": {
                "type": "object",
                "properties": {
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Product ids that add to basket should target",
                        "x-nullable": false
                    },
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "description": "Category ids that add to basket should target",
                        "x-nullable": false
                    }
                },
                "description": "Update model for updating add to basket target ids",
                "x-nullable": false
            },
            "ExternalAudienceIdsUpdateModel202110": {
                "required": [
                    "audienceIds"
                ],
                "type": "object",
                "properties": {
                    "audienceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "description": "Audience ids that should be targeted",
                        "x-nullable": false
                    }
                },
                "description": "Update model for updating audience target ids",
                "x-nullable": false
            },
            "ExternalCampaignAttributes": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "unknown",
                            "auction",
                            "preferred"
                        ],
                        "type": "string",
                        "default": "auction",
                        "x-nullable": false
                    },
                    "drawableBalanceIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "long-id"
                        },
                        "x-nullable": false
                    },
                    "clickAttributionWindow": {
                        "enum": [
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "default": "30D",
                        "x-nullable": false
                    },
                    "viewAttributionWindow": {
                        "enum": [
                            "none",
                            "1D",
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "default": "none",
                        "x-nullable": false
                    },
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "clickAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    },
                    "viewAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    }
                },
                "description": "An object that represents the available options to set when creating a Retail Media Campaign",
                "x-nullable": false
            },
            "ExternalEditableCampaignAttributes": {
                "required": [
                    "name",
                    "clickAttributionWindow",
                    "viewAttributionWindow"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "clickAttributionWindow": {
                        "enum": [
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "viewAttributionWindow": {
                        "enum": [
                            "none",
                            "1D",
                            "7D",
                            "14D",
                            "30D",
                            "unknown"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "clickAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    },
                    "viewAttributionScope": {
                        "enum": [
                            "unknown",
                            "sameSku",
                            "sameSkuCategory",
                            "sameSkuCategoryBrand"
                        ],
                        "type": "string",
                        "x-nullable": true
                    }
                },
                "description": "An object that represents the available options to set when editing a Retail Media Campaign",
                "x-nullable": false
            },
            "ExternalAuctionLineItemCreateModel": {
                "required": [
                    "name",
                    "startDate",
                    "targetRetailerId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "targetRetailerId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "targetBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "maxBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "monthlyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "dailyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "isAutoDailyPacing": {
                        "type": "boolean",
                        "default": false,
                        "x-nullable": false
                    },
                    "bidStrategy": {
                        "enum": [
                            "unknown",
                            "conversion",
                            "clicks",
                            "revenue"
                        ],
                        "type": "string",
                        "default": "conversion",
                        "x-nullable": false
                    }
                },
                "description": "Model to create a retail media auction line item",
                "x-nullable": false
            },
            "ExternalAuctionLineItemUpdateModel": {
                "required": [
                    "name",
                    "startDate",
                    "status",
                    "targetBid",
                    "isAutoDailyPacing"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "budget": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "targetBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "maxBid": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "monthlyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "dailyPacing": {
                        "required": [
                            "false"
                        ],
                        "type": "number",
                        "format": "decimal",
                        "x-nullable": true
                    },
                    "isAutoDailyPacing": {
                        "type": "boolean",
                        "x-nullable": false
                    },
                    "bidStrategy": {
                        "enum": [
                            "unknown",
                            "conversion",
                            "clicks",
                            "revenue"
                        ],
                        "type": "string",
                        "default": "conversion",
                        "x-nullable": false
                    }
                },
                "description": "Model to update a retail media auction line item",
                "x-nullable": false
            },
            "ExternalPreferredLineItemUpdateModel202110": {
                "required": [
                    "name",
                    "startDate",
                    "endDate",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "pacing": {
                        "enum": [
                            "unknown",
                            "standard",
                            "accelerated"
                        ],
                        "type": "string",
                        "default": "accelerated",
                        "x-nullable": false
                    },
                    "capping": {
                        "$ref": "#/components/schemas/ExternalLineItemCapping202110"
                    },
                    "page": {
                        "$ref": "#/components/schemas/ExternalLineItemPage202110"
                    },
                    "budget": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "creativeId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": true
                    }
                },
                "description": "Model used to update a preferred line item",
                "x-nullable": false
            },
            "ExternalPreferredLineItemCreateModel202110": {
                "required": [
                    "name",
                    "startDate",
                    "endDate",
                    "pacing",
                    "page",
                    "targetRetailerId",
                    "budget"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "x-nullable": false
                    },
                    "startDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "endDate": {
                        "required": [
                            "true"
                        ],
                        "type": "string",
                        "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
                        "format": "date"
                    },
                    "status": {
                        "enum": [
                            "unknown",
                            "active",
                            "scheduled",
                            "draft",
                            "paused",
                            "budgetHit",
                            "ended",
                            "archived",
                            "noFunds"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "pacing": {
                        "enum": [
                            "unknown",
                            "standard",
                            "accelerated"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "capping": {
                        "$ref": "#/components/schemas/ExternalLineItemCapping202110"
                    },
                    "page": {
                        "$ref": "#/components/schemas/ExternalLineItemPage202110"
                    },
                    "targetRetailerId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": false
                    },
                    "budget": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": false
                    },
                    "creativeId": {
                        "type": "string",
                        "format": "long-id",
                        "x-nullable": true
                    }
                },
                "description": "Model used to create a preferred line item",
                "x-nullable": false
            },
            "ExternalLineItemCapping202110": {
                "required": [
                    "type",
                    "count"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "unknown",
                            "day",
                            "session"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "x-nullable": false
                    }
                },
                "description": "Frequency capping for a preferred line item",
                "x-nullable": false
            },
            "ExternalLineItemPage202110": {
                "required": [
                    "pageType"
                ],
                "type": "object",
                "properties": {
                    "pageType": {
                        "enum": [
                            "search",
                            "home",
                            "checkout",
                            "category",
                            "productDetail",
                            "confirmation",
                            "merchandising",
                            "deals"
                        ],
                        "type": "string",
                        "x-nullable": false
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalLineItemPageCategory202110"
                        },
                        "x-nullable": false
                    },
                    "searchKeywords": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "x-nullable": false
                        },
                        "x-nullable": false
                    }
                },
                "description": "Page information for a preferred line item",
                "x-nullable": false
            },
            "ExternalLineItemPageCategory202110": {
                "required": [
                    "categoryId"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "x-nullable": false
                    },
                    "includeChildren": {
                        "type": "boolean",
                        "default": true,
                        "x-nullable": false
                    }
                },
                "description": "Category information for a preferred line item page",
                "x-nullable": false
            }
        },
        "securitySchemes": {
            "oauth": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://api.criteo.com/oauth2/token",
                        "scopes": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "oauth": []
        }
    ],
    "x-samples-languages": [
        "java",
        "python",
        "php",
        "csharp",
        "javascript",
        "curl",
        "ruby"
    ]
}