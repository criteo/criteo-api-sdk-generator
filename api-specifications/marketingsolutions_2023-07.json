{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - MarketingSolutions",
    "version": "2023-07"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/2023-07/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a list of all the audiences for the user or for the given advertiser_id",
        "operationId": "getAudiences",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser id to get all the audiences for.\nMandatory for internal users. For external users,\n           if you don't provide it, we will take into account the advertisers from your portfolio",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudiencesResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "AudienceContactlist",
                      "id": "1",
                      "attributes": {
                        "advertiserId": "18",
                        "name": "Audience name",
                        "description": "Audience",
                        "created": "2018-12-10T10:00:50.0000000+00:00",
                        "updated": "2018-12-10T10:17:15.0000000+00:00",
                        "nbLines": 100,
                        "nbLinesEmail": 10,
                        "nbMatchesEmail": 10
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Create an Audience for an Advertiser",
        "operationId": "createAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAudienceRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "The audience was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "Audience"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/2023-07/audiences/{audience-id}/contactlist": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "description": "delete all identifiers from an Audience",
        "operationId": "deleteIdentifiers",
        "responses": {
          "200": {
            "description": "The contactlist was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAudienceContactListResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "AudienceContactlist"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove users to or from an audience",
        "operationId": "modifyAudienceUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyAudienceResponse"
                },
                "example": {
                  "data": {
                    "type": "ContactlistAmendment",
                    "attributes": {
                      "contactListId": 12,
                      "operation": "add",
                      "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                      "identifierType": "madid",
                      "nbValidIdentifiers": 7343,
                      "nbInvalidIdentifiers": 13,
                      "sampleInvalidIdentifiers": [
                        "InvalidIdentifier"
                      ]
                    }
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Audience 123 not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "audience-id",
          "in": "path",
          "description": "The id of the audience to amend",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string",
            "format": "int32"
          }
        }
      ]
    },
    "/2023-07/audiences/{audience-id}": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "description": "Delete an audience by id",
        "operationId": "removeAudience",
        "responses": {
          "200": {
            "description": "The audience was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "Audience"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Update user audience specified by the audience id",
        "operationId": "modifyAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAudienceRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "The audience was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "AudienceContactlist",
                    "attributes": {
                      "name": "example audience",
                      "description": "example audience description"
                    }
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "audience-id",
          "in": "path",
          "description": "The id of the audience to amend",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string",
            "format": "int32"
          }
        }
      ]
    },
    "/2023-07/marketing-solutions/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudiences",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Audience search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all audiences with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all audiences with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Deletes the audiences associated to the given audience IDs.",
        "operationId": "bulkDeleteAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success or partial success",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all audiences. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudiencesSizes",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audiences/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent audience. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSize",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudienceSegments",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Segment search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all segments with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudienceSegments",
        "requestBody": {
          "description": "Segment creation parameter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all segments with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudienceSegments",
        "requestBody": {
          "description": "Segment Update request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete the segments associated to the given audience IDs.",
        "operationId": "bulkDeleteAudienceSegments",
        "requestBody": {
          "description": "Segment delete request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all segments. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudienceSegmentsSizes",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent segment. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSegmentSize",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/in-market-interests": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list with all available in-market interests that can be used to define an in-market segment. These in-market interests correspond to the Google product taxonomy.",
        "operationId": "getAudienceSegmentsInMarketInterests",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser ID.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The ISO 3166-1 alpha-2 country code.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/in-market-brands": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list with all available in-market brands that can be used to define an in-market segment.",
        "operationId": "getAudienceSegmentsInMarketBrands",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser ID.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The ISO 3166-1 alpha-2 country code.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/audience-segments/{audience-segment-id}/contact-list": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns the statistics of a contact list segment.",
        "operationId": "getAudienceSegmentContactListStatistics",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The segment ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/{ad-set-id}/audience": {
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Link or unlink an audience with an ad set",
        "operationId": "updateAdSetAudience",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "The ad set ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ad set-Audience update request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/{adSetId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified ad set",
        "operationId": "GetAdSet",
        "parameters": [
          {
            "name": "adSetId",
            "in": "path",
            "description": "Id of the ad set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for ad sets",
        "operationId": "SearchAdSets",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the ad sets",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of AdSets.",
        "operationId": "PatchAdSets",
        "requestBody": {
          "description": "List of adsets to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of patched adSets.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create the specified ad set",
        "operationId": "CreateAdSet",
        "requestBody": {
          "description": "the ad sets to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "adSet"
        },
        "responses": {
          "201": {
            "description": "The ad set that has been created and errors / warnings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/start": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Start the specified list of ad sets",
        "operationId": "StartAdSets",
        "requestBody": {
          "description": "All the ad sets to start",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been started and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/stop": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Stop the specified list of ad sets",
        "operationId": "StopAdSets",
        "requestBody": {
          "description": "All the ad sets to stop",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been stopped and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/campaigns/{campaign-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified campaign",
        "operationId": "GetCampaign",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the campaign",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/campaigns/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for campaigns",
        "operationId": "SearchCampaigns",
        "requestBody": {
          "description": "filters on campaigns",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the campaigns",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/campaigns": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of Campaigns.",
        "operationId": "PatchCampaigns",
        "requestBody": {
          "description": "List of campaigns to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "List of patched campaigns.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create the specified campaign",
        "operationId": "CreateCampaign",
        "requestBody": {
          "description": "the campaigns to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "marketingCampaign"
        },
        "responses": {
          "201": {
            "description": "The campaign that has been created and errors / warnings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/{ad-set-id}/display-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Display Multipliers for all valid Categories associated to an Ad Set",
        "operationId": "GetDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Display Multipliers for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Display Multipliers for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            }
          },
          "x-bodyName": "displayMultipliersToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Display Multipliers for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ad-sets/{ad-set-id}/category-bids": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Category Bids for all valid Categories associated to an Ad Set",
        "operationId": "GetCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Category Bids for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Category Bids for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            }
          },
          "x-bodyName": "categoryBidsToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Category Bids for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/creatives": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Creatives for a given advertiser",
        "operationId": "GetAdvertiserCreatives",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of creatives to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of creatives. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Creatives is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeListResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create a Creative",
        "operationId": "CreateAdvertiserCreative",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/creatives/{id}": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get a Creative from its id",
        "operationId": "GetCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Creative"
        ],
        "description": "Edit a specific Creative",
        "operationId": "EditCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to edit.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeWriteRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "The edited creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete a Creative if there are no ads binded to it",
        "operationId": "DeleteCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The creative was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "401": {
            "description": "The request was not properly authorized."
          },
          "500": {
            "description": "A non-request based error occurred on the server."
          }
        }
      }
    },
    "/2023-07/marketing-solutions/creatives/{id}/preview": {
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Generate a preview of a specific Creative",
        "operationId": "GenerateCreativePreview",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Creative identifier to preview.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "The width of the Creative to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "The height of the Creative to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The preview HTML of a specific Creative is returned.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/ads": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Ads for a given advertiser",
        "operationId": "GetAdvertiserAds",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of ads to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of ads. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Ads is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdListResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create an Ad",
        "operationId": "CreateAdvertiserAd",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdWriteRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdWriteRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdWriteRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdWriteRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created Ad is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/ads/{id}": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get an Ad from its id",
        "operationId": "GetAd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ad identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found ad is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete an Ad",
        "operationId": "DeleteAd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ad identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The ad was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "401": {
            "description": "The request was not properly authorized."
          },
          "500": {
            "description": "A non-request based error occurred on the server."
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/coupons": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Coupons for a given advertiser",
        "operationId": "GetAdvertiserCoupons",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of coupons to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of coupons. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Coupons is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponListResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create a Coupon",
        "operationId": "CreateAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/coupons/{id}": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get a Coupon from its id",
        "operationId": "GetAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Creative"
        ],
        "description": "Edit a specific Coupon",
        "operationId": "EditAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to edit.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "The edited Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete a Coupon",
        "operationId": "DeleteAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Coupon was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "403": {
            "description": "The request was not properly authorized."
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/coupons/{id}/preview": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the preview of a specific Coupon",
        "operationId": "GetAdvertiserCouponPreview",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to preview.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "The width of the coupon to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "The height of the coupon to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The preview HTML of a specific Coupon is returned.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/marketing-solutions/advertisers/{advertiser-id}/coupons-supported-sizes": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of Coupon supported sizes",
        "operationId": "GetAdvertiserCouponSupportedSizes",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ad-set-id",
            "in": "query",
            "description": "The ad set id on which you want to check the Coupon supported sizes.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Coupon supported sizes is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2023-07/statistics/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
        "operationId": "GetAdsetReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            }
          },
          "x-bodyName": "reportQuery"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2023-07/transactions/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Transactions endpoint provides transactions id related data.",
        "operationId": "GetTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            }
          },
          "x-bodyName": "dataMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2023-07/log-level/advertisers/{advertiser-id}/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides publisher data.",
        "operationId": "GetTransparencyReport",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser id to fetch the transparency data.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            }
          },
          "x-bodyName": "queryMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                },
                "example": {
                  "data": [
                    {
                      "type": "TransparencyReport",
                      "attributes": {
                        "advertiserId": "123",
                        "tokenValidUntil": "2021-01-31T00:00:00.0000000+00:00",
                        "files": [
                          {
                            "fileName": "report.csv",
                            "url": "https://www.example.com/transparency"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2023-07/placements/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Your ads are placed in different domains (publishers) and environments (websites and apps). Thanks to the placements endpoint, you can analyse the performances for each publisher, comparing displays, clicks and sales generated.",
        "operationId": "GetPlacementsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            }
          },
          "x-bodyName": "dataMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2023-07/advertisers/me": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Fetch the portfolio of Advertisers for this account",
        "operationId": "ApiPortfolioGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "advertiser",
                      "id": "13",
                      "attributes": {
                        "advertiserName": "ClientName1"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "1352",
                      "attributes": {
                        "advertiserName": "ClientName2"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "73550",
                      "attributes": {
                        "advertiserName": "ClientName3"
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAudiencesResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Audience"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Body of the GET audience operation"
      },
      "ErrorCodeResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Definition of the error code"
      },
      "NewAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of a newly created audience"
      },
      "DeleteAudienceContactListResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of a contactlist deletion"
      },
      "ModifyAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistOperation"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Parameters to modify an audience"
      },
      "DeleteAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of an audience deletion"
      },
      "ReplaceAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of an audience replacement"
      },
      "NewAudienceRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NewAudience"
          }
        },
        "description": "Body of creation of a new audience"
      },
      "ContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistAmendment"
          }
        },
        "description": "Request for a contactlist amendment"
      },
      "ReplaceAudienceRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReplaceAudience"
          }
        },
        "description": "Request to replace an audience"
      },
      "Audience": {
        "required": [
          "attributes",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "id": {
            "type": "string",
            "description": "id of the Audience",
            "example": "314159"
          },
          "attributes": {
            "required": [
              "created",
              "description",
              "name",
              "updated"
            ],
            "type": "object",
            "properties": {
              "advertiserId": {
                "type": "string",
                "description": "The advertiser id that owns this Audience",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "description": "The name of the Audience"
              },
              "description": {
                "type": "string",
                "description": "The string description of the Audience"
              },
              "created": {
                "type": "string",
                "description": "Date and time ISO 8601 formatted string",
                "format": "date-time"
              },
              "updated": {
                "type": "string",
                "description": "Date and time ISO 8601 formatted string",
                "format": "date-time"
              },
              "nbLines": {
                "type": "integer",
                "description": "The number of line in the audience available once processed"
              },
              "nbLinesEmail": {
                "type": "integer",
                "description": "The number of email line in the audience available once processed"
              },
              "nbMatchesEmail": {
                "type": "integer",
                "description": "The number of email matches in the audience available once processed"
              }
            }
          }
        },
        "description": "Definition of an audience and all its information"
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
          }
        },
        "description": "Definition of an audience error"
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
          }
        },
        "description": "Definition of the warning"
      },
      "BasicAudienceDefinition": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the id of the entity type"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceNameDescription"
          }
        },
        "description": "Common definition of an audience"
      },
      "ContactlistOperation": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          },
          "attributes": {
            "required": [
              "operation"
            ],
            "type": "object",
            "properties": {
              "contactListId": {
                "type": "integer",
                "description": "the affected user list id"
              },
              "operation": {
                "type": "string",
                "description": "The action recorded"
              },
              "requestDate": {
                "type": "string",
                "description": "When the action was recorded",
                "format": "date-time"
              },
              "identifierType": {
                "type": "string",
                "description": "The schema specified for of the identifiers"
              },
              "nbValidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were valid for the specified schema"
              },
              "nbInvalidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were invalid for the specified schema"
              },
              "sampleInvalidIdentifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A sample of invalid identifiers if there is some"
              }
            },
            "description": "the contactlist operation attributes"
          }
        },
        "description": "Response definition of a contactlist operation"
      },
      "NewAudience": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "attributes": {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "advertiserId": {
                "type": "string",
                "description": "The advertiser id to create the audience for"
              },
              "name": {
                "type": "string",
                "description": "The name of the new audience"
              },
              "description": {
                "type": "string",
                "description": "The description of the audience"
              }
            }
          }
        },
        "description": "Body for the creation of a new audience (name, advertiserId, etc)"
      },
      "ContactlistAmendment": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "User List",
            "example": "ContactlistAmendment"
          },
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Operation to add or remove users"
              },
              "identifierType": {
                "enum": [
                  "email",
                  "madid",
                  "identityLink",
                  "gum",
                  "customerid"
                ],
                "type": "string",
                "description": "What type of identifiers are used"
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users tos add or remove, each in the schema specified"
              },
              "gumCallerId": {
                "type": "integer",
                "description": "The Gum caller id of the advertiser patching identifiers of type Gum"
              }
            },
            "description": "the name of the entity type"
          }
        },
        "description": "Parameters for the amendment of a contactlist"
      },
      "ReplaceAudience": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceNameDescription"
          }
        },
        "description": "Parameters required to replace an audience"
      },
      "AudienceNameDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name to designate the audience by"
          },
          "description": {
            "type": "string",
            "description": "The description of the audience"
          }
        },
        "description": "Description of an audience with name and detailed description"
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Response of ApplicationSummaryModel"
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from."
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)"
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category."
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value."
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem."
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "string"
          }
        },
        "description": "Common problem object. Can be specialized as needed."
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "criteoService": {
            "type": "string"
          }
        },
        "description": "Model of ApplicationSummary"
      },
      "AudienceEntityV1AudienceSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/AudienceSearchMetadataV1"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "AudienceEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceIdEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSizeEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSizeEstimationV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/AudienceSegmentSearchMetadataV1"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "AudienceSegmentEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentIdEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "InMarketAudienceSegmentInterestEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "InMarketAudienceSegmentBrandEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1Resource"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "ContactListStatisticsEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactListStatisticsEntityV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "AdSetAudienceLinkEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "AudienceSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSearchEntityV1Resource"
          }
        },
        "description": "Audience search parameter"
      },
      "AudienceBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceCreateEntityV1Resource"
            }
          }
        },
        "description": "Input to create one or more audiences."
      },
      "AudienceBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceUpdateEntityV1Resource"
            }
          }
        },
        "description": "Input to update one or more audiences."
      },
      "AudienceBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceDeleteEntityV1Resource"
            }
          }
        },
        "description": "Input to delete one or more audiences."
      },
      "AudienceComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceComputeSizeEntityV1Resource"
            }
          }
        },
        "description": "Input to retrieve the size of one or more audiences."
      },
      "AudienceEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1Resource"
          }
        },
        "description": "Input to estimate the size of an audience."
      },
      "AudienceSegmentSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1Resource"
          }
        },
        "description": "Audience segment search parameter"
      },
      "AudienceSegmentBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1Resource"
            }
          }
        },
        "description": "Input to create one or more audience segments."
      },
      "AudienceSegmentBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1Resource"
            }
          }
        },
        "description": "Input to update one or more segments."
      },
      "AudienceSegmentBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1Resource"
            }
          }
        },
        "description": "Input to delete one or more segments."
      },
      "AudienceSegmentComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1Resource"
            }
          }
        },
        "description": "Input to retrieve the size of one or more segments."
      },
      "AudienceSegmentEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1Resource"
          }
        },
        "description": "Input to estimate the size of an audience segment.."
      },
      "AdSetAudienceLinkInputEntityV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
          }
        },
        "description": "Input to set audience ad set link."
      },
      "AudienceSearchMetadataV1": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32"
          }
        },
        "description": "Metadata for the audience search response."
      },
      "AudienceEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSizeEstimationV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentSearchMetadataV1": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32"
          }
        },
        "description": "Metadata for the audience segment search response."
      },
      "AudienceSegmentEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "InMarketAudienceSegmentInterestEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "InMarketAudienceSegmentBrandEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ContactListStatisticsEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ContactListStatisticsEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AdSetAudienceLinkEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSearchEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceCreateEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceComputeSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceEstimateSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentSizeEstimationEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "description": {
            "type": "string",
            "description": "Description of the audience"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
            "format": "date-time"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience"
          },
          "adSetIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ad sets associated to the audience"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceIdEntityV1": {
        "type": "object",
        "description": "Audience entity with only its ID",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceSizeEntityV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Audience entity only with its size",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSize",
          "version": "v1"
        }
      },
      "AudienceSizeEstimationV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Audience size estimation"
      },
      "AudienceSegmentEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "type": {
            "enum": [
              "Unknown",
              "InMarket",
              "Prospecting",
              "ContactList",
              "Location",
              "Behavioral",
              "Retargeting",
              "Lookalike"
            ],
            "type": "string",
            "description": "Type of segment (read-only)"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
            "format": "date-time"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketV1"
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingV1"
          },
          "contactList": {
            "$ref": "#/components/schemas/ContactListV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationV1"
          },
          "behavioral": {
            "$ref": "#/components/schemas/BehavioralV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeV1"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentIdEntityV1": {
        "type": "object",
        "description": "Audience Segment entity only with its ID",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentSizeEntityV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegmentSize",
          "version": "v1"
        }
      },
      "AudienceSegmentSizeEstimationV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Segment size estimation"
      },
      "InMarketAudienceSegmentInterestEntityV1": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string",
            "description": "Id of the parent in-market segment interest"
          }
        },
        "description": "In-market segment interest entity",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "InMarketAudienceSegmentInterest",
          "version": "v1"
        }
      },
      "InMarketAudienceSegmentBrandEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the in-market segment brand"
          },
          "size": {
            "type": "integer",
            "description": "Size of the in-market segment brand",
            "format": "int32"
          }
        },
        "description": "In-market segment brand entity",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "InMarketAudienceSegmentBrand",
          "version": "v1"
        }
      },
      "ContactListStatisticsEntityV1": {
        "type": "object",
        "properties": {
          "numberOfIdentifiers": {
            "type": "integer",
            "description": "Number of identifiers in the contact list.",
            "format": "int32"
          },
          "numberOfMatches": {
            "type": "integer",
            "description": "Number of matched identifiers in the contact list.",
            "format": "int32"
          },
          "matchRate": {
            "type": "number",
            "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
            "format": "double"
          }
        },
        "description": "Contact list statistics.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "ContactListStatistics",
          "version": "v1"
        }
      },
      "AdSetAudienceLinkEntityV1": {
        "type": "object",
        "properties": {
          "audienceId": {
            "type": "string"
          }
        },
        "description": "Link Audience with an ad set",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AdSetAudience",
          "version": "v1"
        }
      },
      "AudienceSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audience ids"
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of advertiser ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids (linked to the result audiences)"
          },
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of AdSet ids"
          }
        },
        "description": "Available filters to perform a search on segments. If present, the filters are AND'ed together when applied."
      },
      "AudienceCreateEntityV1": {
        "required": [
          "advertiserId",
          "algebra",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "description": {
            "type": "string",
            "description": "Description of the audience"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "AudienceUpdateEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceDeleteEntityV1": {
        "type": "object",
        "description": "Audience to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceComputeSizeEntityV1": {
        "type": "object",
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceEstimateSizeEntityV1": {
        "required": [
          "advertiserId",
          "algebra"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "AudienceSegmentSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids"
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of advertiser ids"
          },
          "audienceSegmentTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "InMarket",
                "Prospecting",
                "ContactList",
                "Location",
                "Behavioral",
                "Retargeting",
                "Lookalike"
              ],
              "type": "string"
            },
            "description": "List of segment types"
          }
        },
        "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied."
      },
      "AudienceSegmentCreateEntityV1": {
        "required": [
          "advertiserId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketCreateV1"
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingCreateV1"
          },
          "contactList": {
            "$ref": "#/components/schemas/ContactListCreateV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationCreateV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingCreateV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeCreateV1"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "AudienceSegmentUpdateEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketUpdateV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationUpdateV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingUpdateV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeUpdateV1"
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingUpdateV1"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentDeleteEntityV1": {
        "type": "object",
        "description": "Segment to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentComputeSizeEntityV1": {
        "type": "object",
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentSizeEstimationEntityV1": {
        "required": [
          "advertiserId"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketSizeEstimationV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationSizeEstimationV1"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "AlgebraNodeV1": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlgebraNodeV1"
            }
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlgebraNodeV1"
            }
          },
          "not": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          },
          "audienceSegmentId": {
            "type": "string"
          }
        },
        "description": "Node in the audience algebra definition."
      },
      "InMarketV1": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Reach people of a specific country"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items"
          },
          "gender": {
            "enum": [
              "Unknown",
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "Reach people who’ve shown interest in products made for a specific gender"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests"
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range"
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "ProspectingV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website before this number of days",
            "format": "int32"
          },
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website after this number of days",
            "format": "int32"
          },
          "usersType": {
            "enum": [
              "Unknown",
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target"
          }
        },
        "description": "Settings to target prospecting users to website visitors."
      },
      "ContactListV1": {
        "type": "object",
        "properties": {
          "isReadOnly": {
            "type": "boolean",
            "description": "Is the segment read-only"
          }
        },
        "description": "Settings to target users with your contact lists."
      },
      "LocationV1": {
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates"
          },
          "radiusInKm": {
            "type": "integer",
            "description": "The expected maximum distance in kilometers between a user and a point of interest",
            "format": "int32"
          },
          "registryType": {
            "enum": [
              "Unknown",
              "PointOfInterest"
            ],
            "type": "string",
            "description": "The kind of Location audience"
          }
        },
        "description": "Settings to target users based on their location."
      },
      "BehavioralV1": {
        "required": [
          "category"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The users' country"
          },
          "category": {
            "enum": [
              "Unknown",
              "Lifestyles",
              "LifeEvents",
              "Seasonal",
              "BuyingPatterns"
            ],
            "type": "string",
            "description": "The type of behavioral"
          },
          "startDate": {
            "type": "string",
            "description": "Desired date when the behavioral will start",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Desired date when the behavioral will end",
            "format": "date-time"
          }
        },
        "description": "Settings of a behavioral set of users provided by Criteo."
      },
      "RetargetingV1": {
        "type": "object",
        "properties": {
          "visitorsType": {
            "enum": [
              "Unknown",
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors."
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32"
          },
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32"
          }
        },
        "description": "Settings to target users based on its type and days since last visit."
      },
      "LookalikeV1": {
        "type": "object",
        "properties": {
          "seedSegmentId": {
            "type": "string",
            "description": "Segment from which the Lookalike segment will be generated"
          },
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64"
          }
        },
        "description": "Settings to target users that behave like a given seed segment"
      },
      "NillableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The string's value. If missing or null the string's value is set to \"null\""
          }
        },
        "description": "Placeholder object for string value  for which \"null\" is a valid business value"
      },
      "InMarketCreateV1": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Reach people of a specific country"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items"
          },
          "gender": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "Reach people who’ve shown interest in products made for a specific gender"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests"
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range"
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "ProspectingCreateV1": {
        "required": [
          "usersType"
        ],
        "type": "object",
        "properties": {
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website before this number of days",
            "format": "int32"
          },
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website after this number of days",
            "format": "int32"
          },
          "usersType": {
            "enum": [
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target"
          }
        },
        "description": "Settings to target prospecting users to website visitors."
      },
      "ContactListCreateV1": {
        "type": "object",
        "description": "Settings to target users with your contact lists."
      },
      "LocationCreateV1": {
        "required": [
          "pointsOfInterest",
          "radiusInKm"
        ],
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates"
          },
          "radiusInKm": {
            "type": "integer",
            "description": "The expected maximum distance in kilometers between a user and a point of interest",
            "format": "int32"
          }
        },
        "description": "Settings to target users based on their location."
      },
      "RetargetingCreateV1": {
        "required": [
          "daysSinceLastVisitMax",
          "daysSinceLastVisitMin",
          "visitorsType"
        ],
        "type": "object",
        "properties": {
          "visitorsType": {
            "enum": [
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors."
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32"
          },
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32"
          }
        },
        "description": "Settings to target users based on its type and days since last visit."
      },
      "LookalikeCreateV1": {
        "required": [
          "seedSegmentId"
        ],
        "type": "object",
        "properties": {
          "seedSegmentId": {
            "type": "string",
            "description": "Segment from which the Lookalike segment will be generated"
          },
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64"
          }
        },
        "description": "Settings to target users close to a given seed segment."
      },
      "InMarketUpdateV1": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Reach people of a specific country"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items"
          },
          "gender": {
            "$ref": "#/components/schemas/NillableGenderV1"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests"
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range"
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "LocationUpdateV1": {
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates"
          },
          "radiusInKm": {
            "type": "integer",
            "description": "Radius in kilometers",
            "format": "int32"
          },
          "registryType": {
            "enum": [
              "PointOfInterest"
            ],
            "type": "string",
            "description": "The kind of Location audience"
          }
        },
        "description": "Settings to target users based on their location."
      },
      "RetargetingUpdateV1": {
        "type": "object",
        "properties": {
          "visitorsType": {
            "enum": [
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors."
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32"
          },
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32"
          }
        },
        "description": "Settings to target users based on its type and days since last visit."
      },
      "LookalikeUpdateV1": {
        "type": "object",
        "properties": {
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64"
          }
        },
        "description": "Settings to target users that behave like a given seed segment"
      },
      "ProspectingUpdateV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMin": {
            "$ref": "#/components/schemas/NillableInt32"
          },
          "daysSinceLastVisitMax": {
            "$ref": "#/components/schemas/NillableInt32"
          },
          "usersType": {
            "enum": [
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target"
          }
        },
        "description": "Settings to target prospecting users to website visitors."
      },
      "InMarketSizeEstimationV1": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            }
          },
          "gender": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            }
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "LocationSizeEstimationV1": {
        "required": [
          "pointsOfInterest",
          "radiusInKm"
        ],
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            }
          },
          "radiusInKm": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Settings to define your audience based on their location."
      },
      "PointOfInterestV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the point of interest"
          },
          "latitude": {
            "type": "number",
            "description": "ISO-6709 latitude (rounded at 5 decimals)",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "ISO-6709 longitude (rounded at 5 decimals)",
            "format": "double"
          }
        },
        "description": "Named coordinate defined by its latitude and longitude.\r\nLatitude and Longitude are rounded at 5 decimals."
      },
      "NillableGenderV1": {
        "type": "object",
        "properties": {
          "value": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "The value. If missing or null the value is set to \"null\""
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value"
      },
      "NillableInt32": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "The value. If missing or null the value is set to \"null\"",
            "format": "int32"
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value"
      },
      "ResponseReadAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReadModelReadAdSet"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "ResponsesReadAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelReadAdSet"
            },
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "ResponseAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReadModelAdSetId"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "ResponsesAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelAdSetId"
            },
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "CampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignReadResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "CampaignListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignReadResource"
            },
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "PatchResultCampaignListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchResultCampaignReadResource"
            },
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "CampaignV23Q1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignV23Q1Resource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "AdSetDisplayMultiplierListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetDisplayMultiplierResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetDisplayMultiplierResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "AdSetCategoryBidListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetCategoryBidResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetCategoryBidResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResultResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "RequestAdSetSearch": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/AdSetSearchFilter"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "RequestsPatchAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelPatchAdSet"
            }
          }
        },
        "description": "List of input resources"
      },
      "CreateAdSetRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateAdSetResource"
          }
        },
        "description": "Data model for an input resources"
      },
      "RequestsAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelAdSetId"
            }
          }
        },
        "description": "List of input resources"
      },
      "CampaignSearchRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/CampaignSearchFilters"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "PatchCampaignListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchCampaignWriteResource"
            }
          }
        },
        "description": "List of input resources"
      },
      "CreateCampaignRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateCampaignResource"
          }
        },
        "description": "Data model for an input resources"
      },
      "PatchAdSetDisplayMultiplierListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResource"
            }
          }
        },
        "description": "Data model for a list of input resources"
      },
      "PatchAdSetCategoryBidListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResource"
            }
          }
        },
        "description": "Data model for a list of input resources"
      },
      "ReadModelReadAdSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "example": "ReadAdSet"
          },
          "attributes": {
            "$ref": "#/components/schemas/ReadAdSet"
          }
        },
        "description": "read model data for resources"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from."
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)"
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "stackTrace": {
            "type": "string"
          }
        },
        "description": "Data model for common error or warning"
      },
      "ReadModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "example": "AdSetId"
          }
        },
        "description": "read model data for resources"
      },
      "CampaignReadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "example": "Campaign"
          },
          "attributes": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "description": "read model data for resources"
      },
      "PatchResultCampaignReadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "example": "Campaign"
          }
        },
        "description": "read model data for resources"
      },
      "CampaignV23Q1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CampaignV23Q1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "Campaign"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplierResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetCategoryBidResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetSearchFilter": {
        "type": "object",
        "properties": {
          "adSetIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ad set ids to filter on"
          },
          "advertiserIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser ids which ad sets belongs to (indirectly via their marketing campaign)"
          },
          "campaignIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter on"
          }
        },
        "description": "filter on ad set ids"
      },
      "WriteModelPatchAdSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "PatchAdSet"
          },
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSet"
          }
        },
        "description": "write model data for resources"
      },
      "CreateAdSetResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateAdSet"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSet"
          }
        },
        "description": "Data model for a Resource"
      },
      "WriteModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetId"
          }
        },
        "description": "write model data for resources"
      },
      "CampaignSearchFilters": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter on"
          },
          "advertiserIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser ids to which campaigns are linked to"
          }
        },
        "description": "filters on campaign"
      },
      "PatchCampaignWriteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "Campaign"
          },
          "attributes": {
            "$ref": "#/components/schemas/PatchCampaign"
          }
        },
        "description": "write model data for resources"
      },
      "CreateCampaignResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateCampaign"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "Campaign"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "ReadAdSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ad set"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id of the campaign this ad set belongs to"
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset id of this ad set"
          },
          "campaignId": {
            "type": "string",
            "description": "Campaign id this ad set belongs to"
          },
          "destinationEnvironment": {
            "enum": [
              "undefined",
              "web",
              "app"
            ],
            "type": "string",
            "description": "The environment that an ad click will lead a user to"
          },
          "schedule": {
            "$ref": "#/components/schemas/ReadAdSetSchedule"
          },
          "bidding": {
            "$ref": "#/components/schemas/ReadAdSetBidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/ReadAdSetBudget"
          },
          "mediaType": {
            "enum": [
              "display",
              "video"
            ],
            "type": "string",
            "description": "Media type for the ad set"
          }
        },
        "description": "ad set read model"
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id of the campaign"
          },
          "objective": {
            "type": "string",
            "description": "Campaign's marketing objective"
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CampaignSpendLimit"
          },
          "goal": {
            "enum": [
              "Unspecified",
              "Acquisition",
              "Retention"
            ],
            "type": "string",
            "description": "Goal of the campaign"
          }
        },
        "description": "campaign read model"
      },
      "CampaignV23Q1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id of the campaign"
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CampaignSpendLimitV23Q1"
          },
          "goal": {
            "enum": [
              "unspecified",
              "acquisition",
              "retention"
            ],
            "type": "string",
            "description": "Goal of the campaign"
          }
        },
        "description": "campaign read model"
      },
      "AdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the given for which the Display Multiplier has been applied."
          },
          "displayMultiplier": {
            "type": "number",
            "description": "The Display Multiplier applied to the given Category associated to an Ad Set.",
            "format": "double"
          }
        },
        "description": "Display Multiplier information about a Category for a given Ad Set."
      },
      "AdSetCategoryBid": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the Category Bid has been applied."
          },
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          }
        },
        "description": "Category Bid information about a Category for a given Ad Set."
      },
      "PatchAdSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ad set"
          },
          "scheduling": {
            "$ref": "#/components/schemas/PatchAdSetScheduling"
          },
          "bidding": {
            "$ref": "#/components/schemas/PatchAdSetBidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/PatchAdSetBudget"
          }
        },
        "description": "ad set patch model"
      },
      "CreateAdSet": {
        "required": [
          "bidding",
          "budget",
          "campaignId",
          "datasetId",
          "mediaType",
          "name",
          "objective",
          "schedule",
          "targeting",
          "trackingCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ad set"
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset id of this ad set"
          },
          "campaignId": {
            "type": "string",
            "description": "Campaign id this ad set belongs to"
          },
          "objective": {
            "enum": [
              "customAction",
              "clicks",
              "conversions",
              "displays",
              "appPromotion",
              "revenue",
              "storeConversions",
              "value",
              "reach",
              "visits",
              "videoViews"
            ],
            "type": "string",
            "description": "Objective of the ad set"
          },
          "schedule": {
            "$ref": "#/components/schemas/CreateAdSetSchedule"
          },
          "bidding": {
            "$ref": "#/components/schemas/CreateAdSetBidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/CreateAdSetTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/CreateAdSetBudget"
          },
          "trackingCode": {
            "type": "string",
            "description": "The click tracking code associated to this Ad Set."
          },
          "mediaType": {
            "enum": [
              "display",
              "video"
            ],
            "type": "string",
            "description": "Media type for the ad set"
          }
        },
        "description": "ad set create model"
      },
      "PatchCampaign": {
        "type": "object",
        "properties": {
          "spendLimit": {
            "$ref": "#/components/schemas/PatchCampaignSpendLimit"
          }
        },
        "description": "campaign patch model"
      },
      "CreateCampaign": {
        "required": [
          "advertiserId",
          "goal",
          "name",
          "spendLimit"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id this campaign belongs to"
          },
          "goal": {
            "enum": [
              "Unspecified",
              "Acquisition",
              "Retention"
            ],
            "type": "string",
            "description": "Goal for the marketing campaign"
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CreateCampaignSpendLimit"
          }
        },
        "description": "Campaign create model"
      },
      "PatchAdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "displayMultiplier": {
            "type": "number",
            "description": "Any positive decimal value. To remove the impact of the Display Multiplier set it to 1. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          }
        },
        "description": "Display Multiplier to update for a given combination of Ad Set and Category."
      },
      "PatchAdSetCategoryBid": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          }
        },
        "description": "Category Bid to update for a given combination of Ad Set and Category."
      },
      "ReadAdSetSchedule": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "activationStatus": {
            "enum": [
              "on",
              "off"
            ],
            "type": "string",
            "description": "Activation status of the ad set, i.e. whether the consumer wants it to deliver"
          },
          "deliveryStatus": {
            "enum": [
              "draft",
              "inactive",
              "live",
              "notLive",
              "pausing",
              "paused",
              "scheduled",
              "ended",
              "notDelivering",
              "archived"
            ],
            "type": "string",
            "description": "Delivery status of the delivery of the ad set, i.e. whether the ad set is delivering"
          }
        },
        "description": "ad set schedule read model"
      },
      "ReadAdSetBidding": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "bidStrategy": {
            "enum": [
              "actions",
              "clicks",
              "conversions",
              "displays",
              "installs",
              "revenue",
              "storeConversions",
              "value",
              "viewedImpressions",
              "Visits",
              "completedVideoViews"
            ],
            "type": "string",
            "description": "The intended optimization for the Ad Set"
          },
          "costController": {
            "enum": [
              "COS",
              "CPC",
              "CPI",
              "CPM",
              "CPO",
              "CPSV",
              "CPV",
              "dailyBudget"
            ],
            "type": "string",
            "description": "How spend is controlled"
          }
        },
        "description": "ad set bidding read model"
      },
      "AdSetTargeting": {
        "type": "object",
        "properties": {
          "deliveryLimitations": {
            "$ref": "#/components/schemas/AdSetDeliveryLimitations"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/AdSetGeoLocation"
          },
          "frequencyCapping": {
            "$ref": "#/components/schemas/AdSetFrequencyCapping"
          }
        },
        "description": "ad set targeting model"
      },
      "ReadAdSetBudget": {
        "type": "object",
        "properties": {
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your budget is capped or not"
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the budget renewal"
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "description": "The pace at which the budget can be spent"
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "description": "The delivery week for the budget"
          },
          "budgetAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set budget read model"
      },
      "CampaignSpendLimit": {
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal"
          },
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "campaign spend limit model"
      },
      "CampaignSpendLimitV23Q1": {
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal"
          },
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "campaign spend limit model"
      },
      "PatchAdSetScheduling": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          }
        },
        "description": "ad set schedule patch model"
      },
      "PatchAdSetBidding": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set bidding patch model"
      },
      "PatchAdSetBudget": {
        "type": "object",
        "properties": {
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your budget is capped or not"
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the budget renewal"
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "description": "The pace at which the budget can be spent"
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "description": "The delivery week for the budget"
          },
          "budgetAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set budget patch model"
      },
      "CreateAdSetSchedule": {
        "required": [
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "ad set schedule create model"
      },
      "CreateAdSetBidding": {
        "required": [
          "costController"
        ],
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "Decimal value target relating to the `bidStrategy` specified. May be `null` for strategies that do not require a target value. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          },
          "costController": {
            "enum": [
              "COS",
              "CPC",
              "CPI",
              "CPM",
              "CPO",
              "CPSV",
              "CPV",
              "dailyBudget"
            ],
            "type": "string",
            "description": "How spend is controlled"
          }
        },
        "description": "ad set bidding create model"
      },
      "CreateAdSetTargeting": {
        "required": [
          "frequencyCapping"
        ],
        "type": "object",
        "properties": {
          "deliveryLimitations": {
            "$ref": "#/components/schemas/AdSetDeliveryLimitations"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/CreateAdSetGeoLocation"
          },
          "frequencyCapping": {
            "$ref": "#/components/schemas/AdSetFrequencyCapping"
          }
        },
        "description": "Targeting configuration of the ad set"
      },
      "CreateAdSetBudget": {
        "required": [
          "budgetStrategy"
        ],
        "type": "object",
        "properties": {
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string"
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string"
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string"
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string"
          },
          "budgetAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "ad set budget create model"
      },
      "PatchCampaignSpendLimit": {
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal"
          },
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "campaign spend limit model"
      },
      "CreateCampaignSpendLimit": {
        "required": [
          "spendLimitType"
        ],
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal"
          },
          "spendLimitAmount": {
            "type": "number",
            "description": "The amount of the spend limit. null if spendLimitType is uncapped.",
            "format": "double"
          }
        },
        "description": "campaign spend limit create model"
      },
      "NillableDateTime": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "NillableDecimal": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "AdSetDeliveryLimitations": {
        "type": "object",
        "properties": {
          "environments": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "web",
                "inApp"
              ],
              "type": "string"
            },
            "description": "List of environments which the ad set should target"
          },
          "devices": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "other",
                "desktop",
                "mobile",
                "tablet"
              ],
              "type": "string"
            },
            "description": "List of devices which the ad set should target"
          },
          "operatingSystems": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "android",
                "ios",
                "unknown"
              ],
              "type": "string"
            },
            "description": "List of operating systems which the ad set should target"
          }
        },
        "description": "ad set delivery limitations model"
      },
      "AdSetGeoLocation": {
        "type": "object",
        "properties": {
          "countries": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          },
          "subdivisions": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          },
          "zipCodes": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          }
        },
        "description": "ad set geolocation model"
      },
      "AdSetFrequencyCapping": {
        "type": "object",
        "properties": {
          "frequency": {
            "enum": [
              "hourly",
              "daily",
              "lifetime",
              "advanced"
            ],
            "type": "string",
            "description": "Period on which impression limitation is calculated"
          },
          "maximumImpressions": {
            "type": "integer",
            "description": "Maximum impressions for the specified period",
            "format": "int32"
          }
        },
        "description": "ad set frequency capping model"
      },
      "CreateAdSetGeoLocation": {
        "type": "object",
        "properties": {
          "countries": {
            "$ref": "#/components/schemas/AdSetTargetingRule"
          },
          "subdivisions": {
            "$ref": "#/components/schemas/AdSetTargetingRule"
          },
          "zipCodes": {
            "$ref": "#/components/schemas/AdSetTargetingRule"
          }
        },
        "description": "Geolocation configuration of the ad set"
      },
      "NillableAdSetTargetingRule": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdSetTargetingRule"
              }
            ],
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "AdSetTargetingRule": {
        "type": "object",
        "properties": {
          "operand": {
            "enum": [
              "undefined",
              "in",
              "notIn"
            ],
            "type": "string",
            "description": "Operand which states how the values should be applied"
          },
          "values": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of values to apply"
          }
        },
        "description": "ad set targeting rule model"
      },
      "CreativeListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreativeResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "CreativeResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreativeResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "AdListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "AdResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "CouponListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CouponResource"
            }
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "CouponResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "CouponSupportedSizesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CouponSupportedSizesResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "CreativeWriteRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreativeWriteResource"
          }
        },
        "description": "Data model for input resource"
      },
      "AdWriteRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdWriteResource"
          }
        },
        "description": "Data model for input resource"
      },
      "CreateCouponRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateCouponResource"
          }
        },
        "description": "Data model for input resource"
      },
      "UpdateCouponRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UpdateCouponResource"
          }
        },
        "description": "Data model for input resource"
      },
      "CreativeResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Ad"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "CouponResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Coupon"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "CouponSupportedSizesResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CouponSupportedSizes"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "CreativeWriteResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreativeWrite"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdWriteResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdWrite"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "CreateCouponResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateCoupon"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "UpdateCouponResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateCoupon"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "Creative": {
        "required": [
          "name",
          "author",
          "status",
          "advertiserId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "description": {
            "type": "string",
            "description": "The description of the creative"
          },
          "author": {
            "type": "string",
            "description": "The login of the person who created this creative ("
          },
          "status": {
            "type": "string",
            "description": "The status of the creative"
          },
          "format": {
            "type": "string",
            "description": "The format of the creative"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser linked to the Creative"
          },
          "datasetId": {
            "type": "string",
            "description": "Data set id linked to the Creative"
          },
          "imageAttributes": {
            "$ref": "#/components/schemas/ImageAttributes"
          },
          "htmlTagAttributes": {
            "$ref": "#/components/schemas/HtmlTagAttributes"
          },
          "dynamicAttributes": {
            "$ref": "#/components/schemas/DynamicAttributes"
          },
          "adaptiveAttributes": {
            "$ref": "#/components/schemas/AdaptiveAttributes"
          }
        },
        "description": "A creative is a project with the necessary information to display a creative"
      },
      "Ad": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ad"
          },
          "description": {
            "type": "string",
            "description": "The description of the ad"
          },
          "creativeId": {
            "type": "string",
            "description": "The id of the Creative binded to this Ad"
          },
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set binded to this Ad"
          },
          "inventoryType": {
            "enum": [
              "Native",
              "Display",
              "Video"
            ],
            "type": "string",
            "description": "The inventory the Ad belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative."
          },
          "startDate": {
            "type": "string",
            "description": "The date when the ad will be launched\r\nString must be in ISO8601 format"
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format"
          }
        },
        "description": "An ad is the binding that connects a creative with an ad set"
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Coupon"
          },
          "description": {
            "type": "string",
            "description": "The description of the Coupon"
          },
          "author": {
            "type": "string",
            "description": "The login of the person who created this Coupon"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser linked to the Coupon"
          },
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set on which the Coupon is applied to"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url"
          },
          "startDate": {
            "type": "string",
            "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format"
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
          },
          "format": {
            "type": "string",
            "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\""
          },
          "status": {
            "type": "string",
            "description": "The status of the Coupon"
          },
          "images": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSlide"
            },
            "description": "List of slides containing the image URLs"
          },
          "showEvery": {
            "type": "integer",
            "description": "Show the Coupon every N seconds (between 1 and 10)",
            "format": "int32"
          },
          "showDuration": {
            "type": "integer",
            "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
            "format": "int32"
          },
          "rotationsNumber": {
            "type": "integer",
            "description": "Number of rotations for the Coupons (from 1 to 10 times)",
            "format": "int32"
          }
        },
        "description": "Coupons are static images applied on ad set which can be displayed within an ad and link to a landing page."
      },
      "CouponSupportedSizes": {
        "type": "object",
        "properties": {
          "logoZone": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of LogoZone sizes as string in width x height format"
          },
          "fullFrame": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of FullFrame sizes as string in width x height format"
          }
        },
        "description": "Entity containing the list of Coupon supported sizes"
      },
      "CreativeWrite": {
        "required": [
          "name",
          "format",
          "datasetId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "description": {
            "type": "string",
            "description": "The description of the creative"
          },
          "format": {
            "enum": [
              "Image",
              "HtmlTag",
              "Dynamic",
              "Adaptive"
            ],
            "type": "string",
            "description": "The format of the creative\r\nYou can use \"Image\", \" HtmlTag\", \"Dynamic\" or \"Adaptive\""
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset linked to the Creative"
          },
          "imageWriteAttributes": {
            "$ref": "#/components/schemas/ImageWriteAttributes"
          },
          "htmlTagWriteAttributes": {
            "$ref": "#/components/schemas/HtmlTagWriteAttributes"
          },
          "dynamicWriteAttributes": {
            "$ref": "#/components/schemas/DynamicWriteAttributes"
          },
          "adaptiveWriteAttributes": {
            "$ref": "#/components/schemas/AdaptiveWriteAttributes"
          }
        },
        "description": "Entity to create or update a creative"
      },
      "AdWrite": {
        "required": [
          "name",
          "creativeId",
          "adSetId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ad"
          },
          "description": {
            "type": "string",
            "description": "The description of the ad"
          },
          "creativeId": {
            "type": "string",
            "description": "The id of the Creative bound to this Ad"
          },
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set bound to this Ad"
          },
          "inventoryType": {
            "enum": [
              "Display",
              "Native"
            ],
            "type": "string",
            "description": "The inventory the Ad to be created or updated belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative."
          },
          "startDate": {
            "type": "string",
            "description": "The date when the ad will be launched\r\nString must be in ISO8601 format"
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format"
          }
        },
        "description": "Entity to create or update an ad"
      },
      "CreateCoupon": {
        "required": [
          "name",
          "adSetId",
          "landingPageUrl",
          "startDate",
          "format",
          "images",
          "showEvery",
          "showDuration",
          "rotationsNumber"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Coupon"
          },
          "description": {
            "type": "string",
            "description": "The description of the Coupon"
          },
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set on which the Coupon is applied to"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url"
          },
          "startDate": {
            "type": "string",
            "description": "The date when the coupon will be launched\r\nString must be in ISO8601 format"
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
          },
          "format": {
            "enum": [
              "FullFrame",
              "LogoZone"
            ],
            "type": "string",
            "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\""
          },
          "images": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImageSlide"
            },
            "description": "List of slides containing the images as a base-64 encoded string"
          },
          "showEvery": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "description": "Show the Coupon every N seconds (between 1 and 10)",
            "format": "int32"
          },
          "showDuration": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
            "format": "int32"
          },
          "rotationsNumber": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "description": "Number of rotations for the Coupons (from 1 to 10 times)",
            "format": "int32"
          }
        },
        "description": "Entity to create a Coupon"
      },
      "UpdateCoupon": {
        "required": [
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format"
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
          }
        },
        "description": "Entity to edit a Coupon"
      },
      "ImageAttributes": {
        "type": "object",
        "properties": {
          "urls": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "format": "uri"
          }
        },
        "description": "The attributes specific to Image creatives"
      },
      "HtmlTagAttributes": {
        "type": "object",
        "properties": {
          "tags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "An array containing the html tags"
          }
        },
        "description": "The attributes specific to HtmlTag creatives"
      },
      "DynamicAttributes": {
        "type": "object",
        "properties": {
          "logos": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
          },
          "creativeBackgroundColor": {
            "type": "string",
            "description": "Color of the creative's background\r\nValid hexadecimal color (e.g. \"AB00FF\")"
          },
          "bodyTextColor": {
            "type": "string",
            "description": "Color of the creative's body text\r\nValid hexadecimal color (e.g. \"AB00FF\")"
          },
          "pricesColor": {
            "type": "string",
            "description": "Color of the creative's prices\r\nValid hexadecimal color (e.g. \"AB00FF\")"
          },
          "primaryFont": {
            "type": "string",
            "description": "Font of the primary font\r\nValid supported font like \"Arial\""
          },
          "callsToAction": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "productImageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
          }
        },
        "description": "The attributes specific to Dynamic creatives"
      },
      "AdaptiveAttributes": {
        "required": [
          "layouts",
          "logos",
          "headlineText",
          "headlineFont",
          "descriptionText",
          "descriptionFont",
          "callsToAction",
          "colors",
          "landingPageUrl"
        ],
        "type": "object",
        "properties": {
          "layouts": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Editorial",
                "Montage",
                "InBannerVideo"
              ],
              "type": "string"
            },
            "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
          },
          "logos": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
          },
          "headlineText": {
            "type": "string",
            "description": "The headline text of the banner"
          },
          "headlineFont": {
            "type": "string",
            "description": "Font of the headline\r\nValid supported font like \"Arial\""
          },
          "descriptionText": {
            "type": "string",
            "description": "The description text of the banner"
          },
          "descriptionFont": {
            "type": "string",
            "description": "Font of the description\r\nValid supported font like \"Arial\""
          },
          "callsToAction": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "colors": {
            "$ref": "#/components/schemas/AdaptiveColors"
          },
          "imageSets": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSet"
            },
            "description": "Multiple image sets, each image set consists of multiple images and a headline text."
          },
          "imageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
          },
          "videos": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoDetail"
            },
            "description": "Multiple videos potentially in different shapes."
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "format": "uri"
          }
        },
        "description": "The attributes specific to Adaptive creatives"
      },
      "ImageSlide": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "Width of the Coupon slide",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Height of the Coupon slide",
            "format": "int32"
          },
          "slideUrls": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images of the same size uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
          }
        },
        "description": "Slide containing the image URLs"
      },
      "ImageWriteAttributes": {
        "required": [
          "base64Strings",
          "landingPageUrl"
        ],
        "type": "object",
        "properties": {
          "base64Strings": {
            "minItems": 1,
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images as a base-64 encoded string"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "format": "uri"
          }
        },
        "description": "The attributes specific to create or update an Image creative"
      },
      "HtmlTagWriteAttributes": {
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "An array containing the html tags"
          }
        },
        "description": "The attributes specific to create or update a HtmlTag creative"
      },
      "DynamicWriteAttributes": {
        "required": [
          "bodyTextColor",
          "callsToAction",
          "creativeBackgrounColor",
          "logoBase64String",
          "pricesColor",
          "productImageDisplay"
        ],
        "type": "object",
        "properties": {
          "logoBase64String": {
            "type": "string",
            "description": "Logo image as a base-64 encoded string"
          },
          "creativeBackgroundColor": {
            "type": "string",
            "description": "Color of the creative's background\r\nValid hexadecimal RGB color (e.g. \"AB00FF\")"
          },
          "bodyTextColor": {
            "type": "string",
            "description": "Color of the creative's body text\r\nValid hexadecimal RGB color (e.g. \"AB00FF\")"
          },
          "pricesColor": {
            "type": "string",
            "description": "Color of the creative's prices\r\nValid hexadecimal RGB color (e.g. \"AB00FF\")"
          },
          "primaryFont": {
            "type": "string",
            "description": "Font of the primary font\r\nValid supported font like \"Arial\""
          },
          "callsToAction": {
            "minItems": 1,
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "productImageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
          }
        },
        "description": "The attributes specific to create or update a Dynamic creative"
      },
      "AdaptiveWriteAttributes": {
        "required": [
          "layouts",
          "logoBase64String",
          "headlineText",
          "headlineFont",
          "descriptionText",
          "descriptionFont",
          "callsToAction",
          "colors",
          "landingPageUrl"
        ],
        "type": "object",
        "properties": {
          "layouts": {
            "minItems": 1,
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Editorial",
                "Montage",
                "InBannerVideo"
              ],
              "type": "string"
            },
            "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
          },
          "logoBase64String": {
            "type": "string",
            "description": "Logo image as a base-64 encoded string"
          },
          "headlineText": {
            "type": "string",
            "description": "The headline text of the banner"
          },
          "headlineFont": {
            "type": "string",
            "description": "Font of the headline\r\nValid supported font like \"Arial\""
          },
          "descriptionText": {
            "type": "string",
            "description": "The description text of the banner"
          },
          "descriptionFont": {
            "type": "string",
            "description": "Font of the description\r\nValid supported font like \"Arial\""
          },
          "callsToAction": {
            "minItems": 1,
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "colors": {
            "$ref": "#/components/schemas/AdaptiveColors"
          },
          "imageSetsBase64": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSetBase64"
            },
            "description": "Multiple image sets, each image set consists of multiple images as a base-64 encoded string and a headline text."
          },
          "imageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
          },
          "videoBase64Strings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Multiple videos potentially in different shapes, each video is a base-64 encoded string."
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url.",
            "format": "uri"
          }
        },
        "description": "The attributes specific to create or update an Adaptive creative"
      },
      "CreateImageSlide": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "Width of the Coupon slide",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Height of the Coupon slide",
            "format": "int32"
          },
          "slideBase64Strings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images of the same size as a base-64 encoded string"
          }
        },
        "description": "Slide containing the images of the same size as a base-64 encoded string"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "htmlTag": {
            "type": "string",
            "description": "Html tag"
          },
          "size": {
            "$ref": "#/components/schemas/Size"
          }
        },
        "description": "Entity specifying the html of the tag and its size"
      },
      "ImageShape": {
        "required": [
          "shape",
          "url"
        ],
        "type": "object",
        "properties": {
          "shape": {
            "enum": [
              "Horizontal",
              "Vertical",
              "Square"
            ],
            "type": "string",
            "description": "Ratio of the image"
          },
          "url": {
            "type": "string",
            "description": "URL of the image uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "format": "uri"
          }
        },
        "description": "Entity containing the shape and url of the image"
      },
      "AdaptiveColors": {
        "required": [
          "logoAreaAndTitleColor",
          "backgroundColor",
          "text1Color",
          "text2Color",
          "ctaBackgroundColor",
          "ctaTextColor"
        ],
        "type": "object",
        "properties": {
          "logoAreaAndTitleColor": {
            "type": "string",
            "description": "Color of the creative's logo area.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Color of the creative's background.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          },
          "text1Color": {
            "type": "string",
            "description": "Color of the headline and the description texts.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          },
          "text2Color": {
            "type": "string",
            "description": "Color of the image set's headline text.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          },
          "ctaBackgroundColor": {
            "type": "string",
            "description": "Color of the background of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          },
          "ctaTextColor": {
            "type": "string",
            "description": "Color of the text of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          }
        },
        "description": "Entity consists of the color aliases of the creative's elements"
      },
      "ImageSet": {
        "required": [
          "images"
        ],
        "type": "object",
        "properties": {
          "images": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "The images' urls with their shapes."
          },
          "headlineText": {
            "type": "string",
            "description": "The headline of the image set"
          }
        },
        "description": "Entity consists of multiple images in different ratios and a headline text."
      },
      "VideoDetail": {
        "required": [
          "duration",
          "shape",
          "url"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "description": "The duration of the video in milliseconds, the video could be trimmed if it is longer than 30000 ms.",
            "format": "double"
          },
          "shape": {
            "enum": [
              "Horizontal",
              "Vertical",
              "Square"
            ],
            "type": "string",
            "description": "Shape of the video"
          },
          "url": {
            "type": "string",
            "description": "URL of the video uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "format": "uri"
          }
        },
        "description": "Entity consists of the url of the video, its duration and its shape."
      },
      "ImageSetBase64": {
        "required": [
          "imageBase64Strings"
        ],
        "type": "object",
        "properties": {
          "imageBase64Strings": {
            "minItems": 1,
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Multiple images potentially in different shapes, each image is a base-64 encoded string."
          },
          "headlineText": {
            "type": "string",
            "description": "The headline of the image set"
          }
        },
        "description": "Entity consists of multiple images in different ratios as a base-64 encoded and a headline text."
      },
      "Size": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Size entity containing width and height of the creative"
      },
      "ProblemsDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Common problems object"
      },
      "TransparencyReportDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportEntityMessage"
            }
          }
        },
        "description": "This is the message defining the response for Transparency report"
      },
      "StatisticsReportQueryMessage": {
        "required": [
          "dimensions",
          "metrics",
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
          },
          "adSetIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets ids. If empty, all the adSets will be fetched"
          },
          "adSetNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets names. If empty, all the adSets will be fetched"
          },
          "adSetStatus": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets status. If empty, all the adSets will be fetched"
          },
          "dimensions": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "Adset",
                "AdvertiserId",
                "Advertiser",
                "CategoryId",
                "Category",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year",
                "Os",
                "Device",
                "CampaignId",
                "Campaign",
                "AdId",
                "Ad",
                "CouponId",
                "Coupon",
                "MarketingObjectiveId",
                "MarketingObjective",
                "ChannelId",
                "Channel",
                "Goal"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "metrics": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Adset report",
        "example": {
          "advertiserIds": "123,456,789",
          "adSetIds": [
            "12345",
            "54321"
          ],
          "adSetNames": [
            "myAdSet1",
            "myAdSet2"
          ],
          "adSetStatus": [
            "Active"
          ],
          "dimensions": [
            "CampaignId",
            "Campaign",
            "AdsetId",
            "Adset",
            "AdvertiserId",
            "Advertiser",
            "AdId",
            "Ad",
            "CouponId",
            "Coupon",
            "CategoryId",
            "Category",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year",
            "Os",
            "Device"
          ],
          "metrics": [
            "Clicks",
            "Displays",
            "Cpc",
            "Visits"
          ],
          "currency": "EUR",
          "format": "csv",
          "timezone": "Europe/Paris",
          "startDate": "2022-08-29T00:00:00.0000000+00:00",
          "endDate": "2022-09-01T00:00:00.0000000+00:00"
        }
      },
      "TransactionsReportQueryDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsReportQueryEntityMessage"
            }
          }
        },
        "description": "Contains queries for Transactions report",
        "example": {
          "data": [
            {
              "type": "TransactionsReport",
              "attributes": {
                "advertiserIds": "123,456,789",
                "eventType": "display",
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2023-04-03T00:00:00.0000000+00:00",
                "endDate": "2023-04-03T00:00:00.0000000+00:00"
              }
            }
          ]
        }
      },
      "TransparencyQueryMessage": {
        "required": [
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "shouldDisplayProductIds": {
            "type": "boolean",
            "description": "Specify if the product ids are displayed in the report.",
            "default": false
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Transparency report",
        "example": {
          "shouldDisplayProductIds": false,
          "startDate": "2023-04-03T00:00:00.0000000+00:00",
          "endDate": "2023-04-06T00:00:00.0000000+00:00"
        }
      },
      "PlacementsReportQueryDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlacementsReportQueryEntityMessage"
            }
          }
        },
        "description": "Contains queries for Placements report",
        "example": {
          "data": [
            {
              "type": "PlacementReport",
              "attributes": {
                "advertiserIds": "123,456,789",
                "campaignIds": "111,222,333,444",
                "adsetIds": "135,246,357,468",
                "environment": "web",
                "placement": "MyPlacement",
                "dimensions": [
                  "AdsetId",
                  "AdvertiserId",
                  "Placement"
                ],
                "metrics": [
                  "clicks",
                  "displays",
                  "cost"
                ],
                "currency": "EUR",
                "disclosed": false,
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2022-08-29T00:00:00.0000000+00:00",
                "endDate": "2022-08-29T00:00:00.0000000+00:00"
              }
            }
          ]
        }
      },
      "TransparencyReportEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/TransparencyReportAttributes"
          }
        },
        "description": "This is the message defining the entity response for Transparency report"
      },
      "TransactionsReportQueryEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/TransactionsReportQueryMessage"
          }
        },
        "description": "Contains a query for Transaction report and its type"
      },
      "PlacementsReportQueryEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/PlacementsReportQueryMessage"
          }
        },
        "description": "Contains a query for Transaction report and its type"
      },
      "TransparencyReportAttributes": {
        "required": [
          "advertiserId",
          "tokenValidUntil",
          "files"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string"
          },
          "tokenValidUntil": {
            "type": "string",
            "format": "date-time"
          },
          "files": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportFile"
            }
          }
        },
        "description": "This is the message defining the attribute response for Transparency report"
      },
      "TransactionsReportQueryMessage": {
        "required": [
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
          },
          "eventType": {
            "type": "string",
            "description": "Apply a filter on Event type ."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Transaction report"
      },
      "PlacementsReportQueryMessage": {
        "required": [
          "advertiserIds",
          "dimensions",
          "metrics",
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids."
          },
          "campaignIds": {
            "type": "string",
            "description": "The comma-separated list of campaign ids."
          },
          "adsetIds": {
            "type": "string",
            "description": "The comma-separated list of adSet ids."
          },
          "environment": {
            "type": "string",
            "description": "Type of environment: Web, Android or iOS."
          },
          "placement": {
            "type": "string",
            "description": "Filter the value of the placement"
          },
          "dimensions": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "AdvertiserId",
                "Placement",
                "Environment",
                "AdsetName",
                "AdvertiserName",
                "CampaignId",
                "CampaignName"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "metrics": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "disclosed": {
            "type": "boolean",
            "description": "Returns disclosed or undisclosed placements.",
            "default": true
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Placements report"
      },
      "TransparencyReportFile": {
        "required": [
          "fileName",
          "url"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "description": "This is the message defining the file response for Transparency report"
      },
      "GetPortfolioResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityOfPortfolioMessage"
            },
            "description": "The response�s primary data"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiError"
            },
            "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarning"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
          }
        },
        "description": "Portfolio fetch Response"
      },
      "EntityOfPortfolioMessage": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "publisher",
              "address",
              "client",
              "contact",
              "industry"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "example": "campaign"
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/PortfolioMessage"
          },
          "meta": {
            "type": "object",
            "description": "A meta object that contains application-specific metadata"
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "CriteoApiError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway"
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
          }
        },
        "description": "Criteo API response error"
      },
      "CriteoApiWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway"
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          }
        },
        "description": "Criteo API response warning"
      },
      "PortfolioMessage": {
        "type": "object",
        "properties": {
          "advertiserName": {
            "type": "string"
          }
        },
        "description": "Class with elementary info about advertiser"
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}