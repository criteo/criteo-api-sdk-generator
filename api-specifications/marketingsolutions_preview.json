{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - MarketingSolutions",
    "version": "Preview"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/preview/ads/{ad-id}/product-filter": {
      "delete": {
        "tags": [
          "Reco"
        ],
        "description": "Disable product filtering for a given ad",
        "operationId": "DisableProductFiltering",
        "parameters": [
          {
            "name": "ad-id",
            "in": "path",
            "description": "ID of the ad",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              }
            }
          },
          "400": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "404": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "409": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Reco"
        ],
        "description": "Fetch product filtering configuration for a given ad",
        "operationId": "FetchProductFilteringConfig",
        "parameters": [
          {
            "name": "ad-id",
            "in": "path",
            "description": "ID of the ad",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation. Returns the product filtering configuration if it exists, or empty data if it doesn't.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              }
            }
          },
          "400": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Reco"
        ],
        "description": "Enable product filtering for a given ad",
        "operationId": "EnableProductFiltering",
        "parameters": [
          {
            "name": "ad-id",
            "in": "path",
            "description": "ID of the ad",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductFilterRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductFilterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductFilterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductFilterRequest"
              }
            }
          },
          "x-bodyName": "createProductFilterRequest"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfProductFilterConfig"
                }
              }
            }
          },
          "400": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Manage"
            ]
          }
        ]
      }
    },
    "/preview/ads/{id}": {
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete an Ad",
        "operationId": "DeleteAd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ad identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The ad was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "401": {
            "description": "The request was not properly authorized."
          },
          "500": {
            "description": "A non-request based error occurred on the server."
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get an Ad with its id",
        "operationId": "GetAd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ad identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found ad is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/ads": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Ads for a given advertiser",
        "operationId": "GetAdvertiserAds",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of ads to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of ads. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Ads is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfAd"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfAd"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfAd"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create an Ad",
        "operationId": "CreateAdvertiserAd",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfAdWrite"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfAdWrite"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfAdWrite"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfAdWrite"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created Ad is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfAd"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/coupons": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Coupons for a given advertiser",
        "operationId": "GetAdvertiserCoupons",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of coupons to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of coupons. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Coupons is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCoupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCoupon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCoupon"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create a Coupon",
        "operationId": "CreateAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreateCoupon"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreateCoupon"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreateCoupon"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreateCoupon"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/coupons-supported-sizes": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of Coupon supported sizes",
        "operationId": "GetAdvertiserCouponSupportedSizes",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "query",
            "description": "The ad set id on which you want to check the Coupon supported sizes.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of Coupon supported sizes is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCouponSupportedSizes"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCouponSupportedSizes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCouponSupportedSizes"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/coupons/{id}": {
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete a Coupon",
        "operationId": "DeleteAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Coupon was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "403": {
            "description": "The request was not properly authorized."
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get a Coupon with its id",
        "operationId": "GetAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Creative"
        ],
        "description": "Edit a specific Coupon",
        "operationId": "EditAdvertiserCoupon",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to edit.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfUpdateCoupon"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfUpdateCoupon"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfUpdateCoupon"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfUpdateCoupon"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "The edited Coupon is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCoupon"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/coupons/{id}/preview": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the preview of a specific Coupon",
        "operationId": "GetAdvertiserCouponPreview",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "height",
            "in": "query",
            "description": "The height of the coupon to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Coupon identifier to preview.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "The width of the coupon to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The preview HTML of a specific Coupon is returned.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/creatives": {
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get the list of self-services Creatives for a given advertiser",
        "operationId": "GetAdvertiserCreatives",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of creatives to be returned. The default is 50.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of creatives. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of self-services Creatives is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCreative"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCreative"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfCreative"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Create a Creative",
        "operationId": "CreateAdvertiserCreative",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser identifier.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "201": {
            "description": "The created creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiser-id}/datasets": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Retrieves corresponding Datasets for a given Advertiser. Only those Datasets are included for which the given Advertiser is marked a primary.",
        "operationId": "getDatasetList",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The id of the Advertiser for which Datasets are being retrieved.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "dataset",
                      "id": "73550",
                      "attributes": {
                        "name": "Dataset 1"
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "traceId": "cb381a21702b247f",
                      "type": "authentication",
                      "code": "invalid",
                      "title": "Permission Denied; This endpoint expects a user token",
                      "detail": "Permission Denied; This endpoint expects a user token"
                    }
                  ],
                  "warnings": [ ]
                }
              },
              "text/plain": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                },
                "example": {
                  "data": [ ],
                  "errors": [
                    {
                      "traceId": "cb381a21702b247f",
                      "type": "authorization",
                      "code": "permission-denied",
                      "title": "Permission denied, you do not have access this to resource",
                      "detail": "Permission denied, you do not have access this to resource"
                    }
                  ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [ ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiserId}/targeting/bundle-rules": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes some bundles from the current list of targeted bundles for a given advertiser.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "DeleteAdvertiserBundleRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to delete from the list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Returns a list of all targeted bundles for an advertiser.",
        "operationId": "GetAdvertiserBundleRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Inserts a list of targeted bundles for an advertiser and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
        "operationId": "PostAdvertiserBundleRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Description of the targeting rule to setup",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the targeted bundles for an advertiser by adding a list of bundles to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "PutAdvertiserBundleRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to add to the existing list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/{advertiserId}/targeting/domain-rules": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes some domains from the current list of targeted domains for a given advertiser.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "DeleteAdvertiserDomainRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to delete from the list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Returns a list of all targeted domains for an advertiser.",
        "operationId": "GetAdvertiserDomainRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Inserts a list of targeted domains for an advertiser and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
        "operationId": "PostAdvertiserDomainRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Description of the targeting rule to setup",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the targeted domains for an advertiser by adding a list of domains to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "PutAdvertiserDomainRules",
        "parameters": [
          {
            "name": "advertiserId",
            "in": "path",
            "description": "The advertiser id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to add to the existing list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/advertisers/me": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Fetch the portfolio of Advertisers for this account",
        "operationId": "ApiPortfolioGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "advertiser",
                      "id": "13",
                      "attributes": {
                        "advertiserName": "ClientName1"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "1352",
                      "attributes": {
                        "advertiserName": "ClientName2"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "73550",
                      "attributes": {
                        "advertiserName": "ClientName3"
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [ ]
          }
        ]
      }
    },
    "/preview/audiences/{audience-id}/contactlist-attributes": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove identifiers to or from a contact list.",
        "operationId": "modifyAudienceUsersWithAttributes",
        "parameters": [
          {
            "name": "audience-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactlistWithAttributesAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyAudienceResponse"
                },
                "example": {
                  "data": {
                    "type": "ContactlistAmendment",
                    "attributes": {
                      "contactListId": 12,
                      "operation": "add",
                      "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                      "identifierType": "madid",
                      "nbValidIdentifiers": 7343,
                      "nbInvalidIdentifiers": 13,
                      "sampleInvalidIdentifiers": [
                        "InvalidIdentifier"
                      ]
                    }
                  },
                  "errors": [ ],
                  "warnings": [ ]
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/campaigns/{campaignId}/targeting/bundle-rules": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes some bundles from the current list of targeted bundles for a given campaign.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "DeleteCampaignBundleRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to delete from the list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Returns a list of all targeted bundles for a campaign.",
        "operationId": "GetCampaignBundleRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Inserts a list of targeted bundles for a campaign and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
        "operationId": "PostCampaignBundleRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Description of the targeting rule to setup",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the targeted bundles for a campaign by adding a list of bundles to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "PutCampaignBundleRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to add to the existing list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/campaigns/{campaignId}/targeting/domain-rules": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes some domains from the current list of targeted domains for a given campaign.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "DeleteCampaignDomainRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to delete from the list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Returns a list of all targeted domains for a campaign.",
        "operationId": "GetCampaignDomainRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Inserts a list of targeted domains for a campaign and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
        "operationId": "PostCampaignDomainRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Description of the targeting rule to setup",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the targeted domains for a campaign by adding a list of domains to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
        "operationId": "PutCampaignDomainRules",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the list of items to add to the existing list",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
              }
            }
          },
          "x-bodyName": "apiRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/catalog/products/batch": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Used to publish a batch of operations to insert, update and deletes products.\n The batch is processed asynchronously.The response provides an operationToken which can be used to track\n the status of the report of the operation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsCustomBatchRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "202": {
            "description": "Batch accepted. The status of the operation can be tracked using the report endpoint and the operationToken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAcceptedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"json-format\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "413": {
            "description": "Request too large. By default, payload up to 16 MB is rejected.",
            "content": {
              "application/json": { }
            }
          },
          "429": {
            "description": "Too Many Requests. Allowed error types and errors: [(type=\"availability\", code=\"too-many-requests\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Catalog_Manage"
            ]
          }
        ]
      }
    },
    "/preview/catalog/products/batch/report/{operation-token}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "description": "Get the report of an asynchronous batch operation previously requested",
        "parameters": [
          {
            "name": "operation-token",
            "in": "path",
            "description": "The token returned by the batch endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-token-is-malformed\"),(type=\"validation\", code=\"catalog-operation-report-is-expired\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-not-found\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Catalog_Read"
            ]
          }
        ]
      }
    },
    "/preview/catalog/stats/merchants/{merchant-id}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "description": "get an stats request",
        "parameters": [
          {
            "name": "lastNumHours",
            "in": "query",
            "description": "the last number of hours",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "merchant-id",
            "in": "path",
            "description": "merchant-id to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The successful response of GET stats request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsOkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Allowed error types and errors: [(type=\"availability\", code=\"too-many-requests\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Catalog_Read"
            ]
          }
        ]
      }
    },
    "/preview/categories/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "With this endpoint you can analyse what are the categories of the placements' domains your ads are placed in.",
        "operationId": "GetCategoriesReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/creatives/{id}": {
      "delete": {
        "tags": [
          "Creative"
        ],
        "description": "Delete a Creative if there are no ads binded to it",
        "operationId": "DeleteCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The creative was deleted."
          },
          "400": {
            "description": "The request contained invalid parameters."
          },
          "401": {
            "description": "The request was not properly authorized."
          },
          "500": {
            "description": "A non-request based error occurred on the server."
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Creative"
        ],
        "description": "Get a Creative with its id",
        "operationId": "GetCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to retrieve.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Creative"
        ],
        "description": "Edit a specific Creative",
        "operationId": "EditCreative",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The creative identifier to edit.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceInputOfCreativeWrite"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "The edited creative is returned.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfCreative"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "A non-request based error occurred on the server.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/creatives/{id}/preview": {
      "post": {
        "tags": [
          "Creative"
        ],
        "description": "Get the preview of a specific Creative",
        "operationId": "GenerateCreativePreview",
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "description": "The height of the Creative to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Creative identifier to preview.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "width",
            "in": "query",
            "description": "The width of the Creative to preview.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The preview HTML of a specific Creative is returned.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The request contained invalid parameters.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The request was not properly authorized.",
            "content": {
              "text/html": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Creative_Manage"
            ]
          }
        ]
      }
    },
    "/preview/industries": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Returns the list of available industries for new advertisers.",
        "operationId": "listIndustries",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "industry",
                      "id": "13"
                    },
                    {
                      "type": "industry",
                      "id": "1352"
                    },
                    {
                      "type": "industry",
                      "id": "73550"
                    }
                  ],
                  "errors": [ ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [ ]
          }
        ]
      }
    },
    "/preview/log-level/advertisers/{advertiser-id}/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides publisher data.",
        "operationId": "GetTransparencyReport",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser id to fetch the transparency data.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The query message.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              },
              "example": {
                "shouldDisplayProductIds": false,
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              },
              "example": {
                "shouldDisplayProductIds": false,
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              },
              "example": {
                "shouldDisplayProductIds": false,
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              },
              "example": {
                "shouldDisplayProductIds": false,
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of AdSets.",
        "operationId": "PatchAdSetsV24Q3",
        "requestBody": {
          "description": "List of adsets to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSetV24Q3"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSetV24Q3"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSetV24Q3"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSetV24Q3"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of patched adSets.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetIdV24Q3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetIdV24Q3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetIdV24Q3"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create the specified ad set",
        "operationId": "CreateAdSetV24Q3",
        "requestBody": {
          "description": "the ad sets to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetV24Q3Request"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetV24Q3Request"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetV24Q3Request"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdSetV24Q3Request"
              }
            }
          },
          "required": true,
          "x-bodyName": "adSet"
        },
        "responses": {
          "201": {
            "description": "The ad set that has been created and errors / warnings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified ad set",
        "operationId": "GetAdSetV24Q3",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the ad set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSetV24Q3"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/audience": {
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Link or unlink an audience with an ad set",
        "operationId": "updateAdSetAudience",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "The ad set ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ad set-Audience update request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/category-bids": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Category Bids for all valid Categories associated to an Ad Set",
        "operationId": "GetCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Category Bids for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Category Bids for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            }
          },
          "x-bodyName": "categoryBidsToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Category Bids for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/display-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Display Multipliers for all valid Categories associated to an Ad Set",
        "operationId": "GetDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Display Multipliers for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Display Multipliers for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            }
          },
          "x-bodyName": "displayMultipliersToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Display Multipliers for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/deal-ids": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Deal Id Targeting configuration for the ad set whose id is specified",
        "operationId": "GetAdSetTargetingDealIds",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the Deal Id Targeting configuration",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Set the Deal Id Targeting configuration for the ad set whose id is specified",
        "operationId": "SetAdSetTargetingDealIds",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the new Deal Id Targeting configuration",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
              }
            }
          },
          "x-bodyName": "adSetDealIdTargetings"
        },
        "responses": {
          "200": {
            "description": "the errors/warnings if any",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/deal-ids/disable": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Disable the Deal Id Targeting configuration for the ad set whose id is specified",
        "operationId": "DisableAdSetTargetingDealIds",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the errors/warnings if any",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/video-positioning": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Video Positioning Targeting configuration for the ad set whose id is specified",
        "operationId": "GetAdSetTargetingVideoPositioning",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the Video Positioning Targeting configuration",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Set the Video Positioning Targeting configuration for the ad set whose id is specified",
        "operationId": "SetAdSetTargetingVideoPositioning",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "the new Video Positioning Targeting configuration",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
              }
            }
          },
          "x-bodyName": "adSetTargetingVideoPositioning"
        },
        "responses": {
          "200": {
            "description": "the errors/warnings if any",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/video-positionings/disable": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Disable the Video Positioning Targeting configuration for the ad set whose id is specified",
        "operationId": "DisableAdSetTargetingVideoPositioning",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the errors/warnings if any",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for ad sets",
        "operationId": "SearchAdSetsV24Q3",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetSearchRequestV24Q3"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetSearchRequestV24Q3"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetSearchRequestV24Q3"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdSetSearchRequestV24Q3"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the ad sets",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSetV24Q3"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSetV24Q3"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSetV24Q3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/start": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Start the specified list of ad sets",
        "operationId": "StartAdSets",
        "requestBody": {
          "description": "All the ad sets to start",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been started and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/stop": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Stop the specified list of ad sets",
        "operationId": "StopAdSets",
        "requestBody": {
          "description": "All the ad sets to stop",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been stopped and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/ad-sets/targeting/supply-vendors": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch the list of available supply vendors for any Ad Set targetings",
        "operationId": "GetSupplyVendorList",
        "responses": {
          "200": {
            "description": "the errors/warnings if any",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SupplyVendorListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplyVendorListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplyVendorListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all segments with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudienceSegments",
        "requestBody": {
          "description": "Segment Update request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/{audience-segment-id}/contact-list": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "description": "Delete all identifiers from a contact list audience-segment.",
        "responses": {
          "200": {
            "description": "The Contact List was emptied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAudienceContactListResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "AudienceContactlist"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove identifiers to or from a contact list audience-segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyAudienceResponse"
                },
                "example": {
                  "data": {
                    "type": "ContactlistAmendment",
                    "attributes": {
                      "contactListId": 12,
                      "operation": "add",
                      "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                      "identifierType": "madid",
                      "nbValidIdentifiers": 7343,
                      "nbInvalidIdentifiers": 13,
                      "sampleInvalidIdentifiers": [
                        "InvalidIdentifier"
                      ]
                    }
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Audience 123 not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns the statistics of a contact list segment.",
        "operationId": "getAudienceSegmentContactListStatistics",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The segment ID.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Read"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "audience-segment-id",
          "in": "path",
          "description": "The id of the contact list audience-segment to amend",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string",
            "format": "int32"
          }
        }
      ]
    },
    "/preview/marketing-solutions/audience-segments/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all segments. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudienceSegmentsSizes",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all segments with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudienceSegments",
        "requestBody": {
          "description": "Segment creation parameter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete the segments associated to the given audience IDs.",
        "operationId": "bulkDeleteAudienceSegments",
        "requestBody": {
          "description": "Segment delete request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent segment. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSegmentSize",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/in-market-brands": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list with all available in-market brands that can be used to define an in-market segment.",
        "operationId": "getAudienceSegmentsInMarketBrands",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser ID.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The ISO 3166-1 alpha-2 country code.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1ListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/in-market-interests": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list with all available in-market interests that can be used to define an in-market segment. These in-market interests correspond to the Google product taxonomy.",
        "operationId": "getAudienceSegmentsInMarketInterests",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser ID.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The ISO 3166-1 alpha-2 country code.",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1ListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audience-segments/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudienceSegments",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Segment search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all audiences with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all audiences. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudiencesSizes",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all audiences with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Deletes the audiences associated to the given audience IDs.",
        "operationId": "bulkDeleteAudiences",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success or partial success",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent audience. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSize",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/audiences/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudiences",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Audience search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/campaigns": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of Campaigns.",
        "operationId": "PatchCampaigns",
        "requestBody": {
          "description": "List of campaigns to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "List of patched campaigns.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create the specified campaign",
        "operationId": "CreateCampaign",
        "requestBody": {
          "description": "the campaigns to create",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCampaignRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "marketingCampaign"
        },
        "responses": {
          "201": {
            "description": "The campaign that has been created and errors / warnings",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/campaigns/{campaign-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified campaign",
        "operationId": "GetCampaignV23Q1",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the campaign",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1Response"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/campaigns/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for campaigns",
        "operationId": "SearchCampaignsV23Q1",
        "requestBody": {
          "description": "filters on campaigns",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequestV23Q1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequestV23Q1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequestV23Q1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequestV23Q1"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the campaigns",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignV23Q1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/marketing-solutions/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [ ]
          }
        ]
      }
    },
    "/preview/placements/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Your ads are placed in different domains (publishers) and environments (websites and apps). Thanks to the placements endpoint, you can analyse the performances for each publisher, comparing displays, clicks and sales generated.",
        "operationId": "GetPlacementsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryMessageListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryMessageListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryMessageListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryMessageListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/product-sets": {
      "post": {
        "tags": [
          "Reco"
        ],
        "description": "Create a new product set",
        "operationId": "CreateProductSet",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Product set created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              }
            }
          },
          "400": {
            "description": "Unable to parse the request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "422": {
            "description": "Cannot process entity content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Manage"
            ]
          }
        ]
      }
    },
    "/preview/product-sets/{product-set-id}": {
      "delete": {
        "tags": [
          "Reco"
        ],
        "description": "Remove a product set",
        "operationId": "RemoveProductSet",
        "parameters": [
          {
            "name": "product-set-id",
            "in": "path",
            "description": "ID of the product set to remove",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ProductSet removed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "400": {
            "description": "Request was not valid",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Reco"
        ],
        "description": "Fetch an existing product set",
        "operationId": "FetchProductSet",
        "parameters": [
          {
            "name": "product-set-id",
            "in": "path",
            "description": "ID of the product set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product set fetched successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                }
              }
            }
          },
          "400": {
            "description": "Unable to parse the request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Read"
            ]
          }
        ]
      }
    },
    "/preview/product-sets/{product-set-id}/product-filters": {
      "get": {
        "tags": [
          "Reco"
        ],
        "description": "Fetch product filtering usages for a given product set",
        "operationId": "FetchProductFilteringUsages",
        "parameters": [
          {
            "name": "product-set-id",
            "in": "path",
            "description": "ID of the product set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfProductFilterConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfProductFilterConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfProductFilterConfig"
                }
              }
            }
          },
          "400": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Read"
            ]
          }
        ]
      }
    },
    "/preview/product-sets/dataset/{dataset-id}": {
      "get": {
        "tags": [
          "Reco"
        ],
        "description": "Fetch product sets of a given dataset",
        "operationId": "FetchProductSets",
        "parameters": [
          {
            "name": "dataset-id",
            "in": "path",
            "description": "The ID of the dataset that should be used for product set retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products sets fetched successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                }
              }
            }
          },
          "400": {
            "description": "Unable to parse the request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Operation forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Reco_Read"
            ]
          }
        ]
      }
    },
    "/preview/recommendation/search": {
      "post": {
        "tags": [
          "OnSiteRecommendation"
        ],
        "description": "Retrieves a list of products recommended for the given user. This end point can either rely on a Criteo UserId, or a list of user events to perform the recommendation.",
        "operationId": "ApiV1RecoPost",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OnSiteRecoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnSiteRecoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnSiteRecoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnSiteRecoRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnSiteRecoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": { }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_OnSiteRecommendation_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/{report-id}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "This endpoint gives you the output of the report.",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "report-id",
            "in": "path",
            "description": "Id of the report",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/{report-id}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "This endpoint gives you the status of the report.",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "report-id",
            "in": "path",
            "description": "Id of the report",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/async-audience-performance": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides an export Id that lets you retrieve data.",
        "operationId": "GetAsyncAudienceReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAudiencePerformanceReportRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/async-statistics": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides an export Id that let you retrieve data.",
        "operationId": "GetAsyncAdsetReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateStatisticsReportRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MarketingSolutionsReportStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "4823b9b572a6c770bde30f943f68046b",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/creatives": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "With Creatives endpoint, you can analyse the daily performances of your creatives on the main metrics: clicks, ctr, displays.",
        "operationId": "GetCreativesReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/realtime": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "With Realtime endpoint, you can analyse the realtime values of the main metrics: displays, clicks, cost.",
        "operationId": "GetRealtimeStatisticsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/reports/top-products": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "With the topProducts endpoint, you can analyse the performances for each publisher, by top displays, top clicks or top sales.",
        "operationId": "GetTopProductsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JsonReportRowsListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/statistics/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
        "operationId": "GetAdsetReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              },
              "example": {
                "advertiserIds": "123,456,789",
                "adSetIds": [
                  "12345",
                  "54321"
                ],
                "adSetNames": [
                  "myAdSet1",
                  "myAdSet2"
                ],
                "adSetStatus": [
                  "Active"
                ],
                "dimensions": [
                  "CampaignId",
                  "Campaign",
                  "AdsetId",
                  "Adset",
                  "AdvertiserId",
                  "Advertiser",
                  "AdId",
                  "Ad",
                  "CouponId",
                  "Coupon",
                  "CategoryId",
                  "Category",
                  "Hour",
                  "Day",
                  "Week",
                  "Month",
                  "Year",
                  "Os",
                  "Device"
                ],
                "metrics": [
                  "Clicks",
                  "Displays",
                  "Cpc",
                  "Visits"
                ],
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              },
              "example": {
                "advertiserIds": "123,456,789",
                "adSetIds": [
                  "12345",
                  "54321"
                ],
                "adSetNames": [
                  "myAdSet1",
                  "myAdSet2"
                ],
                "adSetStatus": [
                  "Active"
                ],
                "dimensions": [
                  "CampaignId",
                  "Campaign",
                  "AdsetId",
                  "Adset",
                  "AdvertiserId",
                  "Advertiser",
                  "AdId",
                  "Ad",
                  "CouponId",
                  "Coupon",
                  "CategoryId",
                  "Category",
                  "Hour",
                  "Day",
                  "Week",
                  "Month",
                  "Year",
                  "Os",
                  "Device"
                ],
                "metrics": [
                  "Clicks",
                  "Displays",
                  "Cpc",
                  "Visits"
                ],
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              },
              "example": {
                "advertiserIds": "123,456,789",
                "adSetIds": [
                  "12345",
                  "54321"
                ],
                "adSetNames": [
                  "myAdSet1",
                  "myAdSet2"
                ],
                "adSetStatus": [
                  "Active"
                ],
                "dimensions": [
                  "CampaignId",
                  "Campaign",
                  "AdsetId",
                  "Adset",
                  "AdvertiserId",
                  "Advertiser",
                  "AdId",
                  "Ad",
                  "CouponId",
                  "Coupon",
                  "CategoryId",
                  "Category",
                  "Hour",
                  "Day",
                  "Week",
                  "Month",
                  "Year",
                  "Os",
                  "Device"
                ],
                "metrics": [
                  "Clicks",
                  "Displays",
                  "Cpc",
                  "Visits"
                ],
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              },
              "example": {
                "advertiserIds": "123,456,789",
                "adSetIds": [
                  "12345",
                  "54321"
                ],
                "adSetNames": [
                  "myAdSet1",
                  "myAdSet2"
                ],
                "adSetStatus": [
                  "Active"
                ],
                "dimensions": [
                  "CampaignId",
                  "Campaign",
                  "AdsetId",
                  "Adset",
                  "AdvertiserId",
                  "Advertiser",
                  "AdId",
                  "Ad",
                  "CouponId",
                  "Coupon",
                  "CategoryId",
                  "Category",
                  "Hour",
                  "Day",
                  "Week",
                  "Month",
                  "Year",
                  "Os",
                  "Device"
                ],
                "metrics": [
                  "Clicks",
                  "Displays",
                  "Cpc",
                  "Visits"
                ],
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2024-04-24T00:00:00.0000000+02:00",
                "endDate": "2024-04-27T00:00:00.0000000+02:00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/transactions/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Transactions endpoint provides transactions id related data.",
        "operationId": "GetTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryMessageListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryMessageListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryMessageListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryMessageListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                },
                "example": {
                  "warnings": [ ],
                  "errors": [
                    {
                      "traceId": "905125ba2e35bd81e02ea712e4a05e2d",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required.",
                      "detail": ""
                    }
                  ]
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "MarketingSolutions_Analytics_Read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Ad": {
        "type": "object",
        "properties": {
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set binded to this Ad",
            "nullable": true
          },
          "creativeId": {
            "type": "string",
            "description": "The id of the Creative binded to this Ad",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the ad",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier (duplicate of the parent id).",
            "nullable": true
          },
          "inventoryType": {
            "enum": [
              "Native",
              "Display",
              "Video"
            ],
            "type": "string",
            "description": "The inventory the Ad belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the ad",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The date when the ad will be launched\r\nString must be in ISO8601 format",
            "nullable": true
          }
        },
        "description": "An ad is the binding that connects a creative with an ad set",
        "nullable": true
      },
      "AdaptiveAttributes": {
        "required": [
          "callsToAction",
          "colors",
          "descriptionFont",
          "descriptionText",
          "headlineFont",
          "headlineText",
          "landingPageUrl",
          "layouts",
          "logos"
        ],
        "type": "object",
        "properties": {
          "callsToAction": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "colors": {
            "$ref": "#/components/schemas/AdaptiveColors"
          },
          "descriptionFont": {
            "type": "string",
            "description": "Font of the description\r\nValid supported font like \"Arial\""
          },
          "descriptionText": {
            "type": "string",
            "description": "The description text of the banner"
          },
          "headlineFont": {
            "type": "string",
            "description": "Font of the headline\r\nValid supported font like \"Arial\""
          },
          "headlineText": {
            "type": "string",
            "description": "The headline text of the banner"
          },
          "imageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping.",
            "nullable": true
          },
          "imageSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSet"
            },
            "description": "Multiple image sets, each image set consists of multiple images and a headline text.",
            "nullable": true
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "format": "uri"
          },
          "layouts": {
            "type": "array",
            "items": {
              "enum": [
                "Editorial",
                "Montage",
                "InBannerVideo"
              ],
              "type": "string"
            },
            "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoDetail"
            },
            "description": "Multiple videos potentially in different shapes.",
            "nullable": true
          }
        },
        "description": "The attributes specific to Adaptive creatives",
        "nullable": true
      },
      "AdaptiveColors": {
        "required": [
          "backgroundColor",
          "ctaBackgroundColor",
          "ctaTextColor",
          "logoAreaAndTitleColor",
          "text1Color",
          "text2Color"
        ],
        "type": "object",
        "properties": {
          "backgroundColor": {
            "type": "string",
            "description": "Color of the creative's background.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          },
          "ctaBackgroundColor": {
            "type": "string",
            "description": "Color of the background of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          },
          "ctaTextColor": {
            "type": "string",
            "description": "Color of the text of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          },
          "logoAreaAndTitleColor": {
            "type": "string",
            "description": "Color of the creative's logo area.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
          },
          "text1Color": {
            "type": "string",
            "description": "Color of the headline and the description texts.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          },
          "text2Color": {
            "type": "string",
            "description": "Color of the image set's headline text.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
          }
        },
        "description": "Entity consists of the color aliases of the creative's elements"
      },
      "AdaptiveWriteAttributes": {
        "required": [
          "callsToAction",
          "colors",
          "descriptionFont",
          "descriptionText",
          "headlineFont",
          "headlineText",
          "landingPageUrl",
          "layouts",
          "logoBase64String"
        ],
        "type": "object",
        "properties": {
          "callsToAction": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "colors": {
            "$ref": "#/components/schemas/AdaptiveColors"
          },
          "descriptionFont": {
            "type": "string",
            "description": "Font of the description\r\nValid supported font like \"Arial\""
          },
          "descriptionText": {
            "type": "string",
            "description": "The description text of the banner"
          },
          "headlineFont": {
            "type": "string",
            "description": "Font of the headline\r\nValid supported font like \"Arial\""
          },
          "headlineText": {
            "type": "string",
            "description": "The headline text of the banner"
          },
          "imageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping.",
            "nullable": true
          },
          "imageSetsBase64": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSetBase64"
            },
            "description": "Multiple image sets, each image set consists of multiple images as a base-64 encoded string and a headline text.",
            "nullable": true
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url.",
            "format": "uri"
          },
          "layouts": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "Editorial",
                "Montage",
                "InBannerVideo"
              ],
              "type": "string"
            },
            "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
          },
          "logoBase64String": {
            "type": "string",
            "description": "Logo image as a base-64 encoded string"
          },
          "videoBase64Strings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Multiple videos potentially in different shapes, each video is a base-64 encoded string.",
            "nullable": true
          }
        },
        "description": "The attributes specific to create or update an Adaptive creative"
      },
      "AdSetAudienceLinkEntityV1": {
        "type": "object",
        "properties": {
          "audienceId": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Link Audience with an ad set",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AdSetAudience",
          "version": "v1"
        }
      },
      "AdSetAudienceLinkEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "AdSetAudienceLinkEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "AdSetAudienceLinkInputEntityV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
          }
        },
        "description": "Input to set audience ad set link."
      },
      "AdSetCategoryBid": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the Category Bid has been applied.",
            "nullable": true
          }
        },
        "description": "Category Bid information about a Category for a given Ad Set.",
        "nullable": true
      },
      "AdSetCategoryBidListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetCategoryBidResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "AdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetDeliveryLimitationsV24Q3": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "enum": [
                "other",
                "desktop",
                "mobile",
                "tablet"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "web",
                "inApp"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "operatingSystems": {
            "type": "array",
            "items": {
              "enum": [
                "android",
                "ios",
                "unknown"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "ad set delivery limitations model",
        "nullable": true
      },
      "AdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the given for which the Display Multiplier has been applied.",
            "nullable": true
          },
          "displayMultiplier": {
            "type": "number",
            "description": "The Display Multiplier applied to the given Category associated to an Ad Set.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Display Multiplier information about a Category for a given Ad Set.",
        "nullable": true
      },
      "AdSetDisplayMultiplierListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetDisplayMultiplierResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "AdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetFrequencyCappingV24Q3": {
        "type": "object",
        "properties": {
          "frequency": {
            "enum": [
              "hourly",
              "daily",
              "lifetime",
              "advanced"
            ],
            "type": "string",
            "nullable": true
          },
          "maximumImpressions": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "ad set frequency capping model",
        "nullable": true
      },
      "AdSetGeoLocationV24Q3": {
        "type": "object",
        "properties": {
          "countries": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRuleV24Q3"
          },
          "subdivisions": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRuleV24Q3"
          },
          "zipCodes": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRuleV24Q3"
          }
        },
        "description": "ad set geolocation model",
        "nullable": true
      },
      "AdSetIdV24Q3": {
        "type": "object",
        "description": "ad set id model",
        "nullable": true
      },
      "AdSetSearchFilterV24Q3": {
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "filter on ad set ids"
      },
      "AdSetSearchRequestV24Q3": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/AdSetSearchFilterV24Q3"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "AdSetTargetingDealIds": {
        "type": "object",
        "properties": {
          "dealIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealId"
            },
            "nullable": true
          }
        },
        "description": "Ad set Deal Id targeting model",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingDealIdsDisableResult": {
        "type": "object",
        "description": "Result of the AdSetTargetingDealIds disabling",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingDealIdsDisableResultResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResult"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingDealIdsDisableResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdSetTargetingDealIdsResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingDealIds"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingDealIdsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingDealIdsResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdSetTargetingDealIdsSetResult": {
        "type": "object",
        "description": "Result of the AdSetTargetingDealIds setting",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingDealIdsSetResultResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResult"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingDealIdsSetResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdSetTargetingRuleV24Q3": {
        "type": "object",
        "properties": {
          "operand": {
            "enum": [
              "undefined",
              "in",
              "notIn"
            ],
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "ad set targeting rule model"
      },
      "AdSetTargetingV24Q3": {
        "type": "object",
        "properties": {
          "deliveryLimitations": {
            "$ref": "#/components/schemas/AdSetDeliveryLimitationsV24Q3"
          },
          "frequencyCapping": {
            "type": "object",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/AdSetFrequencyCappingV24Q3"
              }
            },
            "nullable": true
          },
          "geoLocation": {
            "$ref": "#/components/schemas/AdSetGeoLocationV24Q3"
          }
        },
        "description": "ad set targeting model",
        "nullable": true
      },
      "AdSetTargetingVideoPositioning": {
        "type": "object",
        "properties": {
          "playbackMethod": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AutoSoundOn",
                "AutoSoundOff",
                "ClickSoundOn",
                "MouseOverSoundOn",
                "EnteringViewportSoundOn",
                "EnteringViewportSoundOff"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "skippable": {
            "enum": [
              "Required",
              "Blocked"
            ],
            "type": "string",
            "nullable": true
          },
          "videoAspectRatio": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Horizontal",
                "Square",
                "Vertical"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "videoInStreamPosition": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "PreRoll",
                "MidRoll",
                "PostRoll"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "videoPlayerSize": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Small",
                "Medium",
                "Large",
                "ExtraLarge"
              ],
              "type": "string"
            },
            "nullable": true
          },
          "videoPlcmt": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "InStream",
                "AccompanyingContent",
                "Interstitial",
                "NoContentStandalone"
              ],
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "Video positioning targeting model",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingVideoPositioningDisableResult": {
        "type": "object",
        "description": "Result of the AdSetTargetingVideoPositioning deletion",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingVideoPositioningDisableResultResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResult"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingVideoPositioningDisableResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdSetTargetingVideoPositioningResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioning"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingVideoPositioningResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdSetTargetingVideoPositioningSetResult": {
        "type": "object",
        "description": "Result of the AdSetTargetingDealIds setting",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "AdSetTargetingVideoPositioningSetResultResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResult"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way",
        "nullable": true
      },
      "AdSetTargetingVideoPositioningSetResultResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "AdvertiserDatasetListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityV2OfDataset"
            },
            "description": "The response’s primary data",
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty",
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarningV2"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future.",
            "nullable": true
          }
        },
        "description": "Get datasets response."
      },
      "AdWrite": {
        "required": [
          "adSetId",
          "creativeId",
          "name",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set bound to this Ad"
          },
          "creativeId": {
            "type": "string",
            "description": "The id of the Creative bound to this Ad"
          },
          "description": {
            "type": "string",
            "description": "The description of the ad",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "inventoryType": {
            "enum": [
              "Display",
              "Native"
            ],
            "type": "string",
            "description": "The inventory the Ad to be created or updated belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the ad"
          },
          "startDate": {
            "type": "string",
            "description": "The date when the ad will be launched\r\nString must be in ISO8601 format"
          }
        },
        "description": "Entity to create or update an ad"
      },
      "AlgebraNodeV1": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlgebraNodeV1"
            },
            "nullable": true
          },
          "audienceSegmentId": {
            "type": "string",
            "nullable": true
          },
          "not": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlgebraNodeV1"
            },
            "nullable": true
          }
        },
        "description": "Node in the audience algebra definition.",
        "nullable": true
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDescription"
            },
            "nullable": true
          }
        },
        "description": "Root object for the API error response"
      },
      "ApiRequestOfTargetingEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityWrapperOfTargetingEntity"
          }
        },
        "description": "Root object containing the API request"
      },
      "ApiResponseOfTargetingEntity": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityWrapperOfTargetingEntity"
          }
        },
        "description": "Root object for the API response"
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Used for the /me endpoint. Contains information about the currently authenticated application that we accept to give to our clients",
        "nullable": true
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "Attribute": {
        "required": [
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "User attribute definition under the form (key, value)"
      },
      "AudienceBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceCreateEntityV1Resource"
            }
          }
        },
        "description": "Input to create one or more audiences."
      },
      "AudienceBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceDeleteEntityV1Resource"
            }
          }
        },
        "description": "Input to delete one or more audiences."
      },
      "AudienceBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceUpdateEntityV1Resource"
            }
          }
        },
        "description": "Input to update one or more audiences."
      },
      "AudienceComputeSizeEntityV1": {
        "type": "object",
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceComputeSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceComputeSizeEntityV1Resource"
            }
          }
        },
        "description": "Input to retrieve the size of one or more audiences."
      },
      "AudienceCreateEntityV1": {
        "required": [
          "advertiserId",
          "algebra",
          "name"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          },
          "description": {
            "type": "string",
            "description": "Description of the audience"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "AudienceCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceCreateEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceDeleteEntityV1": {
        "type": "object",
        "description": "Audience to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceEntityV1": {
        "type": "object",
        "properties": {
          "adSetIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ad sets associated to the audience",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience",
            "nullable": true
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the audience",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the audience",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceEntityV1AudienceSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/AudienceSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "AudienceEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of an audience error"
      },
      "AudienceEstimateSizeEntityV1": {
        "required": [
          "advertiserId",
          "algebra"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the audience"
          },
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "AudienceEstimateSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1Resource"
          }
        },
        "description": "Input to estimate the size of an audience."
      },
      "AudienceIdEntityV1": {
        "type": "object",
        "description": "Audience entity with only its ID",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceIdEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceNameDescription": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the audience",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name to designate the audience by",
            "nullable": true
          }
        },
        "description": "Description of an audience with name and detailed description",
        "nullable": true
      },
      "AudienceSearchEntityV1": {
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of AdSet ids"
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of advertiser ids"
          },
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audience ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids (linked to the result audiences)"
          }
        },
        "description": "Available filters to perform a search on segments. If present, the filters are AND'ed together when applied."
      },
      "AudienceSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSearchEntityV1Resource"
          }
        },
        "description": "Audience search parameter"
      },
      "AudienceSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for the audience search response.",
        "nullable": true
      },
      "AudienceSegmentBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1Resource"
            }
          }
        },
        "description": "Input to create one or more audience segments."
      },
      "AudienceSegmentBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1Resource"
            }
          }
        },
        "description": "Input to delete one or more segments."
      },
      "AudienceSegmentBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1Resource"
            }
          }
        },
        "description": "Input to update one or more segments."
      },
      "AudienceSegmentComputeSizeEntityV1": {
        "type": "object",
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1Resource"
            }
          }
        },
        "description": "Input to retrieve the size of one or more segments."
      },
      "AudienceSegmentCreateEntityV1": {
        "required": [
          "advertiserId",
          "name"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment"
          },
          "contactList": {
            "$ref": "#/components/schemas/ContactListCreateV1"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketCreateV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationCreateV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeCreateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingCreateV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingCreateV1"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "AudienceSegmentCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentDeleteEntityV1": {
        "type": "object",
        "description": "Segment to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentEntityV1": {
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment",
            "nullable": true
          },
          "behavioral": {
            "$ref": "#/components/schemas/BehavioralV1"
          },
          "contactList": {
            "$ref": "#/components/schemas/ContactListV1"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the segment",
            "nullable": true
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment",
            "nullable": true
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingV1"
          },
          "type": {
            "enum": [
              "Unknown",
              "InMarket",
              "Prospecting",
              "ContactList",
              "Location",
              "Behavioral",
              "Retargeting",
              "Lookalike"
            ],
            "type": "string",
            "description": "Type of segment (read-only)",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/AudienceSegmentSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "AudienceSegmentEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1Resource"
          }
        },
        "description": "Input to estimate the size of an audience segment.."
      },
      "AudienceSegmentIdEntityV1": {
        "type": "object",
        "description": "Audience Segment entity only with its ID",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentIdEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentSearchEntityV1": {
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of advertiser ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids"
          },
          "audienceSegmentTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "InMarket",
                "Prospecting",
                "ContactList",
                "Location",
                "Behavioral",
                "Retargeting",
                "Lookalike"
              ],
              "type": "string"
            },
            "description": "List of segment types"
          }
        },
        "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied."
      },
      "AudienceSegmentSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1Resource"
          }
        },
        "description": "Audience segment search parameter"
      },
      "AudienceSegmentSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for the audience segment search response.",
        "nullable": true
      },
      "AudienceSegmentSizeEntityV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegmentSize",
          "version": "v1"
        }
      },
      "AudienceSegmentSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSegmentSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSegmentSizeEstimationEntityV1": {
        "required": [
          "advertiserId"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser associated to the segment"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketSizeEstimationV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationSizeEstimationV1"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "AudienceSegmentSizeEstimationEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentSizeEstimationV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Segment size estimation",
        "nullable": true
      },
      "AudienceSegmentSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "AudienceSegmentSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceSegmentUpdateEntityV1": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "inMarket": {
            "$ref": "#/components/schemas/InMarketUpdateV1"
          },
          "location": {
            "$ref": "#/components/schemas/LocationUpdateV1"
          },
          "lookalike": {
            "$ref": "#/components/schemas/LookalikeUpdateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "prospecting": {
            "$ref": "#/components/schemas/ProspectingUpdateV1"
          },
          "retargeting": {
            "$ref": "#/components/schemas/RetargetingUpdateV1"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSegment",
          "version": "v1"
        }
      },
      "AudienceSegmentUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSizeEntityV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Audience entity only with its size",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "AudienceSize",
          "version": "v1"
        }
      },
      "AudienceSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSizeEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "AudienceSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceSizeEstimationV1": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Audience size estimation",
        "nullable": true
      },
      "AudienceSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceSizeEstimationV1"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "AudienceSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AudienceSizeEstimationV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AudienceUpdateEntityV1": {
        "type": "object",
        "properties": {
          "algebra": {
            "$ref": "#/components/schemas/AlgebraNodeV1"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "Audience",
          "version": "v1"
        }
      },
      "AudienceUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of the warning"
      },
      "AutomatedBudgetConfigurationV23Q1": {
        "type": "object",
        "properties": {
          "adSetOptimizationObjective": {
            "enum": [
              "conversions",
              "revenue",
              "visits",
              "videoViews"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "The automated budget configuration model",
        "nullable": true
      },
      "BasicAudienceDefinition": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AudienceNameDescription"
          },
          "id": {
            "type": "string",
            "description": "the id of the entity type"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          }
        },
        "description": "Common definition of an audience"
      },
      "BatchAcceptedResponse": {
        "required": [
          "operationToken"
        ],
        "type": "object",
        "properties": {
          "operationToken": {
            "type": "string"
          }
        },
        "description": "A batch was accepted. The report can be accessed using the reporting endpoint."
      },
      "BehavioralV1": {
        "required": [
          "category"
        ],
        "type": "object",
        "properties": {
          "category": {
            "enum": [
              "Unknown",
              "Lifestyles",
              "LifeEvents",
              "Seasonal",
              "BuyingPatterns"
            ],
            "type": "string",
            "description": "The type of behavioral"
          },
          "country": {
            "type": "string",
            "description": "The users' country",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Desired date when the behavioral will end",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Desired date when the behavioral will start",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Settings of a behavioral set of users provided by Criteo.",
        "nullable": true
      },
      "BudgetAutomation": {
        "type": "object",
        "properties": {
          "budgetConfiguration": {
            "$ref": "#/components/schemas/BudgetAutomationConfiguration"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": "The campaign budget automation model"
      },
      "BudgetAutomationConfiguration": {
        "type": "object",
        "properties": {
          "adSetObjectives": {
            "enum": [
              "conversions",
              "revenue",
              "visits",
              "videoViews"
            ],
            "type": "string"
          }
        },
        "description": "The budget automation configuration model",
        "nullable": true
      },
      "CampaignBudgetAutomationV23Q1": {
        "type": "object",
        "properties": {
          "automatedBudgetConfiguration": {
            "$ref": "#/components/schemas/AutomatedBudgetConfigurationV23Q1"
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "description": "The campaign budget automation model",
        "nullable": true
      },
      "CampaignSearchFiltersV23Q1": {
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "filters on campaign"
      },
      "CampaignSearchRequestV23Q1": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/CampaignSearchFiltersV23Q1"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "CampaignSpendLimitV23Q1": {
        "type": "object",
        "properties": {
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "nullable": true
          },
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "campaign spend limit model",
        "nullable": true
      },
      "CampaignV23Q1": {
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "nullable": true
          },
          "budgetAutomation": {
            "$ref": "#/components/schemas/CampaignBudgetAutomationV23Q1"
          },
          "goal": {
            "enum": [
              "unspecified",
              "acquisition",
              "retention"
            ],
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity (duplicate of the parent id).",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CampaignSpendLimitV23Q1"
          }
        },
        "description": "campaign read model",
        "nullable": true
      },
      "CampaignV23Q1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignV23Q1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "CampaignV23Q1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CampaignV23Q1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "Campaign"
          }
        },
        "description": "Data model for a Resource",
        "nullable": true
      },
      "CampaignV23Q1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignV23Q1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem."
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type"
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from."
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)"
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category."
          }
        },
        "description": "Common problem object."
      },
      "ContactlistAmendment": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "gumCallerId": {
                "type": "integer",
                "description": "The Gum caller id of the advertiser patching identifiers of type Gum"
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users to add or remove, each in the schema specified"
              },
              "identifierType": {
                "enum": [
                  "email",
                  "madid",
                  "identityLink",
                  "gum",
                  "phoneNumber"
                ],
                "type": "string",
                "description": "What type of identifiers are used"
              },
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Operation to add or remove users"
              }
            },
            "description": "the name of the entity type"
          },
          "type": {
            "type": "string",
            "description": "User List",
            "example": "ContactlistAmendment"
          }
        },
        "description": "Parameters for the amendment of a contactlist"
      },
      "ContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistAmendment"
          }
        },
        "description": "Request for a contactlist amendment"
      },
      "ContactListCreateV1": {
        "type": "object",
        "description": "Settings to target users with your contact lists."
      },
      "ContactlistOperation": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "required": [
              "operation"
            ],
            "type": "object",
            "properties": {
              "contactListId": {
                "type": "integer",
                "description": "the affected user list id",
                "nullable": true
              },
              "identifierType": {
                "type": "string",
                "description": "The schema specified for of the identifiers",
                "nullable": true
              },
              "nbInvalidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were invalid for the specified schema",
                "nullable": true
              },
              "nbValidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were valid for the specified schema",
                "nullable": true
              },
              "operation": {
                "type": "string",
                "description": "The action recorded"
              },
              "requestDate": {
                "type": "string",
                "description": "When the action was recorded",
                "format": "date-time",
                "nullable": true
              },
              "sampleInvalidIdentifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A sample of invalid identifiers if there is some",
                "nullable": true
              }
            },
            "description": "the contactlist operation attributes"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          }
        },
        "description": "Response definition of a contactlist operation"
      },
      "ContactListStatisticsEntityV1": {
        "type": "object",
        "properties": {
          "matchRate": {
            "type": "number",
            "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
            "format": "double",
            "nullable": true
          },
          "numberOfIdentifiers": {
            "type": "integer",
            "description": "Number of identifiers in the contact list.",
            "format": "int32",
            "nullable": true
          },
          "numberOfMatches": {
            "type": "integer",
            "description": "Number of matched identifiers in the contact list.",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Contact list statistics.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "ContactListStatistics",
          "version": "v1"
        }
      },
      "ContactListStatisticsEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ContactListStatisticsEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "ContactListStatisticsEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactListStatisticsEntityV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "ContactListV1": {
        "type": "object",
        "properties": {
          "isReadOnly": {
            "type": "boolean",
            "description": "Is the segment read-only",
            "nullable": true
          }
        },
        "description": "Settings to target users with your contact lists.",
        "nullable": true
      },
      "ContactlistWithAttributesAmendment": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "required": [
              "identifiers",
              "operation",
              "identifierType"
            ],
            "type": "object",
            "properties": {
              "gumCallerId": {
                "type": "object",
                "description": "The Gum caller id of the advertiser patching identifiers of type Gum",
                "readOnly": true
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserDef"
                },
                "description": "The users to add or remove, each in the schema specified, defined with attributes"
              },
              "identifierType": {
                "enum": [
                  "email",
                  "madid",
                  "identityLink",
                  "gum",
                  "phoneNumber"
                ],
                "type": "string",
                "description": "What type of identifiers are used",
                "example": "email"
              },
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Whether to add or remove users"
              }
            },
            "description": "the name of the entity type"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "ContactlistWithUserAttributesAmendment"
          }
        },
        "description": "Parameters for a contactlist amendment with user attributes"
      },
      "ContactlistWithAttributesAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistWithAttributesAmendment"
          }
        },
        "description": "Request for a contactlist amendment with user attributes",
        "example": {
          "data": {
            "type": "ContactlistWithUserAttributesAmendment",
            "attributes": {
              "operation": "add",
              "identifierType": "email",
              "identifiers": [
                {
                  "identifier": "example1@gmail.com",
                  "attributes": [
                    {
                      "key": "age",
                      "value": "12"
                    },
                    {
                      "key": "country",
                      "value": "FR"
                    },
                    {
                      "key": "size",
                      "value": "S"
                    }
                  ]
                },
                {
                  "identifier": "example2@gmail.com",
                  "attributes": [
                    {
                      "key": "age",
                      "value": "43"
                    },
                    {
                      "key": "preferredColor",
                      "value": "yellow"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set on which the Coupon is applied to",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser linked to the Coupon",
            "nullable": true
          },
          "author": {
            "type": "string",
            "description": "The login of the person who created this Coupon",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the Coupon",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\"",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier (duplicate of the parent id).",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageSlide"
            },
            "description": "List of slides containing the image URLs",
            "nullable": true
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the Coupon",
            "nullable": true
          },
          "rotationsNumber": {
            "type": "integer",
            "description": "Number of rotations for the Coupons (from 1 to 10 times)",
            "format": "int32",
            "nullable": true
          },
          "showDuration": {
            "type": "integer",
            "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
            "format": "int32",
            "nullable": true
          },
          "showEvery": {
            "type": "integer",
            "description": "Show the Coupon every N seconds (between 1 and 10)",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The status of the Coupon",
            "nullable": true
          }
        },
        "description": "Coupons are static images applied on ad set which can be displayed within an ad and link to a landing page.",
        "nullable": true
      },
      "CouponSupportedSizes": {
        "type": "object",
        "properties": {
          "fullFrame": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of FullFrame sizes as string in width x height format",
            "nullable": true
          },
          "logoZone": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of LogoZone sizes as string in width x height format",
            "nullable": true
          }
        },
        "description": "Entity containing the list of Coupon supported sizes",
        "nullable": true
      },
      "CreateAdSetAttributionConfigurationV24Q3": {
        "type": "object",
        "properties": {
          "attributionMethod": {
            "enum": [
              "unknown",
              "criteoAttribution",
              "googleAnalyticsLastClick",
              "googleAnalyticsDataDriven",
              "lastClick",
              "postClick"
            ],
            "type": "string",
            "description": "The attribution method."
          },
          "lookbackWindow": {
            "enum": [
              "unknown",
              "30M",
              "24H",
              "7D",
              "30D"
            ],
            "type": "string",
            "description": "The lookback window. Optional, should be specified only for attribution methods PostClick and LastClick.",
            "nullable": true
          }
        },
        "description": "Create model for an ad set's attribution configuration."
      },
      "CreateAdSetBiddingV24Q3": {
        "required": [
          "costController"
        ],
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "Decimal value target relating to the `bidStrategy` specified. May be `null` for strategies that do not require a target value. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          },
          "costController": {
            "enum": [
              "COS",
              "maxCPC",
              "CPI",
              "CPM",
              "CPO",
              "CPSV",
              "CPV",
              "dailyBudget",
              "targetCPM"
            ],
            "type": "string",
            "description": "How spend is controlled"
          }
        },
        "description": "ad set bidding create model"
      },
      "CreateAdSetBudgetV24Q3": {
        "required": [
          "budgetStrategy"
        ],
        "type": "object",
        "properties": {
          "budgetAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string"
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string"
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime",
              "weekly"
            ],
            "type": "string"
          },
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string"
          }
        },
        "description": "ad set budget create model"
      },
      "CreateAdSetGeoLocationV24Q3": {
        "type": "object",
        "properties": {
          "countries": {
            "$ref": "#/components/schemas/AdSetTargetingRuleV24Q3"
          },
          "subdivisions": {
            "$ref": "#/components/schemas/AdSetTargetingRuleV24Q3"
          },
          "zipCodes": {
            "$ref": "#/components/schemas/AdSetTargetingRuleV24Q3"
          }
        },
        "description": "Geolocation configuration of the ad set"
      },
      "CreateAdSetScheduleV24Q3": {
        "required": [
          "startDate"
        ],
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "ad set schedule create model"
      },
      "CreateAdSetTargetingV24Q3": {
        "required": [
          "frequencyCapping"
        ],
        "type": "object",
        "properties": {
          "deliveryLimitations": {
            "$ref": "#/components/schemas/AdSetDeliveryLimitationsV24Q3"
          },
          "frequencyCapping": {
            "$ref": "#/components/schemas/AdSetFrequencyCappingV24Q3"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/CreateAdSetGeoLocationV24Q3"
          }
        },
        "description": "Targeting configuration of the ad set"
      },
      "CreateAdSetV24Q3": {
        "required": [
          "bidding",
          "campaignId",
          "datasetId",
          "mediaType",
          "name",
          "objective",
          "schedule",
          "targeting",
          "trackingCode"
        ],
        "type": "object",
        "properties": {
          "attributionConfiguration": {
            "$ref": "#/components/schemas/CreateAdSetAttributionConfigurationV24Q3"
          },
          "bidding": {
            "$ref": "#/components/schemas/CreateAdSetBiddingV24Q3"
          },
          "budget": {
            "$ref": "#/components/schemas/CreateAdSetBudgetV24Q3"
          },
          "campaignId": {
            "type": "string",
            "description": "Campaign id this ad set belongs to",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset id of this ad set",
            "nullable": true
          },
          "mediaType": {
            "enum": [
              "display",
              "video"
            ],
            "type": "string",
            "description": "Media type for the ad set"
          },
          "name": {
            "type": "string",
            "description": "Name of the ad set",
            "nullable": true
          },
          "objective": {
            "enum": [
              "customAction",
              "clicks",
              "conversions",
              "displays",
              "appPromotion",
              "revenue",
              "storeConversions",
              "value",
              "reach",
              "visits",
              "videoViews"
            ],
            "type": "string",
            "description": "Objective of the ad set"
          },
          "schedule": {
            "$ref": "#/components/schemas/CreateAdSetScheduleV24Q3"
          },
          "targeting": {
            "$ref": "#/components/schemas/CreateAdSetTargetingV24Q3"
          },
          "trackingCode": {
            "type": "string",
            "description": "The click tracking code associated to this Ad Set.",
            "nullable": true
          }
        },
        "description": "ad set create model"
      },
      "CreateAdSetV24Q3Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateAdSetV24Q3Resource"
          }
        },
        "description": "Data model for an input resources"
      },
      "CreateAdSetV24Q3Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateAdSetV24Q3"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSet"
          }
        },
        "description": "Data model for a Resource"
      },
      "CreateCampaign": {
        "required": [
          "advertiserId",
          "goal",
          "name",
          "spendLimit"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id this campaign belongs to",
            "nullable": true
          },
          "budgetAutomation": {
            "$ref": "#/components/schemas/BudgetAutomation"
          },
          "goal": {
            "enum": [
              "Unspecified",
              "Acquisition",
              "Retention"
            ],
            "type": "string",
            "description": "Goal for the marketing campaign"
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "nullable": true
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CreateCampaignSpendLimit"
          }
        },
        "description": "Campaign create model"
      },
      "CreateCampaignRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CreateCampaignResource"
          }
        },
        "description": "Data model for an input resources"
      },
      "CreateCampaignResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateCampaign"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "Campaign"
          }
        },
        "description": "Data model for a Resource"
      },
      "CreateCampaignSpendLimit": {
        "required": [
          "spendLimitType"
        ],
        "type": "object",
        "properties": {
          "spendLimitAmount": {
            "type": "number",
            "description": "The amount of the spend limit. null if spendLimitType is uncapped.",
            "format": "double",
            "nullable": true
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal"
          },
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not"
          }
        },
        "description": "campaign spend limit create model"
      },
      "CreateCoupon": {
        "required": [
          "adSetId",
          "format",
          "images",
          "landingPageUrl",
          "name",
          "rotationsNumber",
          "showDuration",
          "showEvery",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetId": {
            "type": "string",
            "description": "The id of the Ad Set on which the Coupon is applied to"
          },
          "description": {
            "type": "string",
            "description": "The description of the Coupon",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "format": {
            "enum": [
              "FullFrame",
              "LogoZone"
            ],
            "type": "string",
            "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\""
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateImageSlide"
            },
            "description": "List of slides containing the images as a base-64 encoded string"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url"
          },
          "name": {
            "type": "string",
            "description": "The name of the Coupon"
          },
          "rotationsNumber": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "description": "Number of rotations for the Coupons (from 1 to 10 times)",
            "format": "int32"
          },
          "showDuration": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
            "format": "int32"
          },
          "showEvery": {
            "maximum": 10,
            "minimum": 1,
            "type": "integer",
            "description": "Show the Coupon every N seconds (between 1 and 10)",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "The date when the coupon will be launched\r\nString must be in ISO8601 format"
          }
        },
        "description": "Entity to create a Coupon"
      },
      "CreateImageSlide": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height of the Coupon slide",
            "format": "int32"
          },
          "slideBase64Strings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images of the same size as a base-64 encoded string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Width of the Coupon slide",
            "format": "int32"
          }
        },
        "description": "Slide containing the images of the same size as a base-64 encoded string"
      },
      "CreateProductFilterRequest": {
        "type": "object",
        "properties": {
          "productSetId": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Encapsulate the parameters needed to enable product filtering"
      },
      "CreateProductSetRequest": {
        "type": "object",
        "properties": {
          "datasetId": {
            "type": "string"
          },
          "isDraft": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "rules": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSetRule"
            }
          }
        },
        "description": "Entity to create a product set"
      },
      "Creative": {
        "required": [
          "advertiserId",
          "author",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "adaptiveAttributes": {
            "$ref": "#/components/schemas/AdaptiveAttributes"
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser linked to the Creative"
          },
          "author": {
            "type": "string",
            "description": "The login of the person who created this creative ("
          },
          "datasetId": {
            "type": "string",
            "description": "Data set id linked to the Creative",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the creative",
            "nullable": true
          },
          "dynamicAttributes": {
            "$ref": "#/components/schemas/DynamicAttributes"
          },
          "format": {
            "type": "string",
            "description": "The format of the creative",
            "nullable": true
          },
          "htmlTagAttributes": {
            "$ref": "#/components/schemas/HtmlTagAttributes"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier (duplicate of the parent id).",
            "nullable": true
          },
          "imageAttributes": {
            "$ref": "#/components/schemas/ImageAttributes"
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "status": {
            "type": "string",
            "description": "The status of the creative"
          }
        },
        "description": "A creative is a project with the necessary information to display a creative",
        "nullable": true
      },
      "CreativeWrite": {
        "required": [
          "datasetId",
          "format",
          "name"
        ],
        "type": "object",
        "properties": {
          "adaptiveWriteAttributes": {
            "$ref": "#/components/schemas/AdaptiveWriteAttributes"
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset linked to the Creative"
          },
          "description": {
            "type": "string",
            "description": "The description of the creative",
            "nullable": true
          },
          "dynamicWriteAttributes": {
            "$ref": "#/components/schemas/DynamicWriteAttributes"
          },
          "format": {
            "enum": [
              "Image",
              "HtmlTag",
              "Dynamic",
              "Adaptive"
            ],
            "type": "string",
            "description": "The format of the creative\r\nYou can use \"Image\", \" HtmlTag\", \"Dynamic\" or \"Adaptive\""
          },
          "htmlTagWriteAttributes": {
            "$ref": "#/components/schemas/HtmlTagWriteAttributes"
          },
          "imageWriteAttributes": {
            "$ref": "#/components/schemas/ImageWriteAttributes"
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          }
        },
        "description": "Entity to create or update a creative"
      },
      "CriteoApiError": {
        "type": "object",
        "properties": {
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "nullable": true,
            "example": "internal-error"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway",
            "nullable": true
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "nullable": true,
            "example": "access_control"
          }
        },
        "description": "Criteo API response error"
      },
      "CriteoApiWarning": {
        "type": "object",
        "properties": {
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "nullable": true,
            "example": "internal-error"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway",
            "nullable": true
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "nullable": true,
            "example": "access_control"
          }
        },
        "description": "Criteo API response warning"
      },
      "CriteoApiWarningV2": {
        "type": "object",
        "properties": {
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan",
              "permission-denied"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "nullable": true,
            "example": "internal-error"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "nullable": true,
            "example": "access-control"
          }
        },
        "description": "Criteo API response warning"
      },
      "CustomAttribute": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute."
          }
        },
        "description": "Defines a custom attribute of a product."
      },
      "Dataset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Information about a dataset",
        "nullable": true
      },
      "DealId": {
        "type": "object",
        "properties": {
          "dealIdentifier": {
            "type": "string",
            "nullable": true
          },
          "supplyVendorId": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Deal Id model"
      },
      "DeleteAudienceContactListResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of a contactlist deletion"
      },
      "DynamicAttributes": {
        "type": "object",
        "properties": {
          "bodyTextColor": {
            "type": "string",
            "description": "Color of the creative's body text\r\nValid hexadecimal color (e.g. \"AB00FF\")",
            "nullable": true
          },
          "callsToAction": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”.",
            "nullable": true
          },
          "creativeBackgroundColor": {
            "type": "string",
            "description": "Color of the creative's background\r\nValid hexadecimal color (e.g. \"AB00FF\")",
            "nullable": true
          },
          "logos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "nullable": true
          },
          "pricesColor": {
            "type": "string",
            "description": "Color of the creative's prices\r\nValid hexadecimal color (e.g. \"AB00FF\")",
            "nullable": true
          },
          "primaryFont": {
            "type": "string",
            "description": "Font of the primary font\r\nValid supported font like \"Arial\"",
            "nullable": true
          },
          "productImageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping.",
            "nullable": true
          }
        },
        "description": "The attributes specific to Dynamic creatives",
        "nullable": true
      },
      "DynamicWriteAttributes": {
        "required": [
          "bodyTextColor",
          "callsToAction",
          "logoBase64String",
          "pricesColor",
          "productImageDisplay"
        ],
        "type": "object",
        "properties": {
          "bodyTextColor": {
            "type": "string",
            "description": "Color of the creative's body text\r\nValid hexadecimal color (e.g. \"AB00FF\")"
          },
          "callsToAction": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
          },
          "creativeBackgroundColor": {
            "type": "string",
            "description": "Color of the creative's background\r\nValid hexadecimal color (e.g. \"AB00FF\")",
            "nullable": true
          },
          "logoBase64String": {
            "type": "string",
            "description": "Logo image as a base-64 encoded string"
          },
          "pricesColor": {
            "type": "string",
            "description": "Color of the creative's prices\r\nValid hexadecimal color (e.g. \"AB00FF\")"
          },
          "primaryFont": {
            "type": "string",
            "description": "Font of the primary font\r\nValid supported font like \"Arial\"",
            "nullable": true
          },
          "productImageDisplay": {
            "enum": [
              "ShowFullImage",
              "ZoomOnImage"
            ],
            "type": "string",
            "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
          }
        },
        "description": "The attributes specific to create or update a Dynamic creative"
      },
      "EntityFilter": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "readOnly": {
            "type": "boolean",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Could be a domain or a bundle depending on the context",
            "nullable": true
          }
        },
        "description": "Represents a filter value for a blocklist or allowlist rule"
      },
      "EntityOfPortfolioMessage": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PortfolioMessage"
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity",
            "nullable": true
          },
          "meta": {
            "type": "object",
            "description": "A meta object that contains application-specific metadata",
            "nullable": true
          },
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "publisher",
              "address",
              "client",
              "contact",
              "industry"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "nullable": true,
            "example": "campaign"
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "EntityV2OfDataset": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Dataset"
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity"
          },
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "agencyAdvertiserLink",
              "AgencyAdvertiserTransferRequest",
              "publisher",
              "address",
              "client",
              "contact",
              "industry",
              "agencyAdvertiserCreationRequest",
              "countryCurrenciesList",
              "verticalsSubverticalsList",
              "dataset"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "example": "dataset"
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "EntityV2OfObject": {
        "required": [
          "type",
          "id"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "description": "Generic Criteo API successful data model\r\nWhile others may be computed e.g. lastChangedDate.\r\nComputed attributes are only part of the read model and not part of the write model.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity"
          },
          "meta": {
            "type": "object",
            "description": "A meta object that contains application-specific metadata",
            "nullable": true
          },
          "relationships": {
            "type": "object",
            "description": "Relationships with this entity",
            "nullable": true
          },
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "agencyAdvertiserLink",
              "AgencyAdvertiserTransferRequest",
              "publisher",
              "address",
              "client",
              "contact",
              "industry"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "example": "campaign"
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "EntityWrapperOfTargetingEntity": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/TargetingEntity"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Standard envelope for an entity",
        "nullable": true
      },
      "ErrorCodeResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            },
            "nullable": true
          }
        },
        "description": "Definition of the error code"
      },
      "ErrorDescription": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Error structure representing an error message"
      },
      "ExportColumn": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "relatedTo": {
            "enum": [
              "AdSetId",
              "AdSet",
              "AdvertiserId",
              "Advertiser",
              "CategoryId",
              "Category",
              "Hour",
              "Day",
              "Week",
              "Month",
              "Year",
              "Os",
              "Device",
              "CampaignId",
              "Campaign",
              "AdId",
              "Ad",
              "CouponId",
              "Coupon",
              "ChannelId",
              "Channel",
              "VideoPlacement",
              "MarketingCampaignGoal",
              "MarketingObjective",
              "MarketingObjectiveId",
              "VideoPlayerSize",
              "VideoPlaybackMethod",
              "SSP",
              "VideoDurationInSeconds",
              "MediaType",
              "AdFormat",
              "DisplaySize",
              "VideoPlayerRatio",
              "Top30BrandsByDisplays",
              "Top30BrandsByClicks",
              "Top30BrandsBySales",
              "Top30InterestsByDisplays",
              "Top30InterestsByClicks",
              "Top30InterestsBySales",
              "Country",
              "Region",
              "PostalCode",
              "UserBehavior",
              "Environment",
              "AdChannel",
              "AdSocialNetwork"
            ],
            "type": "string",
            "nullable": true
          },
          "role": {
            "enum": [
              "Dimension",
              "Property",
              "Interval",
              "Metric"
            ],
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "enum": [
              "Boolean",
              "Number",
              "Money",
              "String",
              "Date",
              "DateTime",
              "Interval",
              "Duration"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Description of a column from an async report request"
      },
      "ExportMetaData": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportColumn"
            },
            "nullable": true
          },
          "rows": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata for an async report request: descriptions of the columns and number of rows returned",
        "nullable": true
      },
      "ExportResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExportResultData"
          }
        },
        "additionalProperties": false,
        "description": "Result for an async report request"
      },
      "ExportResultData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { }
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/ExportMetaData"
          }
        },
        "additionalProperties": false,
        "description": "Result data for an async report request",
        "nullable": true
      },
      "FailResponse": {
        "required": [
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterError"
            },
            "description": "List of errors"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterWarning"
            },
            "description": "List of warnings"
          }
        },
        "description": "Error server response."
      },
      "GenerateAudiencePerformanceReport": {
        "required": [
          "advertiserId",
          "dimension",
          "endDate",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSets ids. If empty, all the adSets will be fetched.",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "The advertiser id"
          },
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of Audiences ids. If empty, all the Audiences will be fetched.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals).",
            "nullable": true
          },
          "dimension": {
            "enum": [
              "Top30BrandsByDisplays",
              "Top30BrandsByClicks",
              "Top30BrandsBySales",
              "Top30InterestsByDisplays",
              "Top30InterestsByClicks",
              "Top30InterestsBySales"
            ],
            "type": "string",
            "description": "The dimension for the report."
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "Clicks",
                "Displays",
                "Visits",
                "Sales",
                "Revenue",
                "CostPerVisit",
                "ExposedUsers"
              ],
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "segmentsIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of Segments ids. If empty, all the segments will be fetched.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request attributes for async audience performance report"
      },
      "GenerateAudiencePerformanceReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateAudiencePerformanceReportResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateAudiencePerformanceReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateAudiencePerformanceReport"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GenerateCategoriesReportRequestAttributes": {
        "required": [
          "advertiserIds",
          "endDate",
          "format",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adsetId": {
            "type": "string",
            "description": "Report only on the specified AdSet id.",
            "nullable": true
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of Advertiser ids."
          },
          "campaignId": {
            "type": "string",
            "description": "Report only on the specified Campaign id.",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "Report only on the specified category.",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Report only on the specified domain.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "shouldDisplayDomainDimension": {
            "type": "boolean",
            "description": "Specify if the domain dimension is displayed in the report.",
            "default": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Categories report"
      },
      "GenerateCategoriesReportRequestAttributesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributesResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateCategoriesReportRequestAttributesResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributes"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GenerateCreativesReportRequestAttributes": {
        "required": [
          "advertiserIds",
          "dimensions",
          "endDate",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adFormats": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adFormats.",
            "nullable": true
          },
          "adIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of ad ids.",
            "nullable": true
          },
          "adNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of ad names.",
            "nullable": true
          },
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSet ids (campaign ids).",
            "nullable": true
          },
          "adSetStatus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSet status (ex: 'Active','NotRunning').",
            "nullable": true
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of client ids."
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of campaign ids (marketing campaign ids).",
            "nullable": true
          },
          "couponIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of coupon ids.",
            "nullable": true
          },
          "couponNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of coupon names.",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "AdFormat",
                "Coupon",
                "CouponId",
                "DisplaySize",
                "SizeCategory",
                "Ad",
                "AdId",
                "Day",
                "Hour"
              ],
              "type": "string"
            },
            "description": "The list of dimensions to report."
          },
          "displaySizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of displaySizes.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "Clicks",
                "Ctr",
                "Displays"
              ],
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Creatives report"
      },
      "GenerateCreativesReportRequestAttributesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributesResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateCreativesReportRequestAttributesResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributes"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GenerateRealtimeStatisticsReportRequestAttributes": {
        "required": [
          "advertiserIds"
        ],
        "type": "object",
        "properties": {
          "adsetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of adset ids to filter.",
            "nullable": true
          },
          "advertiserIds": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of advertiser ids to report on."
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of campaign ids to filter.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals).",
            "default": "EUR",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "Advertiser",
                "AdvertiserId",
                "Campaign",
                "CampaignId",
                "Adset",
                "AdsetId",
                "Year",
                "Month",
                "Week",
                "Day",
                "Hour"
              ],
              "type": "string"
            },
            "description": "List of dimensions for the report.",
            "default": [
              "AdvertiserId",
              "Advertiser",
              "CampaignId",
              "Campaign",
              "AdsetId",
              "Adset",
              "Day",
              "Hour"
            ],
            "nullable": true
          },
          "lookbackWindow": {
            "maximum": 24,
            "minimum": 1,
            "type": "integer",
            "description": "The number of hours to consider in the past.",
            "format": "int32",
            "default": 12
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "Clicks",
                "Cost",
                "Displays"
              ],
              "type": "string"
            },
            "description": "List of metrics for the report.",
            "default": [
              "Displays",
              "Clicks",
              "Cost"
            ],
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report.",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Realtime report"
      },
      "GenerateRealtimeStatisticsReportRequestAttributesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributesResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateRealtimeStatisticsReportRequestAttributesResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateRealtimeStatisticsReportRequestAttributes"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GenerateStatisticsReport": {
        "required": [
          "dimensions",
          "endDate",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSets ids. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSets names. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetStatus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSets status. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "advertiserIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of advertiser ids",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals).",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "AdvertiserId",
                "Advertiser",
                "CampaignId",
                "Campaign",
                "AdSetId",
                "AdSet",
                "ChannelId",
                "Channel",
                "CategoryId",
                "Category",
                "Device",
                "Os",
                "AdId",
                "Ad",
                "CouponId",
                "Coupon",
                "Year",
                "Month",
                "Week",
                "Day",
                "Hour",
                "MarketingCampaignGoal",
                "MarketingObjective",
                "MarketingObjectiveId",
                "VideoPlayerSize",
                "VideoPlacement",
                "VideoPlaybackMethod",
                "SSP",
                "VideoDurationInSeconds",
                "MediaType",
                "AdFormat",
                "DisplaySize",
                "VideoPlayerRatio",
                "Country",
                "Region",
                "PostalCode",
                "UserBehavior",
                "Environment",
                "AdChannel",
                "SocialPlatform"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "Clicks",
                "Displays",
                "AdvertiserCost",
                "SalesPc30dClientAttribution",
                "SalesAllPc30dClientAttribution",
                "SalesClientAttribution",
                "SalesAllClientAttribution",
                "SalesPc30d",
                "SalesAllPc30d",
                "SalesPc1d",
                "SalesAllPc1d",
                "SalesPc7d",
                "SalesAllPc7d",
                "SalesPc7dPv24",
                "SalesAllPc7dPv24",
                "SalesPc7dPv24h",
                "SalesAllPc7dPv24h",
                "SalesPv24h",
                "SalesAllPv24h",
                "SalesPc30Pv24",
                "SalesAllPc30Pv24",
                "SalesPc30dPv24h",
                "SalesAllPc30dPv24h",
                "SalesPiPc",
                "SalesPiPv",
                "SalesPiPcPv",
                "PostInstallSales",
                "SalesOfflinePc",
                "SalesOfflinePv",
                "SalesOfflinePc30d",
                "SalesOfflinePv24h",
                "RevenueGeneratedPc30dClientAttribution",
                "RevenueGeneratedAllPc30dClientAttribution",
                "RevenueGeneratedClientAttribution",
                "RevenueGeneratedAllClientAttribution",
                "RevenueGeneratedPc30d",
                "RevenueGeneratedAllPc30d",
                "RevenueGeneratedPc1d",
                "RevenueGeneratedAllPc1d",
                "RevenueGeneratedPc7d",
                "RevenueGeneratedAllPc7d",
                "RevenueGeneratedPv24h",
                "RevenueGeneratedAllPv24h",
                "RevenueGeneratedPc30Pv24",
                "RevenueGeneratedAllPc30Pv24",
                "RevenueGeneratedPc30dPv24h",
                "RevenueGeneratedAllPc30dPv24h",
                "RevenueGeneratedPc7dPv24h",
                "RevenueGeneratedAllPc7dPv24h",
                "RevenueGeneratedPc7dPv24",
                "RevenueGeneratedAllPc7dPv24",
                "RevenueGeneratedOfflinePc",
                "RevenueGeneratedOfflinePv",
                "RevenueGeneratedOfflinePc30d",
                "RevenueGeneratedOfflinePv24h",
                "ConversionRatePc30dClientAttribution",
                "ConversionRateAllPc30dClientAttribution",
                "ConversionRateClientAttribution",
                "ConversionRateAllClientAttribution",
                "ConversionRatePc30d",
                "ConversionRateAllPc30d",
                "ConversionRatePc1d",
                "ConversionRateAllPc1d",
                "ConversionRatePc7d",
                "ConversionRateAllPc7d",
                "ConversionRatePv24h",
                "ConversionRateAllPv24h",
                "ConversionRatePc30Pv24",
                "ConversionRateAllPc30Pv24",
                "ConversionRatePc30dPv24h",
                "ConversionRateAllPc30dPv24h",
                "ConversionRatePc7dPv24",
                "ConversionRateAllPc7dPv24",
                "ConversionRatePc7dPv24h",
                "ConversionRateAllPc7dPv24h",
                "ConversionRatePiPcPv",
                "PostInstallConversionRate",
                "ECosPc30dClientAttribution",
                "ECosAllPc30dClientAttribution",
                "ECosClientAttribution",
                "ECosAllClientAttribution",
                "ECosPc30d",
                "ECosAllPc30d",
                "ECosPc1d",
                "ECosAllPc1d",
                "ECosPc7d",
                "ECosAllPc7d",
                "ECosPv24h",
                "ECosAllPv24h",
                "ECosPc30Pv24",
                "ECosAllPc30Pv24",
                "ECosPc30dPv24h",
                "ECosAllPc30dPv24h",
                "ECosPc7dPv24h",
                "ECosAllPc7dPv24h",
                "ECosPc7dPv24",
                "ECosAllPc7dPv24",
                "CostPerOrderPc30dClientAttribution",
                "CostPerOrderAllPc30dClientAttribution",
                "CostPerOrderClientAttribution",
                "CostPerOrderAllClientAttribution",
                "CostPerOrderPc30d",
                "CostPerOrderAllPc30d",
                "CostPerOrderPc1d",
                "CostPerOrderAllPc1d",
                "CostPerOrderPc7d",
                "CostPerOrderAllPc7d",
                "CostPerOrderPv24h",
                "CostPerOrderAllPv24h",
                "CostPerOrderPc30Pv24",
                "CostPerOrderAllPc30Pv24",
                "CostPerOrderPc30dPv24h",
                "CostPerOrderAllPc30dPv24h",
                "CostPerOrderPc7dPv24h",
                "CostPerOrderAllPc7dPv24h",
                "CostPerOrderPc7dPv24",
                "CostPerOrderAllPc7dPv24",
                "ExposedUsers",
                "Audience",
                "Reach",
                "AverageCartPc30dClientAttribution",
                "AverageCartAllPc30dClientAttribution",
                "AverageCartClientAttribution",
                "AverageCartAllClientAttribution",
                "AverageCartPc30d",
                "AverageCartAllPc30d",
                "AverageCartPv24h",
                "AverageCartAllPv24h",
                "AverageCartPc1d",
                "AverageCartAllPc1d",
                "AverageCartPc7d",
                "AverageCartAllPc7d",
                "AverageCartPc30Pv24",
                "AverageCartAllPc30Pv24",
                "AverageCartPc30dPv24h",
                "AverageCartAllPc30dPv24h",
                "AverageCartPc7dPv24h",
                "AverageCartAllPc7dPv24h",
                "AverageCartPc7dPv24",
                "AverageCartAllPc7dPv24",
                "ClickThroughRate",
                "ECpc",
                "Cpc",
                "ECpm",
                "ReturnOnAdvertisingSpendingClientAttribution",
                "ReturnOnAdvertisingSpendingAllClientAttribution",
                "AdvertiserValue",
                "AdvertiserAllValue",
                "CostOfAdvertiserValue",
                "CostOfAdvertiserValueAll",
                "AppInstallsPcPv",
                "AppInstalls",
                "QualifiedVisits",
                "Visits",
                "OrderValuePi",
                "PostInstallOrderValue",
                "BounceRate",
                "CostPerInstallPcPv",
                "CostPerInstall",
                "CostPerVisit",
                "InstallRatePcPv",
                "InstallRate",
                "OmniChannelRoasPc30d",
                "OmnichannelRoasAllPc30d",
                "OmniChannelRevenuePc30d",
                "OmnichannelRevenueAllPc30d",
                "OmniChannelSalesPc30d",
                "OmnichannelSalesAllPc30d",
                "OmnichannelRoasAllPv24h",
                "OmnichannelRoasPv24h",
                "OmnichannelRevenueAllPv24h",
                "OmnichannelRevenuePv24h",
                "OmnichannelSalesAllPv24h",
                "OmnichannelSalesPv24h",
                "OmnichannelRoasClientAttribution",
                "OmnichannelRevenueClientAttribution",
                "OmnichannelSalesClientAttribution",
                "RoasAllPc30dClientAttribution",
                "RoasPc30dClientAttribution",
                "RoasAllClientAttribution",
                "RoasClientAttribution",
                "RoasAllPc30d",
                "RoasPc30d",
                "RoasAllPc7d",
                "RoasPc7d",
                "RoasAllPc1d",
                "RoasPc1d",
                "RoasAllPv24h",
                "RoasPv24h",
                "RoasPc30Pv24",
                "RoasAllPc30Pv24",
                "RoasPc30dPv24h",
                "RoasAllPc30dPv24h",
                "RoasPc7dPv24",
                "RoasAllPc7dPv24",
                "RoasPc7dPv24h",
                "RoasAllPc7dPv24h",
                "CostOfSalePi",
                "CostPerOrderPi",
                "PostInstallCostOfSale",
                "PostInstallCostPerOrder",
                "ReturnOnAdvertiserSpendingPi",
                "PostInstallRoas",
                "ReturnOnAdvertiserSpendingOfflinePc",
                "ReturnOnAdvertiserSpendingOfflinePv",
                "RoasOfflinePc30d",
                "RoasOfflinePv24h",
                "PotentialDisplays",
                "OverallCompetitionWin",
                "ViewableDisplays",
                "NonViewableDisplays",
                "UntrackableDisplays",
                "Frequency",
                "InvalidClicks",
                "InvalidDisplays",
                "ResultType",
                "CostPerQualifiedVisit",
                "CostPerVisitPV1D",
                "VisitsPV1D",
                "AssistsPc30dClientAttribution",
                "AssistsAllPc30dClientAttribution",
                "AssistsClientAttribution",
                "AssistsAllClientAttribution",
                "AssistsPc30d",
                "AssistsAllPc30d",
                "AssistsPc1d",
                "AssistsAllPc1d",
                "AssistsPc7d",
                "AssistsAllPc7d",
                "AssistsPc7dPv24",
                "AssistsAllPc7dPv24",
                "AssistsPc7dPv24h",
                "AssistsAllPc7dPv24h",
                "AssistsPv24h",
                "AssistsAllPv24h",
                "AssistsPc30Pv24",
                "AssistsAllPc30Pv24",
                "AssistsPc30dPv24h",
                "AssistsAllPc30dPv24h",
                "AssistsPiPc",
                "AssistsPiPv",
                "AssistsPiPcPv",
                "AssistsSalesRatioPc30dClientAttribution",
                "AssistsSalesRatioAllPc30dClientAttribution",
                "AssistsSalesRatioClientAttribution",
                "AssistsSalesRatioAllClientAttribution",
                "AssistsSalesRatioPc30d",
                "AssistsSalesRatioAllPc30d",
                "AssistsSalesRatioPc1d",
                "AssistsSalesRatioAllPc1d",
                "AssistsSalesRatioPc7d",
                "AssistsSalesRatioAllPc7d",
                "AssistsSalesRatioPc7dPv24",
                "AssistsSalesRatioAllPc7dPv24",
                "AssistsSalesRatioPc7dPv24h",
                "AssistsSalesRatioAllPc7dPv24h",
                "AssistsSalesRatioPv24h",
                "AssistsSalesRatioAllPv24h",
                "AssistsSalesRatioPc30Pv24",
                "AssistsSalesRatioAllPc30Pv24",
                "AssistsSalesRatioPc30dPv24h",
                "AssistsSalesRatioAllPc30dPv24h",
                "AssistsSalesRatioPiPc",
                "AssistsSalesRatioPiPv",
                "AssistsSalesRatioPiPcPv"
              ],
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request attributes for async statistics report"
      },
      "GenerateStatisticsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateStatisticsReportResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateStatisticsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateStatisticsReport"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GenerateTopProductsReportRequestAttributes": {
        "required": [
          "advertiserId",
          "endDate",
          "rankProductsBy",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSet ids.",
            "nullable": true
          },
          "adSetStatus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of adSet status (ex: 'Active','NotRunning').",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "The client id."
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of brands names.",
            "nullable": true
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of campaign ids.",
            "nullable": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of category ids.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals).",
            "default": "EUR",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "Campaign",
                "CampaignId",
                "AdSet",
                "AdSetId",
                "Product",
                "ProductId",
                "Category",
                "CategoryId",
                "Advertiser",
                "AdvertiserId",
                "ProductUrl",
                "Brand"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "limit": {
            "type": "integer",
            "description": "The maximum number of top products returned.",
            "format": "int32"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "Clicks",
                "Ctr",
                "Visits",
                "Sales",
                "Cost",
                "Revenue",
                "Displays"
              ],
              "type": "string"
            },
            "description": "The list of metrics to report.",
            "nullable": true
          },
          "rankProductsBy": {
            "enum": [
              "Clicks",
              "Displays",
              "Sales"
            ],
            "type": "string",
            "description": "The metric used to filter the top products."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for TopProducts report"
      },
      "GenerateTopProductsReportRequestAttributesRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributesResource"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "GenerateTopProductsReportRequestAttributesResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributes"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "GetPortfolioResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityOfPortfolioMessage"
            },
            "description": "The response�s primary data",
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiError"
            },
            "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty",
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarning"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future.",
            "nullable": true
          }
        },
        "description": "Portfolio fetch Response"
      },
      "HtmlTagAttributes": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "An array containing the html tags",
            "nullable": true
          }
        },
        "description": "The attributes specific to HtmlTag creatives",
        "nullable": true
      },
      "HtmlTagWriteAttributes": {
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "description": "An array containing the html tags"
          }
        },
        "description": "The attributes specific to create or update a HtmlTag creative"
      },
      "ImageAttributes": {
        "type": "object",
        "properties": {
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "nullable": true
          },
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "nullable": true
          }
        },
        "description": "The attributes specific to Image creatives",
        "nullable": true
      },
      "ImageSet": {
        "required": [
          "images"
        ],
        "type": "object",
        "properties": {
          "headlineText": {
            "type": "string",
            "description": "The headline of the image set",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageShape"
            },
            "description": "The images' urls with their shapes."
          }
        },
        "description": "Entity consists of multiple images in different ratios and a headline text."
      },
      "ImageSetBase64": {
        "required": [
          "imageBase64Strings"
        ],
        "type": "object",
        "properties": {
          "headlineText": {
            "type": "string",
            "description": "The headline of the image set",
            "nullable": true
          },
          "imageBase64Strings": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Multiple images potentially in different shapes, each image is a base-64 encoded string."
          }
        },
        "description": "Entity consists of multiple images in different ratios as a base-64 encoded and a headline text."
      },
      "ImageShape": {
        "required": [
          "shape",
          "url"
        ],
        "type": "object",
        "properties": {
          "shape": {
            "enum": [
              "Horizontal",
              "Vertical",
              "Square"
            ],
            "type": "string",
            "description": "Ratio of the image"
          },
          "url": {
            "type": "string",
            "description": "URL of the image uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "format": "uri"
          }
        },
        "description": "Entity containing the shape and url of the image"
      },
      "ImageSlide": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height of the Coupon slide",
            "format": "int32",
            "nullable": true
          },
          "slideUrls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images of the same size uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "description": "Width of the Coupon slide",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Slide containing the image URLs"
      },
      "ImageWriteAttributes": {
        "required": [
          "base64Strings",
          "landingPageUrl"
        ],
        "type": "object",
        "properties": {
          "base64Strings": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of images as a base-64 encoded string"
          },
          "landingPageUrl": {
            "type": "string",
            "description": "Web redirection of the landing page url",
            "format": "uri"
          }
        },
        "description": "The attributes specific to create or update an Image creative"
      },
      "InMarketAudienceSegmentBrandEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the in-market segment brand",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the in-market segment brand",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "In-market segment brand entity",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "InMarketAudienceSegmentBrand",
          "version": "v1"
        }
      },
      "InMarketAudienceSegmentBrandEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "InMarketAudienceSegmentBrandEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InMarketAudienceSegmentBrandEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "InMarketAudienceSegmentInterestEntityV1": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "string",
            "description": "Id of the parent in-market segment interest",
            "nullable": true
          }
        },
        "description": "In-market segment interest entity",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "InMarketAudienceSegmentInterest",
          "version": "v1"
        }
      },
      "InMarketAudienceSegmentInterestEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "InMarketAudienceSegmentInterestEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InMarketAudienceSegmentInterestEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "InMarketCreateV1": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items"
          },
          "country": {
            "type": "string",
            "description": "Reach people of a specific country"
          },
          "gender": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "Reach people who’ve shown interest in products made for a specific gender"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests"
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range"
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "InMarketSizeEstimationV1": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            }
          },
          "country": {
            "type": "string"
          },
          "gender": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            }
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "InMarketUpdateV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items"
          },
          "country": {
            "type": "string",
            "description": "Reach people of a specific country"
          },
          "gender": {
            "$ref": "#/components/schemas/NillableGenderV1"
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests"
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range"
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics."
      },
      "InMarketV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in",
            "nullable": true
          },
          "buyingPower": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Low",
                "Medium",
                "High",
                "VeryHigh"
              ],
              "type": "string"
            },
            "description": "Reach people who frequently purchase high price range items to lower price range items",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Reach people of a specific country",
            "nullable": true
          },
          "gender": {
            "enum": [
              "Unknown",
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "Reach people who’ve shown interest in products made for a specific gender",
            "nullable": true
          },
          "interestIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Reach new people based on their interests",
            "nullable": true
          },
          "priceRange": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            "description": "Reach people who’ve shown interest in products within a specific price range",
            "nullable": true
          }
        },
        "description": "Settings to target users based on high shopping intents and demographics.",
        "nullable": true
      },
      "Installment": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Price"
          },
          "months": {
            "type": "integer",
            "description": "The number of installments the buyer has to pay.",
            "format": "int64"
          }
        },
        "description": "Defines the installment of a product."
      },
      "JsonReportRows": {
        "type": "object",
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the json report rows",
        "nullable": true
      },
      "JsonReportRowsListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonReportRowsResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects."
      },
      "JsonReportRowsResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/JsonReportRows"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ListAvailableIndustriesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityV2OfObject"
            },
            "description": "The response�s primary data",
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty",
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarningV2"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future.",
            "nullable": true
          }
        },
        "description": "List Available Industries Response"
      },
      "LocationCreateV1": {
        "required": [
          "pointsOfInterest",
          "radiusInKm"
        ],
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates"
          },
          "radiusInKm": {
            "type": "integer",
            "description": "The expected maximum distance in kilometers between a user and a point of interest",
            "format": "int32"
          }
        },
        "description": "Settings to target users based on their location."
      },
      "LocationSizeEstimationV1": {
        "required": [
          "pointsOfInterest",
          "radiusInKm"
        ],
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            }
          },
          "radiusInKm": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Settings to define your audience based on their location."
      },
      "LocationUpdateV1": {
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates"
          },
          "radiusInKm": {
            "type": "integer",
            "description": "Radius in kilometers",
            "format": "int32"
          },
          "registryType": {
            "enum": [
              "PointOfInterest"
            ],
            "type": "string",
            "description": "The kind of Location audience"
          }
        },
        "description": "Settings to target users based on their location."
      },
      "LocationV1": {
        "type": "object",
        "properties": {
          "pointsOfInterest": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointOfInterestV1"
            },
            "description": "Reach users which have been historically located in the given coordinates",
            "nullable": true
          },
          "radiusInKm": {
            "type": "integer",
            "description": "The expected maximum distance in kilometers between a user and a point of interest",
            "format": "int32",
            "nullable": true
          },
          "registryType": {
            "enum": [
              "Unknown",
              "PointOfInterest"
            ],
            "type": "string",
            "description": "The kind of Location audience",
            "nullable": true
          }
        },
        "description": "Settings to target users based on their location.",
        "nullable": true
      },
      "LookalikeCreateV1": {
        "required": [
          "seedSegmentId"
        ],
        "type": "object",
        "properties": {
          "seedSegmentId": {
            "type": "string",
            "description": "Segment from which the Lookalike segment will be generated"
          },
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64"
          }
        },
        "description": "Settings to target users close to a given seed segment."
      },
      "LookalikeUpdateV1": {
        "type": "object",
        "properties": {
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64"
          }
        },
        "description": "Settings to target users that behave like a given seed segment"
      },
      "LookalikeV1": {
        "type": "object",
        "properties": {
          "seedSegmentId": {
            "type": "string",
            "description": "Segment from which the Lookalike segment will be generated",
            "nullable": true
          },
          "targetSize": {
            "type": "integer",
            "description": "Desired size of the generated Lookalike segment",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Settings to target users that behave like a given seed segment",
        "nullable": true
      },
      "LoyaltyPoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
          },
          "pointsValue": {
            "type": "integer",
            "description": "The retailer's loyalty points in absolute value.",
            "format": "int64"
          },
          "ratio": {
            "type": "number",
            "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
            "format": "double"
          }
        },
        "description": "Defines how a client earns loyalty points after buying this product."
      },
      "MarketingSolutionsReportStatus": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Pending",
              "Done",
              "Failure",
              "Expired"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Object containing the status of report request and an associated message.",
        "nullable": true
      },
      "MarketingSolutionsReportStatusResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/MarketingSolutionsReportStatus"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true
      },
      "MarketingSolutionsReportStatusResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MarketingSolutionsReportStatusResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ModifyAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistOperation"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Parameters to modify an audience"
      },
      "NillableAdSetTargetingRuleV24Q3": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdSetTargetingRuleV24Q3"
              }
            ],
            "nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided.",
        "nullable": true
      },
      "NillableDateTime": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided.",
        "nullable": true
      },
      "NillableDecimal": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided.",
        "nullable": true
      },
      "NillableGenderV1": {
        "type": "object",
        "properties": {
          "value": {
            "enum": [
              "Male",
              "Female"
            ],
            "type": "string",
            "description": "The value. If missing or null the value is set to \"null\"",
            "nullable": true
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value",
        "nullable": true
      },
      "NillableInt32": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "The value. If missing or null the value is set to \"null\"",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value",
        "nullable": true
      },
      "NillableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The string's value. If missing or null the string's value is set to \"null\"",
            "nullable": true
          }
        },
        "description": "Placeholder object for string value  for which \"null\" is a valid business value",
        "nullable": true
      },
      "OnSiteRecoRequest": {
        "required": [
          "nbRequestedProducts",
          "partnerId"
        ],
        "type": "object",
        "properties": {
          "adId": {
            "type": "integer",
            "description": "Id of the Ad. This field is optional, it allows to setup Reco controls at Ad level.",
            "format": "int32"
          },
          "adSetId": {
            "type": "integer",
            "description": "Id of the AdSet. This field is optional and is resolved automatically for adsets previously configured.",
            "format": "int32"
          },
          "identityType": {
            "enum": [
              "CtoBundle",
              "Idfa",
              "Gaid"
            ],
            "type": "string",
            "description": "Type of the user identifier (CtoBundle, Idfa, Gaid...)\r\nOptional if its type is CtoBundle"
          },
          "nbRequestedProducts": {
            "type": "integer",
            "description": "Amount of products to recommend.",
            "format": "int32"
          },
          "partnerId": {
            "type": "integer",
            "description": "Id of the partner.",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "description": "Used to retrieve user events from Criteo trackers."
          }
        },
        "description": "Recommendation request parameters."
      },
      "OnSiteRecoResponse": {
        "type": "object",
        "properties": {
          "extraInfos": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Additional information in case of warnings, errors...",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendedProduct"
            },
            "description": "Recommended products",
            "nullable": true
          }
        },
        "description": "Recommendation response."
      },
      "Outcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "The outcome of an API call."
      },
      "PatchAdSetAttributionConfigurationV24Q3": {
        "type": "object",
        "properties": {
          "attributionMethod": {
            "enum": [
              "unknown",
              "criteoAttribution",
              "googleAnalyticsLastClick",
              "googleAnalyticsDataDriven",
              "lastClick",
              "postClick"
            ],
            "type": "string",
            "description": "The attribution method.",
            "nullable": true
          },
          "lookbackWindow": {
            "enum": [
              "unknown",
              "30M",
              "24H",
              "7D",
              "30D"
            ],
            "type": "string",
            "description": "The lookback window. Optional, should be specified only for attribution methods PostClick and LastClick.",
            "nullable": true
          }
        },
        "description": "Patch model for an ad set's attribution configuration."
      },
      "PatchAdSetBiddingV24Q3": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set bidding patch model"
      },
      "PatchAdSetBudgetV24Q3": {
        "type": "object",
        "properties": {
          "budgetAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime",
              "weekly"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "ad set budget patch model"
      },
      "PatchAdSetCategoryBid": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          }
        },
        "description": "Category Bid to update for a given combination of Ad Set and Category."
      },
      "PatchAdSetCategoryBidListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResource"
            },
            "nullable": true
          }
        },
        "description": "Data model for a list of input resources"
      },
      "PatchAdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetCategoryBidResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResultResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetCategoryBidResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "displayMultiplier": {
            "type": "number",
            "description": "Any positive decimal value. To remove the impact of the Display Multiplier set it to 1. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double"
          }
        },
        "description": "Display Multiplier to update for a given combination of Ad Set and Category."
      },
      "PatchAdSetDisplayMultiplierListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResource"
            },
            "nullable": true
          }
        },
        "description": "Data model for a list of input resources"
      },
      "PatchAdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplierResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetDisplayMultiplierResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetSchedulingV24Q3": {
        "type": "object",
        "properties": {
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          }
        },
        "description": "ad set schedule patch model"
      },
      "PatchAdSetV24Q3": {
        "type": "object",
        "properties": {
          "attributionConfiguration": {
            "$ref": "#/components/schemas/PatchAdSetAttributionConfigurationV24Q3"
          },
          "bidding": {
            "$ref": "#/components/schemas/PatchAdSetBiddingV24Q3"
          },
          "budget": {
            "$ref": "#/components/schemas/PatchAdSetBudgetV24Q3"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scheduling": {
            "$ref": "#/components/schemas/PatchAdSetSchedulingV24Q3"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargetingV24Q3"
          }
        },
        "description": "ad set patch model"
      },
      "PatchCampaign": {
        "type": "object",
        "properties": {
          "budgetAutomation": {
            "$ref": "#/components/schemas/PatchMarketingCampaignBudgetAutomation"
          },
          "spendLimit": {
            "$ref": "#/components/schemas/PatchCampaignSpendLimit"
          }
        },
        "description": "campaign patch model"
      },
      "PatchCampaignListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchCampaignWriteResource"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "PatchCampaignSpendLimit": {
        "type": "object",
        "properties": {
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "nullable": true
          },
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "campaign spend limit model"
      },
      "PatchCampaignWriteResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchCampaign"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "Campaign"
          }
        },
        "description": "write model data for resources"
      },
      "PatchMarketingCampaignBudgetAutomation": {
        "type": "object",
        "properties": {
          "budgetConfiguration": {
            "$ref": "#/components/schemas/BudgetAutomationConfiguration"
          },
          "enabled": {
            "type": "boolean",
            "description": "Budget automation for the marketing campaign enable"
          }
        },
        "description": "patch marketing campaign budget automation model"
      },
      "PatchResultCampaignListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchResultCampaignReadResource"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "PatchResultCampaignReadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Campaign"
          }
        },
        "description": "read model data for resources"
      },
      "PlacementsReportQueryMessage": {
        "required": [
          "advertiserIds",
          "currency",
          "dimensions",
          "endDate",
          "format",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adsetIds": {
            "type": "string",
            "description": "The comma-separated list of adSet ids.",
            "nullable": true
          },
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids."
          },
          "campaignIds": {
            "type": "string",
            "description": "The comma-separated list of campaign ids.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "AdvertiserId",
                "Placement",
                "Environment",
                "AdsetName",
                "AdvertiserName",
                "CampaignId",
                "CampaignName",
                "AdChannel",
                "SocialPlatform",
                "CategoryId",
                "CategoryName"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "disclosed": {
            "type": "boolean",
            "description": "Returns disclosed or undisclosed placements.",
            "default": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "environment": {
            "type": "string",
            "description": "Type of environment: Web, Android or iOS.",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "placement": {
            "type": "string",
            "description": "Filter the value of the placement",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Placements report"
      },
      "PlacementsReportQueryMessageListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlacementsReportQueryMessageResource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for several value objects."
      },
      "PlacementsReportQueryMessageResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PlacementsReportQueryMessage"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "PointOfInterestV1": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "ISO-6709 latitude (rounded at 5 decimals)",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "ISO-6709 longitude (rounded at 5 decimals)",
            "format": "double",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the point of interest",
            "nullable": true
          }
        },
        "description": "Named coordinate defined by its latitude and longitude.\r\nLatitude and Longitude are rounded at 5 decimals."
      },
      "PortfolioMessage": {
        "type": "object",
        "properties": {
          "advertiserName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Class with elementary info about advertiser",
        "nullable": true
      },
      "Price": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency of the price."
          },
          "value": {
            "type": "string",
            "description": "The price represented as a number. See JSON's number specification for more details."
          }
        },
        "description": "Defines a price."
      },
      "Product": {
        "required": [
          "channel",
          "id",
          "imageLink",
          "link",
          "title"
        ],
        "type": "object",
        "properties": {
          "additionalImageLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional URLs of images of the item."
          },
          "adsGrouping": {
            "type": "string",
            "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
          },
          "adsLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Similar to adsGrouping, but only works on CPC."
          },
          "adsRedirect": {
            "type": "string",
            "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads."
          },
          "adult": {
            "type": "boolean",
            "description": "Set to true if the item is targeted towards adults. RECOMMENDED."
          },
          "ageGroup": {
            "type": "string",
            "description": "Target age group of the item."
          },
          "availability": {
            "type": "string",
            "description": "Availability status of the item. RECOMMENDED."
          },
          "availabilityDate": {
            "type": "string",
            "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
          },
          "badge": {
            "type": "string",
            "description": "URL of a badge image to display on the product."
          },
          "brand": {
            "type": "string",
            "description": "Brand of the item. RECOMMENDED."
          },
          "channel": {
            "enum": [
              "online"
            ],
            "type": "string",
            "description": "The item's channel (online only)."
          },
          "color": {
            "type": "string",
            "description": "Color of the item."
          },
          "condition": {
            "type": "string",
            "description": "Condition or state of the item."
          },
          "contentLanguage": {
            "type": "string",
            "description": "The two-letter ISO 639-1 language code for the item."
          },
          "costOfGoodsSold": {
            "$ref": "#/components/schemas/Price"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttribute"
            },
            "description": "A list of custom (merchant-provided) attributes. This is useful for submitting attributes not explicitly exposed by the API. Declaring attributes explicitly exposed by the API using is forbidden"
          },
          "customLabel0": {
            "type": "string",
            "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
          },
          "customLabel1": {
            "type": "string",
            "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
          },
          "customLabel2": {
            "type": "string",
            "description": "Custom label 2 for custom grouping of items in a Shopping campaign."
          },
          "customLabel3": {
            "type": "string",
            "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
          },
          "customLabel4": {
            "type": "string",
            "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
          },
          "description": {
            "type": "string",
            "description": "Description of the item. RECOMMENDED. (5000 UTF8 characters max)."
          },
          "displayAdsId": {
            "type": "string",
            "description": "An identifier for an item for dynamic remarketing campaigns."
          },
          "displayAdsLink": {
            "type": "string",
            "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
          },
          "displayAdsSimilarIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser-specified recommendations."
          },
          "displayAdsTitle": {
            "type": "string",
            "description": "Title of an item for dynamic remarketing campaigns."
          },
          "displayAdsValue": {
            "type": "number",
            "description": "Offer margin for dynamic remarketing campaigns.",
            "format": "double"
          },
          "energyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "excludedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
          },
          "expirationDate": {
            "type": "string",
            "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format."
          },
          "externalSellerId": {
            "type": "string",
            "description": "The external id of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "externalSellerName": {
            "type": "string",
            "description": "The external name of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "gender": {
            "type": "string",
            "description": "Target gender of the item."
          },
          "googleProductCategory": {
            "type": "string",
            "description": "Google's category of the item (see Google product taxonomy). RECOMMENDED."
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number (GTIN) of the item. RECOMMENDED."
          },
          "id": {
            "type": "string",
            "description": "A unique identifier for the item. Aka Product ID. Don’t use casing to make IDs unique."
          },
          "identifierExists": {
            "type": "boolean",
            "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
          },
          "imageLink": {
            "type": "string",
            "description": "URL of an image of the item. Supported formats: PNG, JPEG, GIF. (2000 UTF8 characters max). "
          },
          "includedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations."
          },
          "installment": {
            "$ref": "#/components/schemas/Installment"
          },
          "isBundle": {
            "type": "boolean",
            "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Shared identifier for all variants of the same product. RECOMMENDED. Don’t use casing to make IDs unique. (50 characters max)"
          },
          "kind": {
            "type": "string",
            "description": "Identifies what kind of resource this is."
          },
          "link": {
            "type": "string",
            "description": "URL directly linking to your item's page on your website. (1000 UTF8 characters max)."
          },
          "loyaltyPoints": {
            "$ref": "#/components/schemas/LoyaltyPoints"
          },
          "material": {
            "type": "string",
            "description": "The material of which the item is made."
          },
          "maxEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "maxHandlingTime": {
            "type": "integer",
            "description": "Maximal product handling time (in business days).",
            "format": "int64"
          },
          "minEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "minHandlingTime": {
            "type": "integer",
            "description": "Minimal product handling time (in business days).",
            "format": "int64"
          },
          "mobileLink": {
            "type": "string",
            "description": "accounts.link to a mobile-optimized version of the landing page."
          },
          "mpn": {
            "type": "string",
            "description": "Manufacturer Part Number (MPN) of the item. RECOMMENDED."
          },
          "multipack": {
            "type": "integer",
            "description": "The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.",
            "format": "int64"
          },
          "numberOfReviews": {
            "type": "integer",
            "description": "The number of customer reviews for the product",
            "format": "int32"
          },
          "offerId": {
            "type": "string",
            "description": "Not used by Criteo."
          },
          "pattern": {
            "type": "string",
            "description": "The item's pattern (e.g. polka dots)."
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "productRating": {
            "type": "string",
            "description": "The product rating for the product"
          },
          "productTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category keys of the item (formatted as in productTypes)."
          },
          "productTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Categories of the item (formatted as in products data specification)."
          },
          "promotionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The unique ID of a promotion."
          },
          "salePrice": {
            "$ref": "#/components/schemas/Price"
          },
          "salePriceEffectiveDate": {
            "type": "string",
            "description": "Date range during which the item is on sale."
          },
          "sellerId": {
            "type": "string",
            "description": "(Deprecated Field) The external ID of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "sellOnGoogleQuantity": {
            "type": "integer",
            "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
            "format": "int64"
          },
          "shipping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductShipping"
            },
            "description": "Shipping rules."
          },
          "shippingHeight": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingLabel": {
            "type": "string",
            "description": "The shipping label of the product, used to group product in account-level shipping rules."
          },
          "shippingLength": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingWeight": {
            "$ref": "#/components/schemas/ProductShippingWeight"
          },
          "shippingWidth": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Size of the item. RECOMMENDED. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value."
          },
          "sizeSystem": {
            "type": "string",
            "description": "System in which the size is specified. Recommended for apparel items."
          },
          "sizeType": {
            "type": "string",
            "description": "The cut of the item. Recommended for apparel items."
          },
          "source": {
            "type": "string",
            "description": "The source of the offer, i.e., how the offer was created."
          },
          "targetCountry": {
            "type": "string",
            "description": "The CLDR territory code for the item."
          },
          "taxCategory": {
            "type": "string",
            "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTax"
            },
            "description": "Tax information."
          },
          "title": {
            "type": "string",
            "description": "Title of the item. (500 UTF8 characters max)."
          },
          "transitTimeLabel": {
            "type": "string",
            "description": "The transit time label of the product, used to group product in account-level transit time tables."
          },
          "unitPricingBaseMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingBaseMeasure"
          },
          "unitPricingMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingMeasure"
          }
        },
        "description": "Defines a product to be inserted or updated."
      },
      "ProductFilterConfig": {
        "required": [
          "adId",
          "productSetId"
        ],
        "type": "object",
        "properties": {
          "adId": {
            "type": "string"
          },
          "productSetId": {
            "type": "string"
          }
        },
        "description": "Entity to create a product filter configuration",
        "nullable": true
      },
      "ProductImporterError": {
        "required": [
          "code",
          "detail",
          "instance",
          "title",
          "traceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
          },
          "detail": {
            "type": "string",
            "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
          },
          "instance": {
            "type": "string",
            "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
          },
          "title": {
            "type": "string",
            "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "traceId": {
            "type": "string",
            "description": "The MACHINE-READABLE correlation ID provided by the gateway"
          },
          "type": {
            "type": "string",
            "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
          }
        },
        "description": "Error descriptor."
      },
      "ProductImporterWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "title",
          "traceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
          },
          "detail": {
            "type": "string",
            "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
          },
          "instance": {
            "type": "string",
            "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
          },
          "title": {
            "type": "string",
            "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "traceId": {
            "type": "string",
            "description": "The MACHINE-READABLE correlation ID provided by the gateway"
          },
          "type": {
            "type": "string",
            "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
          }
        },
        "description": "Warning descriptor."
      },
      "ProductsCustomBatchRequest": {
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsCustomBatchRequestEntry"
            },
            "description": "The request entries to be processed in the batch."
          }
        },
        "description": "Defines a batch of operations."
      },
      "ProductsCustomBatchRequestEntry": {
        "required": [
          "merchantId",
          "method"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "description": "An entry ID, unique within the batch request.",
            "format": "int64"
          },
          "feedId": {
            "type": "string",
            "description": "Not used by Criteo."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Deprecated (providing this information is no more needed, this field will be removed in next release). The itemGroupId of the product to delete. To be defined when the method is delete and the product is a variant."
          },
          "merchantId": {
            "type": "integer",
            "description": "The ID of the managing account. Criteo: the partnerId.",
            "format": "int32"
          },
          "method": {
            "enum": [
              "delete",
              "insert"
            ],
            "type": "string",
            "description": "The method of the batch entry."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "type": "string",
            "description": "The Product ID to delete. Only defined if the method is delete."
          }
        },
        "description": "A product event for a batch request."
      },
      "ProductSet": {
        "required": [
          "clientType",
          "creationDate",
          "datasetId",
          "keepVariantProducts",
          "minimumNumberOfProducts",
          "name",
          "numberOfProducts",
          "rules",
          "status"
        ],
        "type": "object",
        "properties": {
          "clientType": {
            "enum": [
              "Unknown",
              "CGrowth",
              "CMax"
            ],
            "type": "string",
            "description": "The client type of the product set"
          },
          "creationDate": {
            "type": "string",
            "description": "The creation date of the product set (UTC time in ISO8601 format). Example: \"02/25/2022 14:51:26\".\r\nCan be null if the value isn't available."
          },
          "datasetId": {
            "type": "string",
            "description": "The dataset to which the product set belong"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "keepVariantProducts": {
            "type": "boolean"
          },
          "minimumNumberOfProducts": {
            "type": "integer",
            "description": "Minimum amount of products that should match the product set to consider it valid.\r\nGreater or equal than one.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the product set"
          },
          "numberOfProducts": {
            "type": "integer",
            "description": "The number of product matching the product set.\r\nCan be null for newly created product set.",
            "format": "int32",
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSetRule"
            },
            "description": "The rules identifying the product belonging to the set"
          },
          "status": {
            "enum": [
              "Unknown",
              "Draft",
              "Pending",
              "Valid",
              "Invalid",
              "Deleted"
            ],
            "type": "string",
            "description": "The status of the product set"
          }
        },
        "description": "Encapsulate a group of product",
        "nullable": true
      },
      "ProductSetRule": {
        "type": "object",
        "properties": {
          "field": {
            "enum": [
              "OBSOLETE_Extradata",
              "Category1",
              "Category2",
              "Category3",
              "ExternalItemId",
              "SalePrice",
              "Brand",
              "CustomLabel0",
              "CustomLabel1",
              "CustomLabel2",
              "CustomLabel3",
              "CustomLabel4"
            ],
            "type": "string",
            "description": "The field on which we want to apply the rule",
            "nullable": true
          },
          "operator": {
            "enum": [
              "IsIn",
              "IsNotIn",
              "Between",
              "NotBetween",
              "LessThan",
              "GreaterThan"
            ],
            "type": "string",
            "description": "The operator used with the field",
            "nullable": true
          },
          "values": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The values on which we want to apply the rule",
            "nullable": true
          }
        },
        "description": "Encapsulate a product rule"
      },
      "ProductShipping": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The CLDR territory code of the country to which an item will ship."
          },
          "locationGroupName": {
            "type": "string",
            "description": "The location where the shipping is applicable, represented by a location group name."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which a shipping rate applies."
          },
          "service": {
            "type": "string",
            "description": "A free-form description of the service class or delivery speed."
          }
        },
        "description": "Defines the shipping information of a product."
      },
      "ProductShippingDimension": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of value."
          },
          "value": {
            "type": "number",
            "description": "The dimension of the product used to calculate the shipping cost of the item.",
            "format": "double"
          }
        },
        "description": "Defines the shipping dimension of a product."
      },
      "ProductShippingWeight": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of value."
          },
          "value": {
            "type": "number",
            "description": "The weight of the product used to calculate the shipping cost of the item.",
            "format": "double"
          }
        },
        "description": "Defines the shipping weight of a product."
      },
      "ProductTax": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country within which the item is taxed, specified as a CLDR territory code."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
          },
          "rate": {
            "type": "number",
            "description": "The percentage of tax rate that applies to the item price.",
            "format": "double"
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which the tax rate applies."
          },
          "taxShip": {
            "type": "boolean",
            "description": "Set to true if tax is charged on shipping."
          }
        },
        "description": "Defines the tax information of a product."
      },
      "ProductUnitPricingBaseMeasure": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of the denominator."
          },
          "value": {
            "type": "integer",
            "description": "The denominator of the unit price.",
            "format": "int64"
          }
        },
        "description": "Defines a measurement."
      },
      "ProductUnitPricingMeasure": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of measure."
          },
          "value": {
            "type": "number",
            "description": "The measurement of an item.",
            "format": "double"
          }
        },
        "description": "Defines a measurement."
      },
      "ProspectingCreateV1": {
        "required": [
          "usersType"
        ],
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website after this number of days",
            "format": "int32"
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website before this number of days",
            "format": "int32"
          },
          "usersType": {
            "enum": [
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target"
          }
        },
        "description": "Settings to target prospecting users to website visitors."
      },
      "ProspectingUpdateV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "$ref": "#/components/schemas/NillableInt32"
          },
          "daysSinceLastVisitMin": {
            "$ref": "#/components/schemas/NillableInt32"
          },
          "usersType": {
            "enum": [
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target"
          }
        },
        "description": "Settings to target prospecting users to website visitors."
      },
      "ProspectingV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website after this number of days",
            "format": "int32",
            "nullable": true
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "When non buyers are included, include users who visited your website before this number of days",
            "format": "int32",
            "nullable": true
          },
          "usersType": {
            "enum": [
              "Unknown",
              "Prospects",
              "ProspectsOrNonBuyers"
            ],
            "type": "string",
            "description": "Type of users to target",
            "nullable": true
          }
        },
        "description": "Settings to target prospecting users to website visitors.",
        "nullable": true
      },
      "ReadAdSetAttributionConfigurationV24Q3": {
        "type": "object",
        "properties": {
          "attributionMethod": {
            "enum": [
              "unknown",
              "criteoAttribution",
              "googleAnalyticsLastClick",
              "googleAnalyticsDataDriven",
              "lastClick",
              "postClick"
            ],
            "type": "string",
            "description": "The attribution method.",
            "nullable": true
          },
          "lookbackWindow": {
            "enum": [
              "unknown",
              "30M",
              "24H",
              "7D",
              "30D"
            ],
            "type": "string",
            "description": "The lookback window. Optional, should be specified only for attribution methods PostClick and LastClick.",
            "nullable": true
          }
        },
        "description": "Read model for an ad set's attribution configuration.",
        "nullable": true
      },
      "ReadAdSetBiddingV24Q3": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "Decimal value target relating to the `adSetObjective` specified. May be `null` for objectives that do not require a target value. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          },
          "costController": {
            "enum": [
              "COS",
              "maxCPC",
              "CPI",
              "CPM",
              "CPO",
              "CPSV",
              "CPV",
              "dailyBudget",
              "targetCPM"
            ],
            "type": "string",
            "description": "How spend is controlled",
            "nullable": true
          }
        },
        "description": "ad set bidding read model",
        "nullable": true
      },
      "ReadAdSetBudgetV24Q3": {
        "type": "object",
        "properties": {
          "budgetAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime",
              "weekly"
            ],
            "type": "string",
            "nullable": true
          },
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "ad set budget read model",
        "nullable": true
      },
      "ReadAdSetScheduleV24Q3": {
        "type": "object",
        "properties": {
          "activationStatus": {
            "enum": [
              "on",
              "off"
            ],
            "type": "string",
            "nullable": true
          },
          "deliveryStatus": {
            "enum": [
              "draft",
              "inactive",
              "live",
              "notLive",
              "pausing",
              "paused",
              "scheduled",
              "ended",
              "notDelivering",
              "archived"
            ],
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          }
        },
        "description": "ad set schedule read model",
        "nullable": true
      },
      "ReadAdSetV24Q3": {
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "nullable": true
          },
          "attributionConfiguration": {
            "$ref": "#/components/schemas/ReadAdSetAttributionConfigurationV24Q3"
          },
          "bidding": {
            "$ref": "#/components/schemas/ReadAdSetBiddingV24Q3"
          },
          "budget": {
            "$ref": "#/components/schemas/ReadAdSetBudgetV24Q3"
          },
          "campaignId": {
            "type": "string",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "nullable": true
          },
          "destinationEnvironment": {
            "enum": [
              "undefined",
              "web",
              "app"
            ],
            "type": "string",
            "nullable": true
          },
          "mediaType": {
            "enum": [
              "display",
              "video"
            ],
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "objective": {
            "enum": [
              "customAction",
              "clicks",
              "conversions",
              "displays",
              "appPromotion",
              "revenue",
              "storeConversions",
              "value",
              "reach",
              "visits",
              "videoViews"
            ],
            "type": "string",
            "nullable": true
          },
          "schedule": {
            "$ref": "#/components/schemas/ReadAdSetScheduleV24Q3"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargetingV24Q3"
          },
          "videoChannel": {
            "enum": [
              "olv",
              "ctv"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "ad set read model",
        "nullable": true
      },
      "ReadModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "AdSetId"
          }
        },
        "description": "read model data for resources"
      },
      "ReadModelAdSetIdV24Q3": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetIdV24Q3"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "AdSetIdV24Q3"
          }
        },
        "description": "read model data for resources"
      },
      "ReadModelReadAdSetV24Q3": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ReadAdSetV24Q3"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "ReadAdSetV24Q3"
          }
        },
        "description": "read model data for resources",
        "nullable": true
      },
      "RecommendedProduct": {
        "type": "object",
        "properties": {
          "alternativeClickUrl": {
            "type": "string",
            "description": "Url leading to product details page and also used to track user click. It's relying on a custom product URL field in the catalog.",
            "nullable": true
          },
          "clickUrl": {
            "type": "string",
            "description": "Url leading to product details page and also used to track user click. It's relying on the default product URL field in the catalog.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Product description.",
            "nullable": true
          },
          "googleCategory": {
            "type": "string",
            "description": "Product google category.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Product image.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Product name.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "Product price.",
            "format": "double",
            "nullable": true
          },
          "productExternalId": {
            "type": "string",
            "description": "Product external id. Same id than what is used in user events.",
            "nullable": true
          },
          "retailprice": {
            "type": "number",
            "description": "Product retail price.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Represents a recommended product."
      },
      "ReportDetailError": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "isServerRelated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "enum": [
              "UnknownError",
              "InvalidBigImageUrl",
              "InvalidProductId",
              "InvalidProductUrl",
              "InvalidSmallImageUrl",
              "JsonParsingIssue",
              "MissingID",
              "MissingImages",
              "MissingName",
              "MissingURL",
              "NonAsciiId",
              "OverlargeBigImage",
              "OverlargeID",
              "OverlargeSmallImage",
              "OverlargeURL",
              "ConfigurationError"
            ],
            "type": "string"
          }
        },
        "description": "An error on a batch operation."
      },
      "ReportDetailErrors": {
        "required": [
          "errors",
          "productId"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailError"
            }
          },
          "productId": {
            "type": "string",
            "description": "The product ID in lowercase"
          }
        },
        "description": "A list of errors on a batch operation."
      },
      "ReportDetailWarning": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "isServerRelated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "enum": [
              "OverlargeBadgeUrl",
              "InvalidBadgeUrl"
            ],
            "type": "string"
          }
        },
        "description": "A warning on a batch operation."
      },
      "ReportDetailWarnings": {
        "required": [
          "productId",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarning"
            }
          }
        },
        "description": "A list of warnings on a batch operation."
      },
      "ReportOkResponse": {
        "required": [
          "errorDetails",
          "importRequestTimestamp",
          "numberOfProductsDeleted",
          "numberOfProductsInTheBatch",
          "numberOfProductsUpserted",
          "numberOfProductsWithErrors",
          "numberOfProductsWithWarnings",
          "status",
          "warningDetails"
        ],
        "type": "object",
        "properties": {
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailErrors"
            },
            "description": "The list of errors with details."
          },
          "importRequestTimestamp": {
            "type": "string",
            "description": "The date when the original batch request was sent.",
            "format": "int64",
            "nullable": true
          },
          "numberOfProductsDeleted": {
            "type": "string",
            "description": "The number of products deleted.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsInTheBatch": {
            "type": "string",
            "description": "The number of products present in the batch.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsUpserted": {
            "type": "string",
            "description": "The number of products upserted.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsWithErrors": {
            "type": "string",
            "description": "The number of products with errors.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsWithWarnings": {
            "type": "string",
            "description": "The number of products with Warnings.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "ACCEPTED",
              "IN_PROGRESS",
              "VALIDATED",
              "VALIDATED_WITH_ERRORS",
              "FAILED"
            ],
            "type": "string",
            "description": "The status of the operation.\nThe operation is completed when the status is one of (VALIDATED,VALIDATED_WITH_ERRORS,FAILED)"
          },
          "warningDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarnings"
            },
            "description": "The list of Warnings with details."
          }
        },
        "description": "The report on a given operationToken is ready. The report is available for 4 days"
      },
      "RequestsAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelAdSetId"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "RequestsPatchAdSetV24Q3": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelPatchAdSetV24Q3"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "ResourceCollectionOutcomeOfAd": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfAd"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities."
      },
      "ResourceCollectionOutcomeOfCoupon": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCoupon"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities."
      },
      "ResourceCollectionOutcomeOfCreative": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities."
      },
      "ResourceCollectionOutcomeOfProductSet": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductSet"
            },
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
      },
      "ResourceInputOfAdWrite": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAdWrite"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity."
      },
      "ResourceInputOfCreateCoupon": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreateCoupon"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity."
      },
      "ResourceInputOfCreativeWrite": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreativeWrite"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity."
      },
      "ResourceInputOfUpdateCoupon": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfUpdateCoupon"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity."
      },
      "ResourceOfAd": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Ad"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true
      },
      "ResourceOfAdWrite": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdWrite"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ResourceOfCoupon": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Coupon"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true
      },
      "ResourceOfCouponSupportedSizes": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CouponSupportedSizes"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true
      },
      "ResourceOfCreateCoupon": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateCoupon"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ResourceOfCreative": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true
      },
      "ResourceOfCreativeWrite": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreativeWrite"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ResourceOfProductSet": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductSet"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents an entity in a guild compliant way",
        "nullable": true
      },
      "ResourceOfUpdateCoupon": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateCoupon"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ResourceOutcomeOfAd": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAd"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ResourceOutcomeOfCoupon": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCoupon"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ResourceOutcomeOfCouponSupportedSizes": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCouponSupportedSizes"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ResourceOutcomeOfCreative": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ResourceOutcomeOfProductSet": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfProductSet"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body"
      },
      "ResponseReadAdSetV24Q3": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReadModelReadAdSetV24Q3"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "ResponsesAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelAdSetId"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "ResponsesAdSetIdV24Q3": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelAdSetIdV24Q3"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "ResponsesReadAdSetV24Q3": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelReadAdSetV24Q3"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "RetargetingCreateV1": {
        "required": [
          "daysSinceLastVisitMax",
          "daysSinceLastVisitMin",
          "visitorsType"
        ],
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32"
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32"
          },
          "visitorsType": {
            "enum": [
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors."
          }
        },
        "description": "Settings to target users based on its type and days since last visit."
      },
      "RetargetingUpdateV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32"
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32"
          },
          "visitorsType": {
            "enum": [
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors."
          }
        },
        "description": "Settings to target users based on its type and days since last visit."
      },
      "RetargetingV1": {
        "type": "object",
        "properties": {
          "daysSinceLastVisitMax": {
            "type": "integer",
            "description": "Maximum number of days since last visit to partner.",
            "format": "int32",
            "nullable": true
          },
          "daysSinceLastVisitMin": {
            "type": "integer",
            "description": "Minimum number of days since last visit to partner.",
            "format": "int32",
            "nullable": true
          },
          "visitorsType": {
            "enum": [
              "Unknown",
              "All",
              "Buyers",
              "NonBuyers"
            ],
            "type": "string",
            "description": "Types of visitors.",
            "nullable": true
          }
        },
        "description": "Settings to target users based on its type and days since last visit.",
        "nullable": true
      },
      "SetAdSetTargetingDealIds": {
        "type": "object",
        "properties": {
          "dealIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DealId"
            }
          }
        },
        "description": "deal ids targeting writing model",
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "SetAdSetTargetingDealIdsRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetAdSetTargetingDealIdsResource"
          }
        },
        "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "SetAdSetTargetingDealIdsResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SetAdSetTargetingDealIds"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "SetAdSetTargetingVideoPositioning": {
        "type": "object",
        "properties": {
          "playbackMethod": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AutoSoundOn",
                "AutoSoundOff",
                "ClickSoundOn",
                "MouseOverSoundOn",
                "EnteringViewportSoundOn",
                "EnteringViewportSoundOff"
              ],
              "type": "string"
            }
          },
          "skippable": {
            "enum": [
              "Required",
              "Blocked"
            ],
            "type": "string"
          },
          "videoAspectRatio": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Horizontal",
                "Square",
                "Vertical"
              ],
              "type": "string"
            }
          },
          "videoInStreamPosition": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "PreRoll",
                "MidRoll",
                "PostRoll"
              ],
              "type": "string"
            }
          },
          "videoPlayerSize": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Small",
                "Medium",
                "Large",
                "ExtraLarge"
              ],
              "type": "string"
            }
          },
          "videoPlcmt": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "InStream",
                "AccompanyingContent",
                "Interstitial",
                "NoContentStandalone"
              ],
              "type": "string"
            }
          }
        },
        "description": "Video positioning targeting writing model",
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "SetAdSetTargetingVideoPositioningRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningResource"
          }
        },
        "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects."
      },
      "SetAdSetTargetingVideoPositioningResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioning"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "Size": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Size entity containing width and height of the creative",
        "nullable": true
      },
      "StatisticsOkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatisticsRecordList"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterError"
            },
            "description": "errors",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterWarning"
            },
            "description": "warnings",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "The statistics reports"
      },
      "StatisticsRecord": {
        "required": [
          "added",
          "blacklisted",
          "deleted",
          "displayable",
          "endDate",
          "missingDescription",
          "missingImage",
          "missingName",
          "missingPrice",
          "missingUrl",
          "nonDisplayable",
          "outOfStock",
          "startDate",
          "total",
          "variant",
          "updated"
        ],
        "type": "object",
        "properties": {
          "added": {
            "type": "string",
            "description": "The number of inserted products during the period between startDate and endDate",
            "format": "int64"
          },
          "blacklisted": {
            "type": "string",
            "description": "The number of total blacklisted products at endDate moment",
            "format": "int64"
          },
          "deleted": {
            "type": "string",
            "description": "The number of deleted products during the period between startDate and endDate",
            "format": "int64"
          },
          "displayable": {
            "type": "string",
            "description": "The number of total displayable products at endDate moment",
            "format": "int64"
          },
          "endDate": {
            "type": "string",
            "description": "End date of streaming products collection",
            "format": "date-time"
          },
          "missingDescription": {
            "type": "string",
            "description": "The number of total missing description products at endDate moment",
            "format": "int64"
          },
          "missingImage": {
            "type": "string",
            "description": "The number of total missing image products at endDate moment",
            "format": "int64"
          },
          "missingName": {
            "type": "string",
            "description": "The number of total missing name products at endDate moment",
            "format": "int64"
          },
          "missingPrice": {
            "type": "string",
            "description": "The number of total missing price products at endDate moment",
            "format": "int64"
          },
          "missingUrl": {
            "type": "string",
            "description": "The number of total missing url products at endDate moment",
            "format": "int64"
          },
          "nonDisplayable": {
            "type": "string",
            "description": "The number of total non-displayable products at endDate moment",
            "format": "int64"
          },
          "outOfStock": {
            "type": "string",
            "description": "The number of total out-of-stock products at endDate moment",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of streaming products collection",
            "format": "date-time"
          },
          "total": {
            "type": "string",
            "description": "The number of total products at endDate moment",
            "format": "int64"
          },
          "updated": {
            "type": "string",
            "description": "The number of updated products during the period between startDate and endDate",
            "format": "int64"
          },
          "variant": {
            "type": "string",
            "description": "The number of total variant products at endDate moment",
            "format": "int64"
          }
        },
        "description": "The format  statistics report for a period between startDate and endDate"
      },
      "StatisticsRecordList": {
        "required": [
          "statisticsRecordList"
        ],
        "type": "object",
        "properties": {
          "statisticsRecordList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatisticsRecord"
            }
          }
        },
        "description": "The list of statistics reports",
        "nullable": true
      },
      "StatisticsReportQueryMessage": {
        "required": [
          "currency",
          "dimensions",
          "endDate",
          "format",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "adSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets ids. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets names. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetStatus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets status. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "Adset",
                "AdvertiserId",
                "Advertiser",
                "CategoryId",
                "Category",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year",
                "Os",
                "Device",
                "CampaignId",
                "Campaign",
                "AdId",
                "Ad",
                "CouponId",
                "Coupon",
                "MarketingObjectiveId",
                "MarketingObjective",
                "ChannelId",
                "Channel",
                "Goal",
                "AdChannel",
                "SocialPlatform"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Adset report"
      },
      "SupplyVendor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Supply Vendor model",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "SupplyVendorListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupplyVendorResource"
            },
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
      },
      "SupplyVendorResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SupplyVendor"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents an entity in a guild compliant way"
      },
      "Tag": {
        "type": "object",
        "properties": {
          "htmlTag": {
            "type": "string",
            "description": "Html tag",
            "nullable": true
          },
          "size": {
            "$ref": "#/components/schemas/Size"
          }
        },
        "description": "Entity specifying the html of the tag and its size"
      },
      "TargetingEntity": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityFilter"
            },
            "nullable": true
          },
          "mode": {
            "enum": [
              "BLOCKLIST",
              "ALLOWLIST"
            ],
            "type": "string",
            "description": "Can be either BLOCKLIST or ALLOWLIST",
            "nullable": true
          },
          "type": {
            "enum": [
              "DOMAIN",
              "BUNDLE"
            ],
            "type": "string",
            "description": "Can be either DOMAIN or BUNDLE",
            "nullable": true
          }
        },
        "description": "Represents either an allowlisting or a blocklisting rule",
        "nullable": true
      },
      "TransactionsReportQueryMessage": {
        "required": [
          "currency",
          "endDate",
          "format",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "eventType": {
            "type": "string",
            "description": "Apply a filter on Event type .",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Transaction report"
      },
      "TransactionsReportQueryMessageListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsReportQueryMessageResource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for several value objects."
      },
      "TransactionsReportQueryMessageResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/TransactionsReportQueryMessage"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "TransparencyQueryMessage": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "shouldDisplayProductIds": {
            "type": "boolean",
            "description": "Specify if the product ids are displayed in the report.",
            "default": false
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the query for Transparency report"
      },
      "TransparencyReport": {
        "required": [
          "advertiserId",
          "files",
          "tokenValidUntil"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportFile"
            }
          },
          "tokenValidUntil": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the attribute response for Transparency report",
        "nullable": true
      },
      "TransparencyReportFile": {
        "required": [
          "fileName",
          "url"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "This is the message defining the file response for Transparency report"
      },
      "TransparencyReportListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects."
      },
      "TransparencyReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/TransparencyReport"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "UpdateCoupon": {
        "required": [
          "startDate"
        ],
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format"
          }
        },
        "description": "Entity to edit a Coupon"
      },
      "UserDef": {
        "required": [
          "attributes",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "identifier": {
            "type": "string"
          }
        },
        "description": "User definition with an identifier (email, uid...) and attributes (key, value)"
      },
      "ValueResourceCollectionOutcomeOfProductFilterConfig": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfProductFilterConfig"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several values."
      },
      "ValueResourceInputOfCreateProductFilterRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCreateProductFilterRequest"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "ValueResourceInputOfCreateProductSetRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCreateProductSetRequest"
          }
        },
        "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects.",
        "example": {
          "data": {
            "type": "CreateProductSetRequest",
            "attributes": {
              "datasetId": "0",
              "name": "My Product Set",
              "isDraft": true,
              "rules": [
                {
                  "operator": "IsIn",
                  "field": "Brand",
                  "values": [
                    "MyBrand"
                  ]
                }
              ]
            }
          }
        }
      },
      "ValueResourceOfCreateProductFilterRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateProductFilterRequest"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ValueResourceOfCreateProductSetRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateProductSetRequest"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "ValueResourceOfProductFilterConfig": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductFilterConfig"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true
      },
      "ValueResourceOutcomeOfProductFilterConfig": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfProductFilterConfig"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "VideoDetail": {
        "required": [
          "duration",
          "shape",
          "url"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "description": "The duration of the video in milliseconds, the video could be trimmed if it is longer than 30000 ms.",
            "format": "double"
          },
          "shape": {
            "enum": [
              "Horizontal",
              "Vertical",
              "Square"
            ],
            "type": "string",
            "description": "Shape of the video"
          },
          "url": {
            "type": "string",
            "description": "URL of the video uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
            "format": "uri"
          }
        },
        "description": "Entity consists of the url of the video, its duration and its shape."
      },
      "WriteModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetId"
          }
        },
        "description": "write model data for resources"
      },
      "WriteModelPatchAdSetV24Q3": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetV24Q3"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "PatchAdSetV24Q3"
          }
        },
        "description": "write model data for resources"
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "tags": [
    {
      "name": "Advertiser"
    },
    {
      "name": "Analytics"
    },
    {
      "name": "Audience"
    },
    {
      "name": "Campaign"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "Creative"
    },
    {
      "name": "Gateway"
    },
    {
      "name": "OnSiteRecommendation"
    },
    {
      "name": "Reco"
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}