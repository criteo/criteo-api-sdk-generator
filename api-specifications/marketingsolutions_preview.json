{
    "openapi": "3.0.1",
    "info": {
        "title": "Criteo API",
        "description": "Criteo publicly exposed API",
        "version": "Preview"
    },
    "servers": [
        {
            "url": "https://api.criteo.com"
        }
    ],
    "paths": {
        "/preview/marketing-solutions/audience-segments/{audience-segment-id}/contact-list": {
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Add/remove identifiers to or from an Contact List Audience Segment",
                "operationId": "updateContactListIdentifiers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactlistAmendmentRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "Summary of created request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModifyAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "type": "ContactlistAmendment",
                                        "attributes": {
                                            "contactListId": "12",
                                            "operation": "add",
                                            "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                                            "identifierType": "madid",
                                            "nbValidIdentifiers": 7343,
                                            "nbInvalidIdentifiers": 13,
                                            "sampleInvalidIdentifiers": [
                                                "InvalidIdentifier"
                                            ]
                                        }
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Audience 123 not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Audience"
                ],
                "description": "Delete all identifiers from a Contact List Audience Segment",
                "operationId": "deleteContactListIdentifiers",
                "responses": {
                    "200": {
                        "description": "The Contact List was emptied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAudienceContactListResponse"
                                },
                                "example": {
                                    "data": {
                                        "id": "1",
                                        "type": "AudienceContactlist"
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Audience"
                ],
                "description": "Returns the statistics of a contact list segment.",
                "operationId": "getContactListStatistics",
                "parameters": [
                    {
                        "name": "audience-segment-id",
                        "in": "path",
                        "description": "The segment ID.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactListStatisticsEntityV1Response"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "audience-segment-id",
                    "in": "path",
                    "description": "The ID of the Audience Segment to amend",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "int32"
                    }
                }
            ]
        },
        "/preview/audiences/{audience-id}/contactlist-attributes": {
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Add/remove users to or from an audience",
                "operationId": "modifyAudienceUsersWithAttributes",
                "parameters": [
                    {
                        "name": "audience-id",
                        "in": "path",
                        "description": "The id of the audience to amend",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactlistWithAttributesAmendmentRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "Summary of created request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModifyAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "operation": "",
                                        "requestDate": "",
                                        "identifierType": "",
                                        "nbValidIdentifiers": 0,
                                        "nbInvalidIdentifiers": 0,
                                        "sampleInvalidIdentifiers": [
                                            ""
                                        ]
                                    },
                                    "errors": [],
                                    "warnings": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "Gateway"
                ],
                "description": "Get information about the currently logged application",
                "operationId": "GetCurrentApplication",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences/search": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
                "operationId": "searchAudiences",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The (zero-based) offset into the collection. The default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Audience search filters.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSearchInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSearchInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSearchInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSearchInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1AudienceSearchMetadataV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences/create": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Creates all audiences with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
                "operationId": "bulkCreateAudiences",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkCreateInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences": {
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Updates the properties of all audiences with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
                "operationId": "bulkUpdateAudiences",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkUpdateInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences/delete": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Deletes the audiences associated to the given audience IDs.",
                "operationId": "bulkDeleteAudiences",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceBulkDeleteInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceIdEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences/compute-sizes": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Gets the size of all audiences. An error is returned for those whose size calculation is not supported.",
                "operationId": "computeAudiencesSizes",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceComputeSizesInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audiences/estimate-size": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Gets the size estimation of a non existent audience. An error is returned when size calculation is not supported.",
                "operationId": "estimateAudienceSize",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceEstimateSizeInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSizeEstimationV1Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/search": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
                "operationId": "searchAudienceSegments",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The (zero-based) offset into the collection. The default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Segment search filters.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentSearchInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/create": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Creates all segments with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
                "operationId": "bulkCreateAudienceSegments",
                "requestBody": {
                    "description": "Segment creation parameter",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkCreateInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments": {
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Updates the properties of all segments with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
                "operationId": "bulkUpdateAudienceSegments",
                "requestBody": {
                    "description": "Segment Update request",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkUpdateInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/delete": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Delete the segments associated to the given audience IDs.",
                "operationId": "bulkDeleteAudienceSegment",
                "requestBody": {
                    "description": "Segment delete request.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentBulkDeleteInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentIdEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/compute-sizes": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Gets the size of all segments. An error is returned for those whose size calculation is not supported.",
                "operationId": "computeAudienceSegmentsSizes",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentComputeSizesInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success or partial success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/estimate-size": {
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Gets the size estimation of a non existent segment . An error is returned when size calculation is not supported.",
                "operationId": "estimateAudienceSegmentSize",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AudienceSegmentEstimateSizeInputV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/commerce-interests": {
            "get": {
                "tags": [
                    "Audience"
                ],
                "description": "Returns a list with all available commerce interests that can be used to define a commerce segment. These commerce interests correspond to the Google product taxonomy.",
                "operationId": "getCommerceInterests",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "query",
                        "description": "The advertiser ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The ISO 3166-1 alpha-2 country code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentInterestEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentInterestEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentInterestEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/audience-segments/commerce-brands": {
            "get": {
                "tags": [
                    "Audience"
                ],
                "description": "Returns a list with all available commerce brands that can be used to define a commerce segment.",
                "operationId": "getCommerceBrands",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "query",
                        "description": "The advertiser ID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The ISO 3166-1 alpha-2 country code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentBrandEntityV1ListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentBrandEntityV1ListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommerceAudienceSegmentBrandEntityV1ListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/audience": {
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Link or unlink an audience with an ad set",
                "operationId": "updateAdSetAudience",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Ad set id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Audience and ad set to link",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdSetAudienceLinkInputEntityV1"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{adSetId}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the data for the specified ad set",
                "operationId": "GetAdSet",
                "parameters": [
                    {
                        "name": "adSetId",
                        "in": "path",
                        "description": "Id of the ad set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data for the ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/search": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Search for ad sets",
                "operationId": "SearchAdSets",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "data for the ad sets",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets": {
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch a list of AdSets.",
                "operationId": "PatchAdSets",
                "requestBody": {
                    "description": "List of adsets to patch.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of patched adSets.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Create the specified ad set",
                "operationId": "CreateAdSet",
                "requestBody": {
                    "description": "the ad sets to create",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdSetRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdSetRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdSetRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAdSetRequest"
                            }
                        }
                    },
                    "x-bodyName": "adSet"
                },
                "responses": {
                    "201": {
                        "description": "The ad set that has been created and errors / warnings",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/start": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Start the specified list of ad sets",
                "operationId": "StartAdSets",
                "requestBody": {
                    "description": "All the ad sets to start",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of ad sets that have been started and errors / warnings by ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/stop": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Stop the specified list of ad sets",
                "operationId": "StopAdSets",
                "requestBody": {
                    "description": "All the ad sets to stop",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of ad sets that have been stopped and errors / warnings by ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/display-multipliers": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Display Multipliers for all valid Categories associated to an Ad Set",
                "operationId": "GetDisplayMultipliers",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Display Multipliers for all valid Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch Display Multipliers for one or more Categories in a single request. Partial success policy is followed.",
                "operationId": "PatchDisplayMultipliers",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        }
                    },
                    "x-bodyName": "displayMultipliersToUpdate"
                },
                "responses": {
                    "200": {
                        "description": "List of updated Display Multipliers for given Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/category-bids": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Category Bids for all valid Categories associated to an Ad Set",
                "operationId": "GetCategoryBidList",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Category Bids for all valid Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch Category Bids for one or more Categories in a single request. Partial success policy is followed.",
                "operationId": "PatchCategoryBidList",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        }
                    },
                    "x-bodyName": "categoryBidsToUpdate"
                },
                "responses": {
                    "200": {
                        "description": "List of updated Category Bids for given Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/campaigns/{campaign-id}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the data for the specified campaign",
                "operationId": "GetCampaign",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "Id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data for the campaign",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/campaigns/search": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Search for campaigns",
                "operationId": "SearchCampaigns",
                "requestBody": {
                    "description": "filters on campaigns",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "data for the campaigns",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/campaigns": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Create the specified campaign",
                "operationId": "CreateCampaign",
                "requestBody": {
                    "description": "the campaigns to create",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCampaignRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCampaignRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCampaignRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCampaignRequest"
                            }
                        }
                    },
                    "x-bodyName": "marketingCampaign"
                },
                "responses": {
                    "201": {
                        "description": "The campaign that has been created and errors / warnings",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch a list of Campaigns.",
                "operationId": "PatchCampaigns",
                "requestBody": {
                    "description": "List of campaigns to patch.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "List of patched campaigns.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/creatives": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the list of self-services Creatives for a given advertiser",
                "operationId": "GetCreatives",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of creatives to be returned. The default is 50.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The (zero-based) offset into the collection of creatives. The default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of self-services Creatives is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Creative"
                ],
                "description": "Create a Creative",
                "operationId": "CreateCreative",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "201": {
                        "description": "The created creative is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/creatives/{id}": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get a Creative with its id",
                "operationId": "GetCreative",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The creative identifier to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The found creative is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Creative"
                ],
                "description": "Edit a specific Creative",
                "operationId": "EditCreative",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The creative identifier to edit.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreativeWriteRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "The edited creative is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreativeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Creative"
                ],
                "description": "Delete a Creative if there are no ads binded to it",
                "operationId": "DeleteCreative",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The creative identifier to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The creative was deleted."
                    },
                    "400": {
                        "description": "The request contained invalid parameters."
                    },
                    "401": {
                        "description": "The request was not properly authorized."
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server."
                    }
                }
            }
        },
        "/preview/creatives/{id}/preview": {
            "post": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the preview of a specific Creative",
                "operationId": "GetCreativePreviewPost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Creative identifier to preview.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width of the Creative to preview.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height of the Creative to preview.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The preview HTML of a specific Creative is returned.",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/html": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/html": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/ads": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the list of self-services Ads for a given advertiser",
                "operationId": "GetAds",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of ads to be returned. The default is 50.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The (zero-based) offset into the collection of ads. The default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of self-services Ads is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Creative"
                ],
                "description": "Create an Ad",
                "operationId": "CreateAd",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdWriteRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdWriteRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdWriteRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdWriteRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "201": {
                        "description": "The created Ad is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/ads/{id}": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get an Ad with its id",
                "operationId": "GetAd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ad identifier to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The found ad is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Creative"
                ],
                "description": "Delete an Ad",
                "operationId": "DeleteAd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ad identifier to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The ad was deleted."
                    },
                    "400": {
                        "description": "The request contained invalid parameters."
                    },
                    "401": {
                        "description": "The request was not properly authorized."
                    },
                    "500": {
                        "description": "A non-request based error occurred on the server."
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/coupons": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the list of self-services Coupons for a given advertiser",
                "operationId": "GetCoupons",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of coupons to be returned. The default is 50.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The (zero-based) offset into the collection of coupons. The default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of self-services Coupons is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Creative"
                ],
                "description": "Create a Coupon",
                "operationId": "CreateCoupon",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCouponRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCouponRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCouponRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCouponRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "201": {
                        "description": "The created Coupon is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/coupons/{id}": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get a Coupon with its id",
                "operationId": "GetCoupon",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Coupon identifier to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The found Coupon is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Creative"
                ],
                "description": "Edit a specific Coupon",
                "operationId": "EditCoupon",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Coupon identifier to edit.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCouponRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCouponRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCouponRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCouponRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "The edited Coupon is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Creative"
                ],
                "description": "Delete a Coupon",
                "operationId": "DeleteCoupon",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Coupon identifier to delete.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The Coupon was deleted."
                    },
                    "400": {
                        "description": "The request contained invalid parameters."
                    },
                    "403": {
                        "description": "The request was not properly authorized."
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/coupons/{id}/preview": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the preview of a specific Coupon",
                "operationId": "GetCouponPreview",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The Coupon identifier to preview.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "The width of the coupon to preview.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "The height of the coupon to preview.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The preview HTML of a specific Coupon is returned.",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/html": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/html": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/coupons-supported-sizes": {
            "get": {
                "tags": [
                    "Creative"
                ],
                "description": "Get the list of Coupon supported sizes",
                "operationId": "GetCouponSupportedSizes",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser identifier.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ad-set-id",
                        "in": "query",
                        "description": "The ad set id on which you want to check the Coupon supported sizes.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list of Coupon supported sizes is returned.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CouponSupportedSizesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained invalid parameters.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The request was not properly authorized.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Creates a token based either on supplied client credentials or on single use authorization code",
                "description": "Creates a token when the supplied client credentials are valid",
                "operationId": "GetToken",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "grant_type",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "type": "string"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "redirect_uri": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/statistics/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
                "operationId": "GetAdsetReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        }
                    },
                    "x-bodyName": "reportQuery"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/transactions/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Transactions endpoint provides transactions id related data.",
                "operationId": "GetTransactionsReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/placements/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "Your ads are placed in different domains (publishers) and environments (websites and apps). Thanks to the placements endpoint, you can analyse the performances for each publisher, comparing displays, clicks and sales generated.",
                "operationId": "GetPlacementsReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/log-level/advertisers/{advertiser-id}/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Statistics endpoint provides publisher data.",
                "operationId": "GetTransparencyReport",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser id to fetch the transparency data.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        }
                    },
                    "x-bodyName": "queryMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "TransparencyReport",
                                            "attributes": {
                                                "advertiserId": "123",
                                                "tokenValidUntil": "2021-01-31T00:00:00.0000000+00:00",
                                                "files": [
                                                    {
                                                        "fileName": "report.csv",
                                                        "url": "https://www.example.com/transparency"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/categories/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "With this endpoint you can analyse what are the categories of the placements' domains your ads are placed in.",
                "operationId": "GetCategoriesReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCategoriesReportRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCategoriesReportRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCategoriesReportRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCategoriesReportRequest"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/reports/top-products": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "With the topProducts endpoint, you can analyse the performances for each publisher, by top displays, top clicks or top sales.",
                "operationId": "GetTopProductsReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateTopProductsReportRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateTopProductsReportRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateTopProductsReportRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateTopProductsReportRequest"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required.",
                                            "detail": null,
                                            "source": null,
                                            "stackTrace": null
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser.",
                                            "source": null,
                                            "stackTrace": null
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/reports/creatives": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "With Creatives endpoint, you can analyse the daily performances of your creatives on the main metrics: clicks, ctr, displays.",
                "operationId": "GetCreativesReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCreativesReportRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCreativesReportRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCreativesReportRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCreativesReportRequest"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportDataMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required.",
                                            "detail": null,
                                            "source": null,
                                            "stackTrace": null
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser.",
                                            "source": null,
                                            "stackTrace": null
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/deal-ids": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Deal Id Targeting configuration for the ad set whose id is specified",
                "operationId": "GetAdSetTargetingDealIds",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the Deal Id Targeting configuration",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Set the Deal Id Targeting configuration for the ad set whose id is specified",
                "operationId": "SetAdSetTargetingDealIds",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "the new Deal Id Targeting configuration",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingDealIdsRequest"
                            }
                        }
                    },
                    "x-bodyName": "adSetDealIdTargetings"
                },
                "responses": {
                    "200": {
                        "description": "the errors/warnings if any",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/deal-ids/disable": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Disable the Deal Id Targeting configuration for the ad set whose id is specified",
                "operationId": "DisableAdSetTargetingDealIds",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the errors/warnings if any",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/video-positioning": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Video Positioning Targeting configuration for the ad set whose id is specified",
                "operationId": "GetAdSetTargetingVideoPositioning",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the Video Positioning Targeting configuration",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Set the Video Positioning Targeting configuration for the ad set whose id is specified",
                "operationId": "SetAdSetTargetingVideoPositioning",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "the new Video Positioning Targeting configuration",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningRequest"
                            }
                        }
                    },
                    "x-bodyName": "adSetTargetingVideoPositioning"
                },
                "responses": {
                    "200": {
                        "description": "the errors/warnings if any",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/{ad-set-id}/targeting/video-positionings/disable": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Disable the Video Positioning Targeting configuration for the ad set whose id is specified",
                "operationId": "DisableAdSetTargetingVideoPositioning",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "the errors/warnings if any",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/marketing-solutions/ad-sets/targeting/supply-vendors": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Fetch the list of available supply vendors for any Ad Set targetings",
                "operationId": "GetSupplyVendorList",
                "responses": {
                    "200": {
                        "description": "the errors/warnings if any",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyVendorListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyVendorListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplyVendorListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/preview/advertisers/me": {
            "get": {
                "tags": [
                    "Advertiser"
                ],
                "description": "Fetch the portfolio of Advertisers for this account",
                "operationId": "ApiPortfolioGet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "advertiser",
                                            "id": "13",
                                            "attributes": {
                                                "advertiserName": "ClientName1"
                                            }
                                        },
                                        {
                                            "type": "advertiser",
                                            "id": "1352",
                                            "attributes": {
                                                "advertiserName": "ClientName2"
                                            }
                                        },
                                        {
                                            "type": "advertiser",
                                            "id": "73550",
                                            "attributes": {
                                                "advertiserName": "ClientName3"
                                            }
                                        }
                                    ],
                                    "errors": [],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/advertisers": {
            "post": {
                "tags": [
                    "Advertiser"
                ],
                "description": "Create a new advertiser based on provided parameters. This could take up to 30 seconds.",
                "operationId": "createAdvertiser",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdvertiserCreationRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdvertiserCreationRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdvertiserCreationRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdvertiserCreationRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "advertiserCreation"
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                },
                                "example": {
                                    "data": {
                                        "type": "advertiser",
                                        "id": "73550"
                                    },
                                    "errors": [],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "cb381a21702b247f",
                                            "type": "validation",
                                            "code": "invalid",
                                            "title": "Failed to create Advertiser",
                                            "detail": "Failed to create Advertiser"
                                        }
                                    ],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponseV2"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "cb381a21702b247f",
                                            "type": "authentication",
                                            "code": "invalid",
                                            "title": "Permission Denied; This endpoint expects a user token",
                                            "detail": "Permission Denied; This endpoint expects a user token"
                                        }
                                    ],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponseV2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedResponseV2"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "cb381a21702b247f",
                                            "type": "availability",
                                            "code": "internal-error",
                                            "title": "Internal Server Error",
                                            "detail": "Internal Server Error"
                                        }
                                    ],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserCreationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/industries": {
            "get": {
                "tags": [
                    "Advertiser"
                ],
                "description": "Returns the list of available industries for new advertisers.",
                "operationId": "listIndustries",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "industry",
                                            "id": "13"
                                        },
                                        {
                                            "type": "industry",
                                            "id": "1352"
                                        },
                                        {
                                            "type": "industry",
                                            "id": "73550"
                                        }
                                    ],
                                    "errors": [],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListAvailableIndustriesResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiser-id}/datasets": {
            "get": {
                "tags": [
                    "Advertiser"
                ],
                "description": "Retrieves corresponding Datasets for a given Advertiser. Only those Datasets are included for which the given Advertiser is marked a primary.",
                "operationId": "getDatasetList",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The id of the Advertiser for which Datasets are being retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "dataset",
                                            "id": "73550",
                                            "attributes": {
                                                "name": "Dataset 1"
                                            }
                                        }
                                    ],
                                    "errors": [],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "cb381a21702b247f",
                                            "type": "authentication",
                                            "code": "invalid",
                                            "title": "Permission Denied; This endpoint expects a user token",
                                            "detail": "Permission Denied; This endpoint expects a user token"
                                        }
                                    ],
                                    "warnings": []
                                }
                            },
                            "text/plain": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                },
                                "example": {
                                    "data": [],
                                    "errors": [
                                        {
                                            "traceId": "cb381a21702b247f",
                                            "type": "authorization",
                                            "code": "permission-denied",
                                            "title": "Permission denied, you do not have access this to resource",
                                            "detail": "Permission denied, you do not have access this to resource"
                                        }
                                    ],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdvertiserDatasetListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/catalog/products/batch": {
            "post": {
                "tags": [
                    "Catalog"
                ],
                "description": "Used to publish a batch of operations to insert, update and deletes products.\n The batch is processed asynchronously.The response provides an operationToken which can be used to track\n the status of the report of the operation.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductsCustomBatchRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "202": {
                        "description": "Batch accepted. The status of the operation can be tracked using the report endpoint and the operationToken.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchAcceptedResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"json-format\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "Request too large. By default, payload up to 16 MB is rejected.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Too Many Requests. Allowed error types and errors: [(type=\"availability\", code=\"too-many-requests\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/catalog/products/batch/report/{operation-token}": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "description": "Get the report of an asynchronous batch operation previously requested",
                "parameters": [
                    {
                        "name": "operation-token",
                        "in": "path",
                        "description": "The token returned by the batch endpoint.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The report object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportOkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-token-is-malformed\"),(type=\"validation\", code=\"catalog-operation-report-is-expired\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-not-found\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/product-sets/{product-set-id}": {
            "get": {
                "tags": [
                    "Reco"
                ],
                "description": "Fetch an existing product set",
                "operationId": "FetchProductSet",
                "parameters": [
                    {
                        "name": "product-set-id",
                        "in": "path",
                        "description": "ID of the product set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product set fetched successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to parse the request parameters",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reco"
                ],
                "description": "Remove a product set",
                "operationId": "RemoveProductSet",
                "parameters": [
                    {
                        "name": "product-set-id",
                        "in": "path",
                        "description": "ID of the product set to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ProductSet removed successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request was not valid",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/product-sets": {
            "post": {
                "tags": [
                    "Reco"
                ],
                "description": "Create a new product set",
                "operationId": "CreateProductSet",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValueResourceInputOfCreateProductSetRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Product set created successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceOutcomeOfProductSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to parse the request parameters",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Cannot process entity content",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/product-sets/dataset/{dataset-id}": {
            "get": {
                "tags": [
                    "Reco"
                ],
                "description": "Fetch product sets of a given dataset",
                "operationId": "FetchProductSets",
                "parameters": [
                    {
                        "name": "dataset-id",
                        "in": "path",
                        "description": "The ID of the dataset that should be used for product set retrieval",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products sets fetched successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceCollectionOutcomeOfProductSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unable to parse the request parameters",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outcome"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/product-sets/preview": {
            "post": {
                "tags": [
                    "Reco"
                ],
                "description": "Display a preview of product set rules",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductSetStatisticsQuery"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OkResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Authorization Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewFailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreviewFailResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/recommendation/search": {
            "post": {
                "tags": [
                    "OnSiteRecommendation"
                ],
                "description": "Retrieves a list of products recommended for the given user. This end point can either rely on a Criteo UserId, or a list of user events to perform the recommendation.",
                "operationId": "ApiV1RecoPost",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnSiteRecoRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnSiteRecoRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnSiteRecoRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/OnSiteRecoRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OnSiteRecoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/preview/brand-safety/oci": {
            "description": "This resource represents a brand-safety rule. Each brand-safety rule determines which context will be applied to the selected target.",
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Create or update a new or replace existing OCI brand-safety rule.",
                "operationId": "upsertOCIbrandSafetyRule",
                "requestBody": {
                    "description": "OCI brand-safety rule input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciBrandSafetyRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Rule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "value": {
                                                "summary": "Ok response for OCI brand safety endpoints",
                                                "value": {
                                                    "data": {
                                                        "id": "42",
                                                        "type": "OciBrandSafetyRule",
                                                        "attributes": {
                                                            "target": {
                                                                "id": 42,
                                                                "type": "Campaign"
                                                            },
                                                            "blacklisted": [
                                                                "gv_adult",
                                                                "gv_arms"
                                                            ]
                                                        }
                                                    },
                                                    "warnings": null,
                                                    "errors": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get OCI brand-safety rule for the specified target",
                "operationId": "getOCIbrandSafetyRule",
                "parameters": [
                    {
                        "name": "target-type",
                        "in": "query",
                        "description": "Defines a target for a rule.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TargetType"
                        }
                    },
                    {
                        "name": "target-id",
                        "in": "query",
                        "description": "Unique target identifier.",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "value": {
                                                "summary": "Ok response for OCI brand safety endpoints",
                                                "value": {
                                                    "data": {
                                                        "id": "42",
                                                        "type": "OciBrandSafetyRule",
                                                        "attributes": {
                                                            "target": {
                                                                "id": 42,
                                                                "type": "Campaign"
                                                            },
                                                            "blacklisted": [
                                                                "gv_adult",
                                                                "gv_arms"
                                                            ]
                                                        }
                                                    },
                                                    "warnings": null,
                                                    "errors": null
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Delete OCI brand-safety rule.",
                "operationId": "deleteOCIbrandSafetyRule",
                "parameters": [
                    {
                        "name": "target-type",
                        "in": "query",
                        "description": "Defines a target for a rule.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TargetType"
                        }
                    },
                    {
                        "name": "target-id",
                        "in": "query",
                        "description": "Unique target identifier.",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule deleted"
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciBrandSafetyResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/brand-safety/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/targeting/oci": {
            "description": "This resource represents a targeting rule. Each targeting rule is determines which contextual data will be aimed for the selected target.",
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Create or update new or update existing OCI targeting rule.",
                "operationId": "upsertOCItargetingRule",
                "requestBody": {
                    "description": "OCI targeting rule input",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OciTargetingRule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Rule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "value": {
                                                "summary": "Ok response for OCI targeting endpoints",
                                                "value": {
                                                    "data": {
                                                        "id": "42",
                                                        "type": "OciTargetingRule",
                                                        "attributes": {
                                                            "target": {
                                                                "id": 42,
                                                                "type": "Campaign"
                                                            },
                                                            "rule": {
                                                                "operator": "Or",
                                                                "children": [
                                                                    {
                                                                        "operator": "Value",
                                                                        "value": "gs_auto"
                                                                    },
                                                                    {
                                                                        "operator": "Value",
                                                                        "value": "gs_business"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "warnings": null,
                                                "errors": null
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get OCI targeting rule for specified target.",
                "operationId": "getOCItargetingRule",
                "parameters": [
                    {
                        "name": "target-type",
                        "in": "query",
                        "description": "Defines a target for a rule.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TargetType"
                        }
                    },
                    {
                        "name": "target-id",
                        "in": "query",
                        "description": "Unique target identifier.",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rule found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "value": {
                                                "summary": "Ok response for OCI targeting endpoints",
                                                "value": {
                                                    "data": {
                                                        "id": "42",
                                                        "type": "OciTargetingRule",
                                                        "attributes": {
                                                            "target": {
                                                                "id": 42,
                                                                "type": "Campaign"
                                                            },
                                                            "rule": {
                                                                "operator": "Or",
                                                                "children": [
                                                                    {
                                                                        "operator": "Value",
                                                                        "value": "gs_auto"
                                                                    },
                                                                    {
                                                                        "operator": "Value",
                                                                        "value": "gs_business"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "warnings": null,
                                                "errors": null
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Delete OCI targeting rule.",
                "operationId": "deleteOCItargetingRule",
                "parameters": [
                    {
                        "name": "target-type",
                        "in": "query",
                        "description": "Defines a target for a rule.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TargetType"
                        }
                    },
                    {
                        "name": "target-id",
                        "in": "query",
                        "description": "Unique target identifier.",
                        "required": true,
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rule deleted"
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Bad request error example",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "validation",
                                                                    "code": "invalid",
                                                                    "title": "Invalid json",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Unauthorized response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authentication",
                                                                    "code": "not-authenticated",
                                                                    "title": "Unauthorized request",
                                                                    "detail": "JWT provided invalid or expired",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "308125b1-e9a7-4712-b420-cc11e681e337"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Forbidden response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "authorization",
                                                                    "code": "not-authorized",
                                                                    "title": "User has no access to the resource",
                                                                    "detail": "Invalid json. Path: line 2, position 42.",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "1a786adf-d06f-4a01-903b-bc37981cdf79"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal service error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OciTargetingResponse"
                                },
                                "examples": {
                                    "sample": {
                                        "value": {
                                            "summary": "Internal service error response.",
                                            "value": {
                                                "allOf": [
                                                    {
                                                        "value": {
                                                            "value": {
                                                                "data": null,
                                                                "warnings": null
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "value": {
                                                            "errors": [
                                                                {
                                                                    "type": "availability",
                                                                    "code": "internal-error",
                                                                    "title": "Internal service error",
                                                                    "detail": "An internal error has occurred",
                                                                    "instance": "/v2/targeting/oci",
                                                                    "traceId": "6d247cae-7497-4039-9310-69f426566365"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiserId}/targeting/bundle-rules": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Returns a list of all targeted bundles for an advertiser.",
                "operationId": "GetAdvertiserBundleRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Inserts a list of targeted bundles for an advertiser and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
                "operationId": "PostAdvertiserBundleRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Description of the targeting rule to setup",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the targeted bundles for an advertiser by adding a list of bundles to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "PutAdvertiserBundleRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to add to the existing list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Removes some bundles from the current list of targeted bundles for a given advertiser.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "DeleteAdvertiserBundleRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to delete from the list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/advertisers/{advertiserId}/targeting/domain-rules": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Returns a list of all targeted domains for an advertiser.",
                "operationId": "GetAdvertiserDomainRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Inserts a list of targeted domains for an advertiser and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
                "operationId": "PostAdvertiserDomainRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Description of the targeting rule to setup",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the targeted domains for an advertiser by adding a list of domains to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "PutAdvertiserDomainRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to add to the existing list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Removes some domains from the current list of targeted domains for a given advertiser.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "DeleteAdvertiserDomainRules",
                "parameters": [
                    {
                        "name": "advertiserId",
                        "in": "path",
                        "description": "The advertiser id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to delete from the list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/campaigns/{campaignId}/targeting/bundle-rules": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Returns a list of all targeted bundles for a campaign.",
                "operationId": "GetCampaignBundleRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Inserts a list of targeted bundles for a campaign and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
                "operationId": "PostCampaignBundleRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Description of the targeting rule to setup",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the targeted bundles for a campaign by adding a list of bundles to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "PutCampaignBundleRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to add to the existing list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Removes some bundles from the current list of targeted bundles for a given campaign.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "DeleteCampaignBundleRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to delete from the list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/preview/campaigns/{campaignId}/targeting/domain-rules": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Returns a list of all targeted domains for a campaign.",
                "operationId": "GetCampaignDomainRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Inserts a list of targeted domains for a campaign and sets the targeting mode : blocklisting or allowlisting.<br />\r\nIt will replace the current list if any.",
                "operationId": "PostCampaignDomainRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Description of the targeting rule to setup",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Campaign"
                ],
                "description": "Updates the targeted domains for a campaign by adding a list of domains to the current list.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "PutCampaignDomainRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to add to the existing list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Campaign"
                ],
                "description": "Removes some domains from the current list of targeted domains for a given campaign.<br />\r\nThe mode of targeting (allowlist/blocklist) cannot be updated through this method.",
                "operationId": "DeleteCampaignDomainRules",
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "description": "The campaign id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains the list of items to delete from the list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRequestOfTargetingEntity"
                            }
                        }
                    },
                    "x-bodyName": "apiRequest"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResponseOfTargetingEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ModifyAudienceResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactlistOperation"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Parameters to modify an audience"
            },
            "ErrorCodeResponse": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Definition of the error code"
            },
            "DeleteAudienceContactListResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/BasicAudienceDefinition"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Response of a contactlist deletion"
            },
            "ContactlistAmendmentRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactlistAmendment"
                    }
                },
                "description": "Request for a contactlist amendment"
            },
            "ContactlistWithAttributesAmendmentRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactlistWithAttributesAmendment"
                    }
                },
                "description": "Request for a contactlist amendment with user attributes",
                "example": {
                    "data": {
                        "type": "ContactlistWithUserAttributesAmendment",
                        "operation": "add",
                        "identifierType": "email",
                        "identifiers": [
                            {
                                "identifier": "example1@gmail.com",
                                "attributes": [
                                    {
                                        "key": "age",
                                        "value": "12"
                                    },
                                    {
                                        "key": "country",
                                        "value": "FR"
                                    },
                                    {
                                        "key": "size",
                                        "value": "S"
                                    }
                                ]
                            },
                            {
                                "identifier": "example2@gmail.com",
                                "attributes": [
                                    {
                                        "key": "age",
                                        "value": "43"
                                    },
                                    {
                                        "key": "preferredColor",
                                        "value": "yellow"
                                    }
                                ]
                            }
                        ],
                        "internalIdentifiers": false
                    }
                }
            },
            "ContactlistOperation": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type"
                    },
                    "attributes": {
                        "required": [
                            "operation"
                        ],
                        "type": "object",
                        "properties": {
                            "contactListId": {
                                "type": "string",
                                "description": "the affected user list id",
                                "format": "int32"
                            },
                            "operation": {
                                "type": "string",
                                "description": "The action recorded"
                            },
                            "requestDate": {
                                "type": "string",
                                "description": "When the action was recorded",
                                "format": "date-time"
                            },
                            "identifierType": {
                                "type": "string",
                                "description": "The schema specified for of the identifiers"
                            },
                            "nbValidIdentifiers": {
                                "type": "integer",
                                "description": "How many identifiers were valid for the specified schema"
                            },
                            "nbInvalidIdentifiers": {
                                "type": "integer",
                                "description": "How many identifiers were invalid for the specified schema"
                            },
                            "sampleInvalidIdentifiers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A sample of invalid identifiers if there is some"
                            }
                        },
                        "description": "the contactlist operation attributes"
                    }
                },
                "description": "Response definition of a contactlist operation"
            },
            "AudienceError": {
                "required": [
                    "code",
                    "instance",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error"
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
                    }
                },
                "description": "Definition of an audience error"
            },
            "AudienceWarning": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error"
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
                    }
                },
                "description": "Definition of the warning"
            },
            "BasicAudienceDefinition": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "the id of the entity type"
                    },
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceNameDescription"
                    }
                },
                "description": "Common definition of an audience"
            },
            "ContactlistAmendment": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "User List",
                        "example": "ContactlistAmendment"
                    },
                    "attributes": {
                        "required": [
                            "identifiers",
                            "operation"
                        ],
                        "type": "object",
                        "properties": {
                            "operation": {
                                "enum": [
                                    "add",
                                    "remove"
                                ],
                                "type": "string",
                                "description": "Operation to add or remove users"
                            },
                            "identifierType": {
                                "enum": [
                                    "email",
                                    "madid",
                                    "identityLink",
                                    "gum"
                                ],
                                "type": "string",
                                "description": "What type of identifiers are used"
                            },
                            "identifiers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "The users tos add or remove, each in the schema specified"
                            },
                            "gumCallerId": {
                                "type": "integer",
                                "description": "The Gum caller id of the advertiser patching identifiers of type Gum"
                            },
                            "internalIdentifiers": {
                                "type": "boolean",
                                "description": "The flag to indicate if identifiers are external or internal"
                            }
                        },
                        "description": "the name of the entity type"
                    }
                },
                "description": "Parameters for the amendment of a contactlist"
            },
            "ContactlistWithAttributesAmendment": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "ContactlistWithUserAttributesAmendment"
                    },
                    "attributes": {
                        "required": [
                            "identifiers",
                            "operation",
                            "identifierType"
                        ],
                        "type": "object",
                        "properties": {
                            "operation": {
                                "enum": [
                                    "add",
                                    "remove"
                                ],
                                "type": "string",
                                "description": "Whether to add or remove users"
                            },
                            "identifierType": {
                                "enum": [
                                    "email",
                                    "madid",
                                    "identityLink",
                                    "gum"
                                ],
                                "type": "string",
                                "description": "What type of identifiers are used",
                                "example": "email"
                            },
                            "identifiers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/UserDef"
                                },
                                "description": "The users to add or remove, each in the schema specified, defined with attributes"
                            },
                            "gumCallerId": {
                                "type": "object",
                                "description": "The Gum caller id of the advertiser patching identifiers of type Gum",
                                "readOnly": true
                            },
                            "internalIdentifiers": {
                                "type": "boolean",
                                "description": "The flag to indicate if identifiers are external or internal",
                                "readOnly": true
                            }
                        },
                        "description": "the name of the entity type"
                    }
                },
                "description": "Parameters for a contactlist amendment with user attributes"
            },
            "AudienceNameDescription": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name to designate the audience by"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the audience"
                    }
                },
                "description": "Description of an audience with name and detailed description"
            },
            "UserDef": {
                "required": [
                    "attributes",
                    "identifier"
                ],
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attribute"
                        }
                    }
                },
                "description": "User definition with an identifier (email, uid...) and attributes (key, value)"
            },
            "Attribute": {
                "required": [
                    "key",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "description": "User attribute definition under the form (key, value)"
            },
            "ApplicationSummaryModelResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ApplicationSummaryModelResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Response of ApplicationSummaryModel"
            },
            "ApplicationSummaryModelResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ApplicationSummaryModel"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "CommonProblem": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string",
                        "description": "The request correlation ID this problem comes from."
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "The problem's category."
                    },
                    "code": {
                        "type": "string",
                        "description": "A machine-readable  error code, expressed as a string value."
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI that identifies the specific occurrence of the problem."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short human-readable description of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "string"
                    }
                },
                "description": "Common problem object. Can be specialized as needed."
            },
            "ApplicationSummaryModel": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    },
                    "criteoService": {
                        "type": "string"
                    }
                },
                "description": "Model of ApplicationSummary"
            },
            "AudienceEntityV1AudienceSearchMetadataV1ListResponse": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/AudienceSearchMetadataV1"
                    },
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceIdEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceIdEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSizeEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSizeEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSizeEstimationV1Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceSizeEstimationV1Resource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AudienceSegmentEntityV1AudienceSegmentSearchMetadataV1ListResponse": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#/components/schemas/AudienceSegmentSearchMetadataV1"
                    },
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSegmentEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSegmentIdEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentIdEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSegmentSizeEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "AudienceSegmentSizeEstimationV1Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1Resource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "CommerceAudienceSegmentInterestEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommerceAudienceSegmentInterestEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "CommerceAudienceSegmentBrandEntityV1ListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommerceAudienceSegmentBrandEntityV1Resource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "ContactListStatisticsEntityV1Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactListStatisticsEntityV1Resource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body"
            },
            "AdSetAudienceLinkEntityV1Response": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body"
            },
            "AudienceSearchInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceSearchEntityV1Resource"
                    }
                },
                "description": "Audience search parameter"
            },
            "AudienceBulkCreateInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceCreateEntityV1Resource"
                        }
                    }
                },
                "description": "Input to create one or more audiences."
            },
            "AudienceBulkUpdateInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceUpdateEntityV1Resource"
                        }
                    }
                },
                "description": "Input to update one or more audiences."
            },
            "AudienceBulkDeleteInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceDeleteEntityV1Resource"
                        }
                    }
                },
                "description": "Input to delete one or more segments."
            },
            "AudienceComputeSizesInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceComputeSizeEntityV1Resource"
                        }
                    }
                },
                "description": "Input to retrieve the size of one or more audiences."
            },
            "AudienceEstimateSizeInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1Resource"
                    }
                },
                "description": "Input to estimate the size of an audience."
            },
            "AudienceSegmentSearchInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1Resource"
                    }
                },
                "description": "Audience segment search parameter"
            },
            "AudienceSegmentBulkCreateInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1Resource"
                        }
                    }
                },
                "description": "Input to create one or more audience segments."
            },
            "AudienceSegmentBulkUpdateInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1Resource"
                        }
                    }
                },
                "description": "Input to update one or more segments."
            },
            "AudienceSegmentBulkDeleteInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1Resource"
                        }
                    }
                },
                "description": "Input to delete one or more segments."
            },
            "AudienceSegmentComputeSizesInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1Resource"
                        }
                    }
                },
                "description": "Input to retrieve the size of one or more segments."
            },
            "AudienceSegmentEstimateSizeInputV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1Resource"
                    }
                },
                "description": "Input to estimate the size of an audience segment."
            },
            "AdSetAudienceLinkInputEntityV1": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1Resource"
                    }
                },
                "description": "Input to set audience ad set link."
            },
            "AudienceSearchMetadataV1": {
                "type": "object",
                "properties": {
                    "totalItems": {
                        "type": "integer",
                        "description": "Total number of items",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Max item of the current page",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Number of item to skip",
                        "format": "int32"
                    }
                },
                "description": "Metadata for the audience search response."
            },
            "AudienceEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceIdEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceIdEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSizeEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSizeEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSizeEstimationV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSizeEstimationV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceSegmentSearchMetadataV1": {
                "type": "object",
                "properties": {
                    "totalItems": {
                        "type": "integer",
                        "description": "Total number of items",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "description": "Max item of the current page",
                        "format": "int32"
                    },
                    "offset": {
                        "type": "integer",
                        "description": "Number of item to skip",
                        "format": "int32"
                    }
                },
                "description": "Metadata for the audience segment search response."
            },
            "AudienceSegmentEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentIdEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentIdEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentSizeEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentSizeEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentSizeEstimationV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentSizeEstimationV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "CommerceAudienceSegmentInterestEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CommerceAudienceSegmentInterestEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "CommerceAudienceSegmentBrandEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CommerceAudienceSegmentBrandEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "ContactListStatisticsEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/ContactListStatisticsEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AdSetAudienceLinkEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetAudienceLinkEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSearchEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSearchEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceCreateEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceCreateEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceUpdateEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceUpdateEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceDeleteEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceDeleteEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceComputeSizeEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceComputeSizeEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceEstimateSizeEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceEstimateSizeEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceSegmentSearchEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentSearchEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceSegmentCreateEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentCreateEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceSegmentUpdateEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentUpdateEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentDeleteEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentDeleteEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentComputeSizeEntityV1Resource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentComputeSizeEntityV1"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "AudienceSegmentSizeEstimationEntityV1Resource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceSegmentSizeEstimationEntityV1"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AudienceEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the audience"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the audience"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
                        "format": "date-time"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the audience"
                    },
                    "adSetIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ad sets associated to the audience"
                    },
                    "algebra": {
                        "$ref": "#/components/schemas/AlgebraNodeV1"
                    }
                },
                "description": "Audience of people of interest for a marketer.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "Audience",
                    "version": "v1"
                }
            },
            "AudienceIdEntityV1": {
                "type": "object",
                "description": "Audience entity only with its ID",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "Audience",
                    "version": "v1"
                }
            },
            "AudienceSizeEntityV1": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "Audience entity only with its size",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSize",
                    "version": "v1"
                }
            },
            "AudienceSizeEstimationV1": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "Audience size estimation"
            },
            "AudienceSegmentEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the segment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the segment"
                    },
                    "type": {
                        "enum": [
                            "Unknown",
                            "Commerce",
                            "Similar",
                            "ContactList",
                            "Location",
                            "Prebuilt",
                            "Retargeting"
                        ],
                        "type": "string",
                        "description": "Type of segment (read-only)"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
                        "format": "date-time"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the segment"
                    },
                    "commerce": {
                        "$ref": "#/components/schemas/CommerceV1"
                    },
                    "similar": {
                        "$ref": "#/components/schemas/SimilarV1"
                    },
                    "contactList": {
                        "$ref": "#/components/schemas/ContactListV1"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationV1"
                    },
                    "prebuilt": {
                        "$ref": "#/components/schemas/PrebuiltV1"
                    },
                    "retargeting": {
                        "$ref": "#/components/schemas/RetargetingV1"
                    }
                },
                "description": "Set of rules that defines specific people to target.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegment",
                    "version": "v1"
                }
            },
            "AudienceSegmentIdEntityV1": {
                "type": "object",
                "description": "Audience Segment entity only with its ID",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegment",
                    "version": "v1"
                }
            },
            "AudienceSegmentSizeEntityV1": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "Set of rules that defines specific people to target.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegmentSize",
                    "version": "v1"
                }
            },
            "AudienceSegmentSizeEstimationV1": {
                "type": "object",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "description": "Segment size estimation"
            },
            "CommerceAudienceSegmentInterestEntityV1": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "description": "Id of the parent commerce segment interest"
                    }
                },
                "description": "Commerce segment interest entity",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "CommerceAudienceSegmentInterest",
                    "version": "v1"
                }
            },
            "CommerceAudienceSegmentBrandEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the commerce segment brand"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the commerce segment brand",
                        "format": "int32"
                    }
                },
                "description": "Commerce segment brand entity",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "CommerceAudienceSegmentBrand",
                    "version": "v1"
                }
            },
            "ContactListStatisticsEntityV1": {
                "type": "object",
                "properties": {
                    "numberOfIdentifiers": {
                        "type": "integer",
                        "description": "Number of identifiers in the contact list.",
                        "format": "int32"
                    },
                    "numberOfMatches": {
                        "type": "integer",
                        "description": "Number of matched identifiers in the contact list.",
                        "format": "int32"
                    },
                    "matchRate": {
                        "type": "number",
                        "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
                        "format": "double"
                    }
                },
                "description": "Contact list statistics.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "ContactListStatistics",
                    "version": "v1"
                }
            },
            "AdSetAudienceLinkEntityV1": {
                "type": "object",
                "properties": {
                    "audienceId": {
                        "type": "string"
                    }
                },
                "description": "Link Audience with an ad set",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AdSetAudience",
                    "version": "v1"
                }
            },
            "AudienceSearchEntityV1": {
                "type": "object",
                "properties": {
                    "audienceIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of audience ids"
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of advertiser ids"
                    },
                    "audienceSegmentIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of segment ids (linked to the result audiences)"
                    },
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of AdSet ids"
                    }
                },
                "description": "Available filters to perform a search on segments. If present, the filters are AND'ed together when applied."
            },
            "AudienceCreateEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the audience"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the audience"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the audience"
                    },
                    "algebra": {
                        "$ref": "#/components/schemas/AlgebraNodeV1"
                    }
                },
                "description": "Audience of people of interest for a marketer."
            },
            "AudienceUpdateEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the audience"
                    },
                    "description": {
                        "$ref": "#/components/schemas/NillableString"
                    },
                    "algebra": {
                        "$ref": "#/components/schemas/AlgebraNodeV1"
                    }
                },
                "description": "Audience of people of interest for a marketer.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "Audience",
                    "version": "v1"
                }
            },
            "AudienceDeleteEntityV1": {
                "type": "object",
                "description": "Audience of people of interest for a marketer.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "Audience",
                    "version": "v1"
                }
            },
            "AudienceComputeSizeEntityV1": {
                "type": "object",
                "description": "Audience of people of interest for a marketer.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "Audience",
                    "version": "v1"
                }
            },
            "AudienceEstimateSizeEntityV1": {
                "type": "object",
                "properties": {
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the audience"
                    },
                    "algebra": {
                        "$ref": "#/components/schemas/AlgebraNodeV1"
                    }
                },
                "description": "Audience of people of interest for a marketer."
            },
            "AudienceSegmentSearchEntityV1": {
                "type": "object",
                "properties": {
                    "audienceSegmentIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of segment ids"
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of advertiser ids"
                    },
                    "audienceSegmentTypes": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Unknown",
                                "Commerce",
                                "Similar",
                                "ContactList",
                                "Location",
                                "Prebuilt",
                                "Retargeting"
                            ],
                            "type": "string"
                        },
                        "description": "List of segment types"
                    }
                },
                "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied."
            },
            "AudienceSegmentCreateEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the segment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the segment"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the segment"
                    },
                    "commerce": {
                        "$ref": "#/components/schemas/CommerceCreateV1"
                    },
                    "similar": {
                        "$ref": "#/components/schemas/SimilarCreateV1"
                    },
                    "contactList": {
                        "$ref": "#/components/schemas/ContactListCreateV1"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationCreateV1"
                    },
                    "retargeting": {
                        "$ref": "#/components/schemas/RetargetingCreateV1"
                    }
                },
                "description": "Set of rules that defines specific people to target."
            },
            "AudienceSegmentUpdateEntityV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "$ref": "#/components/schemas/NillableString"
                    },
                    "commerce": {
                        "$ref": "#/components/schemas/CommerceUpdateV1"
                    },
                    "contactList": {
                        "$ref": "#/components/schemas/ContactListUpdateV1"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationUpdateV1"
                    },
                    "retargeting": {
                        "$ref": "#/components/schemas/RetargetingUpdateV1"
                    }
                },
                "description": "Set of rules that defines specific people to target.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegment",
                    "version": "v1"
                }
            },
            "AudienceSegmentDeleteEntityV1": {
                "type": "object",
                "description": "Segment to delete",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegment",
                    "version": "v1"
                }
            },
            "AudienceSegmentComputeSizeEntityV1": {
                "type": "object",
                "description": "Set of rules that defines specific people to target.",
                "x-criteo-canonical": {
                    "infoType": "entity",
                    "name": "AudienceSegment",
                    "version": "v1"
                }
            },
            "AudienceSegmentSizeEstimationEntityV1": {
                "type": "object",
                "properties": {
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser associated to the segment"
                    },
                    "commerce": {
                        "$ref": "#/components/schemas/CommerceSizeEstimationV1"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationSizeEstimationV1"
                    }
                },
                "description": "Set of rules that defines specific people to target."
            },
            "AlgebraNodeV1": {
                "type": "object",
                "properties": {
                    "and": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlgebraNodeV1"
                        }
                    },
                    "or": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlgebraNodeV1"
                        }
                    },
                    "not": {
                        "$ref": "#/components/schemas/AlgebraNodeV1"
                    },
                    "audienceSegmentId": {
                        "type": "string"
                    }
                },
                "description": "Node in the audience algebra definition."
            },
            "CommerceV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "Reach people of a specific country"
                    },
                    "buyingPower": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Unknown",
                                "Low",
                                "Medium",
                                "High",
                                "VeryHigh"
                            ],
                            "type": "string"
                        },
                        "description": "Reach people who frequently purchase high price range items to lower price range items"
                    },
                    "gender": {
                        "enum": [
                            "Unknown",
                            "Male",
                            "Female"
                        ],
                        "type": "string",
                        "description": "Reach people who’ve shown interest in products made for a specific gender"
                    },
                    "interestIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Reach new people based on their interests"
                    },
                    "brandIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Choose the brands your segment might be interested in"
                    },
                    "priceRange": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Unknown",
                                "Low",
                                "Medium",
                                "High"
                            ],
                            "type": "string"
                        },
                        "description": "Reach people who’ve shown interest in products within a specific price range"
                    }
                },
                "description": "Settings to target users based on high shopping intents and demographics."
            },
            "SimilarV1": {
                "type": "object",
                "description": "Settings to target similar users to website visitors."
            },
            "ContactListV1": {
                "type": "object",
                "properties": {
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Is the segment read-only"
                    }
                },
                "description": "Settings to target users with your contact lists."
            },
            "LocationV1": {
                "type": "object",
                "properties": {
                    "pointsOfInterest": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PointOfInterestV1"
                        },
                        "description": "Reach users which have been historically located in the given coordinates"
                    },
                    "radiusInKm": {
                        "type": "integer",
                        "description": "The expected maximum distance in kilometers between a user and a point of interest",
                        "format": "int32"
                    },
                    "registryType": {
                        "enum": [
                            "Unknown",
                            "Catalog",
                            "Store",
                            "PointOfInterest",
                            "GeoDivision"
                        ],
                        "type": "string",
                        "description": "The kind of Location audience"
                    }
                },
                "description": "Settings to target users based on their location."
            },
            "PrebuiltV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "The users' country"
                    }
                },
                "description": "Settings of a prebuilt set of users provided by Criteo."
            },
            "RetargetingV1": {
                "type": "object",
                "properties": {
                    "visitorsType": {
                        "enum": [
                            "Unknown",
                            "All",
                            "Buyers",
                            "NonBuyers"
                        ],
                        "type": "string"
                    },
                    "daysSinceLastVisitMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysSinceLastVisitMax": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Settings to target users based on its type and days since last visit."
            },
            "NillableString": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The string's value. If missing or null the string's value is set to \"null\""
                    }
                },
                "description": "Placeholder object for string value  for which \"null\" is a valid business value"
            },
            "CommerceCreateV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "buyingPower": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High",
                                "VeryHigh"
                            ],
                            "type": "string"
                        }
                    },
                    "gender": {
                        "enum": [
                            "Male",
                            "Female"
                        ],
                        "type": "string"
                    },
                    "interestIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "brandIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceRange": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High"
                            ],
                            "type": "string"
                        }
                    }
                },
                "description": "Settings to target users based on high shopping intents and demographics."
            },
            "SimilarCreateV1": {
                "type": "object",
                "description": "Settings to target similar users to website visitors."
            },
            "ContactListCreateV1": {
                "type": "object",
                "description": "Settings to target users with your contact lists."
            },
            "LocationCreateV1": {
                "type": "object",
                "properties": {
                    "registryType": {
                        "enum": [
                            "Catalog",
                            "Store",
                            "PointOfInterest",
                            "GeoDivision"
                        ],
                        "type": "string"
                    },
                    "pointsOfInterest": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PointOfInterestV1"
                        }
                    },
                    "geoDivisions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeoDivisionV1"
                        }
                    },
                    "radiusInKm": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Settings to target users based on their location."
            },
            "RetargetingCreateV1": {
                "type": "object",
                "properties": {
                    "visitorsType": {
                        "enum": [
                            "All",
                            "Buyers",
                            "NonBuyers"
                        ],
                        "type": "string"
                    },
                    "daysSinceLastVisitMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysSinceLastVisitMax": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Settings to target users based on its type and days since last visit."
            },
            "CommerceUpdateV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "buyingPower": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High",
                                "VeryHigh"
                            ],
                            "type": "string"
                        }
                    },
                    "gender": {
                        "$ref": "#/components/schemas/NillableGenderV1"
                    },
                    "interestIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "brandIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceRange": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High"
                            ],
                            "type": "string"
                        }
                    }
                },
                "description": "Settings to target users based on high shopping intents and demographics."
            },
            "ContactListUpdateV1": {
                "type": "object",
                "description": "Settings to target users with your contact lists."
            },
            "LocationUpdateV1": {
                "type": "object",
                "properties": {
                    "pointsOfInterest": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PointOfInterestV1"
                        }
                    },
                    "geoDivisions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GeoDivisionV1"
                        }
                    },
                    "radiusInKm": {
                        "type": "integer",
                        "description": "Radius in kilometers",
                        "format": "int32"
                    },
                    "registryType": {
                        "enum": [
                            "Catalog",
                            "Store",
                            "PointOfInterest",
                            "GeoDivision"
                        ],
                        "type": "string"
                    }
                },
                "description": "Settings to target users based on their location."
            },
            "RetargetingUpdateV1": {
                "type": "object",
                "properties": {
                    "visitorsType": {
                        "enum": [
                            "All",
                            "Buyers",
                            "NonBuyers"
                        ],
                        "type": "string"
                    },
                    "daysSinceLastVisitMin": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "daysSinceLastVisitMax": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Settings to target users based on its type and days since last visit."
            },
            "CommerceSizeEstimationV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "buyingPower": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High",
                                "VeryHigh"
                            ],
                            "type": "string"
                        }
                    },
                    "gender": {
                        "enum": [
                            "Male",
                            "Female"
                        ],
                        "type": "string"
                    },
                    "interestIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "brandIds": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priceRange": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Low",
                                "Medium",
                                "High"
                            ],
                            "type": "string"
                        }
                    }
                },
                "description": "Settings to target users based on high shopping intents and demographics."
            },
            "LocationSizeEstimationV1": {
                "type": "object",
                "properties": {
                    "registryType": {
                        "enum": [
                            "Store",
                            "PointOfInterest"
                        ],
                        "type": "string"
                    },
                    "pointsOfInterest": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PointOfInterestV1"
                        }
                    },
                    "radiusInKm": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Settings to define your audience based on their location."
            },
            "PointOfInterestV1": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the point of interest"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "ISO-6709 latitude",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "ISO-6709 longitude",
                        "format": "double"
                    }
                },
                "description": "Named coordinate defined by its latitude and longitude."
            },
            "GeoDivisionV1": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string",
                        "description": "Country code (iso alpha-2)"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "ZipCode in the country"
                    },
                    "cityGeoNameId": {
                        "type": "string",
                        "description": "City id defined by GeoName api"
                    },
                    "subdivisionCode": {
                        "type": "string",
                        "description": "Subdivision iso code"
                    }
                },
                "description": "Geo area defined by country/zipcode/city/subdivision."
            },
            "NillableGenderV1": {
                "type": "object",
                "properties": {
                    "value": {
                        "enum": [
                            "Unknown",
                            "Male",
                            "Female"
                        ],
                        "type": "string",
                        "description": "The value. If missing or null the value is set to \"null\""
                    }
                },
                "description": "Placeholder object for value for which \"null\" is a valid business value"
            },
            "ResponseReadAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReadModelReadAdSet"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "ResponsesReadAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadModelReadAdSet"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "ResponseAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReadModelAdSetId"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "ResponsesAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadModelAdSetId"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "AdSetDisplayMultiplierListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdSetDisplayMultiplierResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "PatchAdSetDisplayMultiplierResultListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "AdSetCategoryBidListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdSetCategoryBidResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "PatchAdSetCategoryBidResultListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetCategoryBidResultResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "CampaignResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CampaignReadResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "CampaignListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CampaignReadResource"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "PatchResultCampaignListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchResultCampaignReadResource"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "RequestAdSetSearch": {
                "type": "object",
                "properties": {
                    "filters": {
                        "$ref": "#/components/schemas/AdSetSearchFilter"
                    }
                },
                "description": "request payload of the search endpoint"
            },
            "RequestsPatchAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WriteModelPatchAdSet"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "CreateAdSetRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreateAdSetResource"
                    }
                },
                "description": "Data model for an input resources"
            },
            "RequestsAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WriteModelAdSetId"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "PatchAdSetDisplayMultiplierListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResource"
                        }
                    }
                },
                "description": "Data model for a list of input resources"
            },
            "PatchAdSetCategoryBidListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetCategoryBidResource"
                        }
                    }
                },
                "description": "Data model for a list of input resources"
            },
            "CampaignSearchRequest": {
                "type": "object",
                "properties": {
                    "filters": {
                        "$ref": "#/components/schemas/CampaignSearchFilters"
                    }
                },
                "description": "request payload of the search endpoint"
            },
            "CreateCampaignRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreateCampaignResource"
                    }
                },
                "description": "Data model for an input resources"
            },
            "PatchCampaignListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchCampaignWriteResource"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "ReadModelReadAdSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "ReadAdSet"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ReadAdSet"
                    }
                },
                "description": "read model data for resources"
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "stackTrace": {
                        "type": "string"
                    }
                },
                "description": "Data model for common error or warning"
            },
            "ReadModelAdSetId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AdSetId"
                    }
                },
                "description": "read model data for resources"
            },
            "AdSetDisplayMultiplierResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetDisplayMultiplier"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetDisplayMultiplierResultResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "AdSetCategoryBidResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetCategoryBid"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetCategoryBidResultResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CampaignReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Campaign"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Campaign"
                    }
                },
                "description": "read model data for resources"
            },
            "PatchResultCampaignReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Campaign"
                    }
                },
                "description": "read model data for resources"
            },
            "AdSetSearchFilter": {
                "type": "object",
                "properties": {
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "filter on ad set ids"
            },
            "WriteModelPatchAdSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "PatchAdSet"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSet"
                    }
                },
                "description": "write model data for resources"
            },
            "CreateAdSetResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CreateAdSet"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSet"
                    }
                },
                "description": "Data model for a Resource"
            },
            "WriteModelAdSetId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetId"
                    }
                },
                "description": "write model data for resources"
            },
            "PatchAdSetDisplayMultiplierResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSetDisplayMultiplier"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetCategoryBidResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSetCategoryBid"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CampaignSearchFilters": {
                "type": "object",
                "properties": {
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Campaign ids to filter on"
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Advertiser ids to which campaigns are linked to"
                    }
                },
                "description": "filters on campaign"
            },
            "CreateCampaignResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CreateCampaign"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "Campaign"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchCampaignWriteResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "Campaign"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PatchCampaign"
                    }
                },
                "description": "write model data for resources"
            },
            "ReadAdSet": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ad set"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser id of the campaign this ad set belongs to"
                    },
                    "datasetId": {
                        "type": "string",
                        "description": "Dataset id of this ad set"
                    },
                    "campaignId": {
                        "type": "string",
                        "description": "Campaign id this ad set belongs to"
                    },
                    "destinationEnvironment": {
                        "enum": [
                            "undefined",
                            "web",
                            "app"
                        ],
                        "type": "string",
                        "description": "The environment that an ad click will lead a user to"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/ReadAdSetSchedule"
                    },
                    "bidding": {
                        "$ref": "#/components/schemas/ReadAdSetBidding"
                    },
                    "targeting": {
                        "$ref": "#/components/schemas/AdSetTargeting"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/ReadAdSetBudget"
                    },
                    "mediaType": {
                        "enum": [
                            "display",
                            "video"
                        ],
                        "type": "string",
                        "description": "Media type for the ad set"
                    }
                },
                "description": "ad set read model"
            },
            "AdSetDisplayMultiplier": {
                "type": "object",
                "properties": {
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the Category to which the given for which the Display Multiplier has been applied."
                    },
                    "displayMultiplier": {
                        "type": "number",
                        "description": "The Display Multiplier applied to the given Category associated to an Ad Set.",
                        "format": "double"
                    }
                },
                "description": "Display Multiplier information about a Category for a given Ad Set."
            },
            "AdSetCategoryBid": {
                "type": "object",
                "properties": {
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the Category to which the Category Bid has been applied."
                    },
                    "bidAmount": {
                        "type": "number",
                        "description": "The Bid amount applied to the given Category associated to an Ad Set.",
                        "format": "double"
                    }
                },
                "description": "Category Bid information about a Category for a given Ad Set."
            },
            "Campaign": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the campaign"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser id of the campaign"
                    },
                    "objective": {
                        "type": "string",
                        "description": "Campaign's marketing objective"
                    },
                    "spendLimit": {
                        "$ref": "#/components/schemas/CampaignSpendLimit"
                    }
                },
                "description": "campaign read model"
            },
            "PatchAdSet": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ad set"
                    },
                    "scheduling": {
                        "$ref": "#/components/schemas/PatchAdSetScheduling"
                    },
                    "bidding": {
                        "$ref": "#/components/schemas/PatchAdSetBidding"
                    },
                    "targeting": {
                        "$ref": "#/components/schemas/AdSetTargeting"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/PatchAdSetBudget"
                    }
                },
                "description": "ad set patch model"
            },
            "CreateAdSet": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ad set"
                    },
                    "datasetId": {
                        "type": "string",
                        "description": "Dataset id of this ad set"
                    },
                    "campaignId": {
                        "type": "string",
                        "description": "Campaign id this ad set belongs to"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/CreateAdSetSchedule"
                    },
                    "bidding": {
                        "$ref": "#/components/schemas/CreateAdSetBidding"
                    },
                    "targeting": {
                        "$ref": "#/components/schemas/CreateAdSetTargeting"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/CreateAdSetBudget"
                    },
                    "trackingCode": {
                        "type": "string",
                        "description": "The click tracking code associated to this Ad Set."
                    },
                    "mediaType": {
                        "enum": [
                            "display",
                            "video"
                        ],
                        "type": "string",
                        "description": "Media type for the ad set"
                    }
                },
                "description": "ad set create model"
            },
            "PatchAdSetDisplayMultiplier": {
                "type": "object",
                "properties": {
                    "displayMultiplier": {
                        "type": "number",
                        "description": "Any positive decimal value. To remove the impact of the Display Multiplier set it to 1. At most 4 decimals are supported. Additional decimals are rounded.",
                        "format": "double"
                    }
                },
                "description": "Display Multiplier to update for a given combination of Ad Set and Category."
            },
            "PatchAdSetCategoryBid": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "type": "number",
                        "description": "positive decimal value match bid constraints. At most 4 decimals are supported. Additional decimals are rounded.",
                        "format": "double"
                    }
                },
                "description": "Category Bid to update for a given combination of Ad Set and Category."
            },
            "CreateCampaign": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the campaign"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser id this campaign belongs to"
                    },
                    "objective": {
                        "type": "string",
                        "description": "Campaign's marketing objective"
                    },
                    "goal": {
                        "enum": [
                            "Unspecified",
                            "Acquisition",
                            "Retention"
                        ],
                        "type": "string",
                        "description": "Goal for the marketing campaign"
                    },
                    "spendLimit": {
                        "$ref": "#/components/schemas/CreateCampaignSpendLimit"
                    }
                },
                "description": "Campaign create model"
            },
            "PatchCampaign": {
                "type": "object",
                "properties": {
                    "spendLimit": {
                        "$ref": "#/components/schemas/PatchCampaignSpendLimit"
                    }
                },
                "description": "campaign patch model"
            },
            "ReadAdSetSchedule": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "activationStatus": {
                        "enum": [
                            "on",
                            "off"
                        ],
                        "type": "string",
                        "description": "Activation status of the ad set, i.e. whether the consumer wants it to deliver"
                    },
                    "deliveryStatus": {
                        "enum": [
                            "draft",
                            "inactive",
                            "live",
                            "notLive",
                            "pausing",
                            "paused",
                            "scheduled",
                            "ended",
                            "notDelivering",
                            "archived"
                        ],
                        "type": "string",
                        "description": "Delivery status of the delivery of the ad set, i.e. whether the ad set is delivering"
                    }
                },
                "description": "ad set schedule read model"
            },
            "ReadAdSetBidding": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    },
                    "bidStrategy": {
                        "enum": [
                            "actions",
                            "clicks",
                            "conversions",
                            "displays",
                            "installs",
                            "revenue",
                            "storeConversions",
                            "value",
                            "viewedImpressions",
                            "Visits",
                            "completedVideoViews"
                        ],
                        "type": "string",
                        "description": "The intended optimization for the Ad Set"
                    },
                    "costController": {
                        "enum": [
                            "COS",
                            "CPC",
                            "CPI",
                            "CPM",
                            "CPO",
                            "CPSV",
                            "CPV",
                            "dailyBudget"
                        ],
                        "type": "string",
                        "description": "How is spend controlled"
                    }
                },
                "description": "ad set bidding read model"
            },
            "AdSetTargeting": {
                "type": "object",
                "properties": {
                    "deliveryLimitations": {
                        "$ref": "#/components/schemas/AdSetDeliveryLimitations"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/AdSetGeoLocation"
                    },
                    "frequencyCapping": {
                        "$ref": "#/components/schemas/AdSetFrequencyCapping"
                    }
                },
                "description": "ad set targeting model"
            },
            "ReadAdSetBudget": {
                "type": "object",
                "properties": {
                    "budgetStrategy": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your budget is capped or not"
                    },
                    "budgetRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the budget renewal"
                    },
                    "budgetDeliverySmoothing": {
                        "enum": [
                            "accelerated",
                            "standard"
                        ],
                        "type": "string",
                        "description": "The pace at which the budget can be spent"
                    },
                    "budgetDeliveryWeek": {
                        "enum": [
                            "undefined",
                            "mondayToSunday",
                            "tuesdayToMonday",
                            "wednesdayToTuesday",
                            "thursdayToWednesday",
                            "fridayToThursday",
                            "saturdayToFriday",
                            "sundayToSaturday"
                        ],
                        "type": "string",
                        "description": "The delivery week for the budget"
                    },
                    "budgetAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set budget read model"
            },
            "CampaignSpendLimit": {
                "type": "object",
                "properties": {
                    "spendLimitType": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your spend limit is capped or not"
                    },
                    "spendLimitRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the spend limit renewal"
                    },
                    "spendLimitAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "campaign spend limit model"
            },
            "PatchAdSetScheduling": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    }
                },
                "description": "ad set schedule patch model"
            },
            "PatchAdSetBidding": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set bidding patch model"
            },
            "PatchAdSetBudget": {
                "type": "object",
                "properties": {
                    "budgetStrategy": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your budget is capped or not"
                    },
                    "budgetRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the budget renewal"
                    },
                    "budgetDeliverySmoothing": {
                        "enum": [
                            "accelerated",
                            "standard"
                        ],
                        "type": "string",
                        "description": "The pace at which the budget can be spent"
                    },
                    "budgetDeliveryWeek": {
                        "enum": [
                            "undefined",
                            "mondayToSunday",
                            "tuesdayToMonday",
                            "wednesdayToTuesday",
                            "thursdayToWednesday",
                            "fridayToThursday",
                            "saturdayToFriday",
                            "sundayToSaturday"
                        ],
                        "type": "string",
                        "description": "The delivery week for the budget"
                    },
                    "budgetAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set budget patch model"
            },
            "CreateAdSetSchedule": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "ad set schedule create model"
            },
            "CreateAdSetBidding": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "type": "number",
                        "description": "Decimal value target relating to the `bidStrategy` specified. May be `null` for strategies that do not require a target value. At most 4 decimals are supported. Additional decimals are rounded.",
                        "format": "double"
                    },
                    "bidStrategy": {
                        "enum": [
                            "actions",
                            "clicks",
                            "conversions",
                            "displays",
                            "installs",
                            "revenue",
                            "storeConversions",
                            "value",
                            "viewedImpressions",
                            "Visits",
                            "completedVideoViews"
                        ],
                        "type": "string"
                    },
                    "costController": {
                        "enum": [
                            "COS",
                            "CPC",
                            "CPI",
                            "CPM",
                            "CPO",
                            "CPSV",
                            "CPV",
                            "dailyBudget"
                        ],
                        "type": "string"
                    }
                },
                "description": "ad set bidding create model"
            },
            "CreateAdSetTargeting": {
                "type": "object",
                "properties": {
                    "deliveryLimitations": {
                        "$ref": "#/components/schemas/AdSetDeliveryLimitations"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/CreateAdSetGeoLocation"
                    },
                    "frequencyCapping": {
                        "$ref": "#/components/schemas/AdSetFrequencyCapping"
                    }
                },
                "description": "Targeting configuration of the ad set"
            },
            "CreateAdSetBudget": {
                "type": "object",
                "properties": {
                    "budgetStrategy": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string"
                    },
                    "budgetRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string"
                    },
                    "budgetDeliverySmoothing": {
                        "enum": [
                            "accelerated",
                            "standard"
                        ],
                        "type": "string"
                    },
                    "budgetDeliveryWeek": {
                        "enum": [
                            "undefined",
                            "mondayToSunday",
                            "tuesdayToMonday",
                            "wednesdayToTuesday",
                            "thursdayToWednesday",
                            "fridayToThursday",
                            "saturdayToFriday",
                            "sundayToSaturday"
                        ],
                        "type": "string"
                    },
                    "budgetAmount": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "description": "ad set budget create model"
            },
            "CreateCampaignSpendLimit": {
                "type": "object",
                "properties": {
                    "spendLimitType": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your spend limit is capped or not"
                    },
                    "spendLimitRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the spend limit renewal"
                    },
                    "spendLimitAmount": {
                        "type": "number",
                        "description": "The amount of the spend limit. null if spendLimitType is uncapped.",
                        "format": "double"
                    }
                },
                "description": "campaign spend limit create model"
            },
            "PatchCampaignSpendLimit": {
                "type": "object",
                "properties": {
                    "spendLimitType": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your spend limit is capped or not"
                    },
                    "spendLimitRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the spend limit renewal"
                    },
                    "spendLimitAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "campaign spend limit model"
            },
            "NillableDateTime": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "NillableDecimal": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "AdSetDeliveryLimitations": {
                "type": "object",
                "properties": {
                    "environments": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "web",
                                "inApp"
                            ],
                            "type": "string"
                        },
                        "description": "List of environments which the ad set should target"
                    },
                    "devices": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "other",
                                "desktop",
                                "mobile",
                                "tablet"
                            ],
                            "type": "string"
                        },
                        "description": "List of devices which the ad set should target"
                    },
                    "operatingSystems": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "android",
                                "ios",
                                "unknown"
                            ],
                            "type": "string"
                        },
                        "description": "List of operating systems which the ad set should target"
                    }
                },
                "description": "ad set delivery limitations model"
            },
            "AdSetGeoLocation": {
                "type": "object",
                "properties": {
                    "countries": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    },
                    "subdivisions": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    },
                    "zipCodes": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    }
                },
                "description": "ad set geolocation model"
            },
            "AdSetFrequencyCapping": {
                "type": "object",
                "properties": {
                    "frequency": {
                        "enum": [
                            "hourly",
                            "daily",
                            "lifetime",
                            "advanced"
                        ],
                        "type": "string",
                        "description": "Period on which impression limitation is calculated"
                    },
                    "maximumImpressions": {
                        "type": "integer",
                        "description": "Maximum impressions for the specified period",
                        "format": "int32"
                    }
                },
                "description": "ad set frequency capping model"
            },
            "CreateAdSetGeoLocation": {
                "type": "object",
                "properties": {
                    "countries": {
                        "$ref": "#/components/schemas/AdSetTargetingRule"
                    },
                    "subdivisions": {
                        "$ref": "#/components/schemas/AdSetTargetingRule"
                    },
                    "zipCodes": {
                        "$ref": "#/components/schemas/AdSetTargetingRule"
                    }
                },
                "description": "Geolocation configuration of the ad set"
            },
            "NillableAdSetTargetingRule": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdSetTargetingRule"
                            }
                        ],
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "AdSetTargetingRule": {
                "type": "object",
                "properties": {
                    "operand": {
                        "enum": [
                            "undefined",
                            "in",
                            "notIn"
                        ],
                        "type": "string",
                        "description": "Operand which states how the values should be applied"
                    },
                    "values": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values to apply"
                    }
                },
                "description": "ad set targeting rule model"
            },
            "CreativeListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreativeResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "CreativeResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreativeResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for response resource"
            },
            "AdListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "AdResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for response resource"
            },
            "CouponListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CouponResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "CouponResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CouponResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for response resource"
            },
            "CouponSupportedSizesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CouponSupportedSizesResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for response resource"
            },
            "CreativeWriteRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreativeWriteResource"
                    }
                },
                "description": "Data model for input resource"
            },
            "AdWriteRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdWriteResource"
                    }
                },
                "description": "Data model for input resource"
            },
            "CreateCouponRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CreateCouponResource"
                    }
                },
                "description": "Data model for input resource"
            },
            "UpdateCouponRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/UpdateCouponResource"
                    }
                },
                "description": "Data model for input resource"
            },
            "CreativeResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/Creative"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "AdResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/Ad"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CouponResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/Coupon"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CouponSupportedSizesResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CouponSupportedSizes"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CreativeWriteResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CreativeWrite"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "AdWriteResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdWrite"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "CreateCouponResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/CreateCoupon"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "UpdateCouponResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/UpdateCoupon"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Data model for a Resource"
            },
            "Creative": {
                "required": [
                    "name",
                    "author",
                    "status",
                    "advertiserId"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the creative"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the creative"
                    },
                    "author": {
                        "type": "string",
                        "description": "The login of the person who created this creative ("
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the creative"
                    },
                    "format": {
                        "type": "string",
                        "description": "The format of the creative"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser linked to the Creative"
                    },
                    "datasetId": {
                        "type": "string",
                        "description": "Data set id linked to the Creative"
                    },
                    "imageAttributes": {
                        "$ref": "#/components/schemas/ImageAttributes"
                    },
                    "htmlTagAttributes": {
                        "$ref": "#/components/schemas/HtmlTagAttributes"
                    },
                    "dynamicAttributes": {
                        "$ref": "#/components/schemas/DynamicAttributes"
                    },
                    "adaptiveAttributes": {
                        "$ref": "#/components/schemas/AdaptiveAttributes"
                    }
                },
                "description": "A creative is a project with the necessary information to display a creative"
            },
            "Ad": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ad"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the ad"
                    },
                    "creativeId": {
                        "type": "string",
                        "description": "The id of the Creative binded to this Ad"
                    },
                    "adSetId": {
                        "type": "string",
                        "description": "The id of the Ad Set binded to this Ad"
                    },
                    "inventoryType": {
                        "enum": [
                            "Native",
                            "Display",
                            "Video"
                        ],
                        "type": "string",
                        "description": "The inventory the Ad belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative."
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The date when the ad will be launched\r\nString must be in ISO8601 format"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format"
                    }
                },
                "description": "An ad is the binding that connects a creative with an ad set"
            },
            "Coupon": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Coupon"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Coupon"
                    },
                    "author": {
                        "type": "string",
                        "description": "The login of the person who created this Coupon"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser linked to the Coupon"
                    },
                    "adSetId": {
                        "type": "string",
                        "description": "The id of the Ad Set on which the Coupon is applied to"
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
                    },
                    "format": {
                        "type": "string",
                        "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\""
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Coupon"
                    },
                    "images": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageSlide"
                        },
                        "description": "List of slides containing the image URLs"
                    },
                    "showEvery": {
                        "type": "integer",
                        "description": "Show the Coupon every N seconds (between 1 and 10)",
                        "format": "int32"
                    },
                    "showDuration": {
                        "type": "integer",
                        "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
                        "format": "int32"
                    },
                    "rotationsNumber": {
                        "type": "integer",
                        "description": "Number of rotations for the Coupons (from 1 to 10 times)",
                        "format": "int32"
                    }
                },
                "description": "Coupons are static images applied on ad set which can be displayed within an ad and link to a landing page."
            },
            "CouponSupportedSizes": {
                "type": "object",
                "properties": {
                    "logoZone": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of LogoZone sizes as string in width x height format"
                    },
                    "fullFrame": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of FullFrame sizes as string in width x height format"
                    }
                },
                "description": "Entity containing the list of Coupon supported sizes"
            },
            "CreativeWrite": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the creative"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the creative"
                    },
                    "format": {
                        "type": "string",
                        "description": "The format of the creative\r\nYou can use \"Image\", \" HtmlTag\", \"Dynamic\" or \"Adaptive\""
                    },
                    "datasetId": {
                        "type": "string",
                        "description": "Dataset linked to the Creative"
                    },
                    "imageWriteAttributes": {
                        "$ref": "#/components/schemas/ImageWriteAttributes"
                    },
                    "htmlTagWriteAttributes": {
                        "$ref": "#/components/schemas/HtmlTagWriteAttributes"
                    },
                    "dynamicWriteAttributes": {
                        "$ref": "#/components/schemas/DynamicWriteAttributes"
                    },
                    "adaptiveWriteAttributes": {
                        "$ref": "#/components/schemas/AdaptiveWriteAttributes"
                    }
                },
                "description": "Entity to create or update a creative"
            },
            "AdWrite": {
                "required": [
                    "name",
                    "creativeId",
                    "adSetId",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the ad"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the ad"
                    },
                    "creativeId": {
                        "type": "string",
                        "description": "The id of the Creative bound to this Ad"
                    },
                    "adSetId": {
                        "type": "string",
                        "description": "The id of the Ad Set bound to this Ad"
                    },
                    "inventoryType": {
                        "type": "string",
                        "description": "The inventory the Ad to be created or updated belongs to. Possible values are \"Display\" and \"Native\". This is optional since this doesn't make sense for every creative type but will throw an error if not set for a dynamic creative."
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The date when the ad will be launched\r\nString must be in ISO8601 format"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date when when we will stop to show this ad. If the end date is not specified (i.e. null) then the ad will go on forever\r\nString must be in ISO8601 format"
                    }
                },
                "description": "Entity to create or update an ad"
            },
            "CreateCoupon": {
                "required": [
                    "name",
                    "adSetId",
                    "landingPageUrl",
                    "startDate",
                    "format",
                    "images",
                    "showEvery",
                    "showDuration",
                    "rotationsNumber"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Coupon"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Coupon"
                    },
                    "adSetId": {
                        "type": "string",
                        "description": "The id of the Ad Set on which the Coupon is applied to"
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The date when the coupon will be launched\r\nString must be in ISO8601 format"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
                    },
                    "format": {
                        "type": "string",
                        "description": "Format of the Coupon, it can have two values: \"FullFrame\" or \"LogoZone\""
                    },
                    "images": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateImageSlide"
                        },
                        "description": "List of slides containing the images as a base-64 encoded string"
                    },
                    "showEvery": {
                        "type": "integer",
                        "description": "Show the Coupon every N seconds (between 1 and 10)",
                        "format": "int32"
                    },
                    "showDuration": {
                        "type": "integer",
                        "description": "Show Coupon for a duration of N seconds (between 1 and 5)",
                        "format": "int32"
                    },
                    "rotationsNumber": {
                        "type": "integer",
                        "description": "Number of rotations for the Coupons (from 1 to 10 times)",
                        "format": "int32"
                    }
                },
                "description": "Entity to create a Coupon"
            },
            "UpdateCoupon": {
                "required": [
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "The date when the Coupon will be launched\r\nString must be in ISO8601 format"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The date when when we will stop to show this Coupon. If the end date is not specified (i.e. null) then the Coupon will go on forever\r\nString must be in ISO8601 format"
                    }
                },
                "description": "Entity to edit a Coupon"
            },
            "ImageAttributes": {
                "type": "object",
                "properties": {
                    "urls": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url",
                        "format": "uri"
                    }
                },
                "description": "The attributes specific to Image creatives"
            },
            "HtmlTagAttributes": {
                "type": "object",
                "properties": {
                    "tags": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        },
                        "description": "An array containing the html tags"
                    }
                },
                "description": "The attributes specific to HtmlTag creatives"
            },
            "DynamicAttributes": {
                "type": "object",
                "properties": {
                    "logos": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageShape"
                        },
                        "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
                    },
                    "creativeBackgroundColor": {
                        "type": "string",
                        "description": "Color of the creative's background\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "bodyTextColor": {
                        "type": "string",
                        "description": "Color of the creative's body text\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "pricesColor": {
                        "type": "string",
                        "description": "Color of the creative's prices\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "primaryFont": {
                        "type": "string",
                        "description": "Font of the primary font\r\nValid supported font like \"Arial\""
                    },
                    "callsToAction": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
                    },
                    "productImageDisplay": {
                        "enum": [
                            "ShowFullImage",
                            "ZoomOnImage"
                        ],
                        "type": "string",
                        "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
                    }
                },
                "description": "The attributes specific to Dynamic creatives"
            },
            "AdaptiveAttributes": {
                "required": [
                    "layouts",
                    "logos",
                    "headlineText",
                    "headlineFont",
                    "descriptionText",
                    "descriptionFont",
                    "callsToAction",
                    "colors",
                    "landingPageUrl"
                ],
                "type": "object",
                "properties": {
                    "layouts": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Editorial",
                                "Montage",
                                "InBannerVideo"
                            ],
                            "type": "string"
                        },
                        "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
                    },
                    "logos": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageShape"
                        },
                        "description": "Logo images uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
                    },
                    "headlineText": {
                        "type": "string",
                        "description": "The headline text of the banner"
                    },
                    "headlineFont": {
                        "type": "string",
                        "description": "Font of the headline\r\nValid supported font like \"Arial\""
                    },
                    "descriptionText": {
                        "type": "string",
                        "description": "The description text of the banner"
                    },
                    "descriptionFont": {
                        "type": "string",
                        "description": "Font of the description\r\nValid supported font like \"Arial\""
                    },
                    "callsToAction": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
                    },
                    "colors": {
                        "$ref": "#/components/schemas/AdaptiveColors"
                    },
                    "imageSets": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageSet"
                        },
                        "description": "Multiple image sets, each image set consists of multiple images and a headline text."
                    },
                    "imageDisplay": {
                        "enum": [
                            "ShowFullImage",
                            "ZoomOnImage"
                        ],
                        "type": "string",
                        "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
                    },
                    "videos": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VideoDetail"
                        },
                        "description": "Multiple videos potentially in different shapes."
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url",
                        "format": "uri"
                    }
                },
                "description": "The attributes specific to Adaptive creatives"
            },
            "ImageSlide": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "description": "Width of the Coupon slide",
                        "format": "int32"
                    },
                    "height": {
                        "type": "integer",
                        "description": "Height of the Coupon slide",
                        "format": "int32"
                    },
                    "slideUrls": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of images of the same size uploaded on demostatic.criteo.com when deploying and then static.criteo.net"
                    }
                },
                "description": "Slide containing the image URLs"
            },
            "ImageWriteAttributes": {
                "type": "object",
                "properties": {
                    "base64Strings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of images as a base-64 encoded string"
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url",
                        "format": "uri"
                    }
                },
                "description": "The attributes specific to create or update an Image creative"
            },
            "HtmlTagWriteAttributes": {
                "type": "object",
                "properties": {
                    "tags": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        },
                        "description": "An array containing the html tags"
                    }
                },
                "description": "The attributes specific to create or update a HtmlTag creative"
            },
            "DynamicWriteAttributes": {
                "type": "object",
                "properties": {
                    "logoBase64String": {
                        "type": "string",
                        "description": "Logo image as a base-64 encoded string"
                    },
                    "creativeBackgroundColor": {
                        "type": "string",
                        "description": "Color of the creative's background\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "bodyTextColor": {
                        "type": "string",
                        "description": "Color of the creative's body text\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "pricesColor": {
                        "type": "string",
                        "description": "Color of the creative's prices\r\nValid hexadecimal color (e.g. \"AB00FF\")"
                    },
                    "primaryFont": {
                        "type": "string",
                        "description": "Font of the primary font\r\nValid supported font like \"Arial\""
                    },
                    "callsToAction": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
                    },
                    "productImageDisplay": {
                        "type": "string",
                        "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your product catalog images should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether they should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
                    }
                },
                "description": "The attributes specific to create or update a Dynamic creative"
            },
            "AdaptiveWriteAttributes": {
                "required": [
                    "layouts",
                    "logoBase64String",
                    "headlineText",
                    "headlineFont",
                    "descriptionText",
                    "descriptionFont",
                    "callsToAction",
                    "colors",
                    "landingPageUrl"
                ],
                "type": "object",
                "properties": {
                    "layouts": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The Adaptive layouts that are enabled.\r\nIt can contain any of the following values: \"Editorial\", “Montage“, \"InBannerVideo\"."
                    },
                    "logoBase64String": {
                        "type": "string",
                        "description": "Logo image as a base-64 encoded string"
                    },
                    "headlineText": {
                        "type": "string",
                        "description": "The headline text of the banner"
                    },
                    "headlineFont": {
                        "type": "string",
                        "description": "Font of the headline\r\nValid supported font like \"Arial\""
                    },
                    "descriptionText": {
                        "type": "string",
                        "description": "The description text of the banner"
                    },
                    "descriptionFont": {
                        "type": "string",
                        "description": "Font of the description\r\nValid supported font like \"Arial\""
                    },
                    "callsToAction": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A Call-to-Action (CTA) is an action-driven instruction to your audience intended to provoke an immediate\r\nresponse, such as “Buy now” or “Go!”."
                    },
                    "colors": {
                        "$ref": "#/components/schemas/AdaptiveColors"
                    },
                    "imageSetsBase64": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageSetBase64"
                        },
                        "description": "Multiple image sets, each image set consists of multiple images as a base-64 encoded string and a headline text."
                    },
                    "imageDisplay": {
                        "type": "string",
                        "description": "Value can be \"ShowFullImage\" or \"ZoomOnImage\". Choose whether your image set should fit inside the allocated\r\nspace (\"ShowFullImage\") or whether it should fill that space (\"ZoomOnImage\"). If you choose ZoomOnImage, there may be some\r\nimage cropping."
                    },
                    "videoBase64Strings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Multiple videos potentially in different shapes, each video is a base-64 encoded string."
                    },
                    "landingPageUrl": {
                        "type": "string",
                        "description": "Web redirection of the landing page url.",
                        "format": "uri"
                    }
                },
                "description": "The attributes specific to create or update an Adaptive creative"
            },
            "CreateImageSlide": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "description": "Width of the Coupon slide",
                        "format": "int32"
                    },
                    "height": {
                        "type": "integer",
                        "description": "Height of the Coupon slide",
                        "format": "int32"
                    },
                    "slideBase64Strings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of images of the same size as a base-64 encoded string"
                    }
                },
                "description": "Slide containing the images of the same size as a base-64 encoded string"
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "htmlTag": {
                        "type": "string",
                        "description": "Html tag"
                    },
                    "size": {
                        "$ref": "#/components/schemas/Size"
                    }
                },
                "description": "Entity specifying the html of the tag and its size"
            },
            "ImageShape": {
                "required": [
                    "shape",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "shape": {
                        "enum": [
                            "Horizontal",
                            "Vertical",
                            "Square"
                        ],
                        "type": "string",
                        "description": "Ratio of the image"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the image uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
                        "format": "uri"
                    }
                },
                "description": "Entity containing the shape and url of the image"
            },
            "AdaptiveColors": {
                "required": [
                    "logoAreaAndTitleColor",
                    "backgroundColor",
                    "text1Color",
                    "text2Color",
                    "ctaBackgroundColor",
                    "ctaTextColor"
                ],
                "type": "object",
                "properties": {
                    "logoAreaAndTitleColor": {
                        "type": "string",
                        "description": "Color of the creative's logo area.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
                    },
                    "backgroundColor": {
                        "type": "string",
                        "description": "Color of the creative's background.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
                    },
                    "text1Color": {
                        "type": "string",
                        "description": "Color of the headline and the description texts.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
                    },
                    "text2Color": {
                        "type": "string",
                        "description": "Color of the image set's headline text.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")"
                    },
                    "ctaBackgroundColor": {
                        "type": "string",
                        "description": "Color of the background of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
                    },
                    "ctaTextColor": {
                        "type": "string",
                        "description": "Color of the text of the CTA.\r\nA valid RGB24 color in hexadecimal (e.g. \"AB00FF\")."
                    }
                },
                "description": "Entity consists of the color aliases of the creative's elements"
            },
            "ImageSet": {
                "required": [
                    "images"
                ],
                "type": "object",
                "properties": {
                    "images": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageShape"
                        },
                        "description": "The images' urls with their shapes."
                    },
                    "headlineText": {
                        "type": "string",
                        "description": "The headline of the image set"
                    }
                },
                "description": "Entity consists of multiple images in different ratios and a headline text."
            },
            "VideoDetail": {
                "required": [
                    "duration",
                    "shape",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "number",
                        "description": "The duration of the video in milliseconds, the video could be trimmed if it is longer than 30000 ms.",
                        "format": "double"
                    },
                    "shape": {
                        "enum": [
                            "Horizontal",
                            "Vertical",
                            "Square"
                        ],
                        "type": "string",
                        "description": "Shape of the video"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the video uploaded on demostatic.criteo.com when deploying and then static.criteo.net",
                        "format": "uri"
                    }
                },
                "description": "Entity consists of the url of the video, its duration and its shape."
            },
            "ImageSetBase64": {
                "required": [
                    "imageBase64Strings"
                ],
                "type": "object",
                "properties": {
                    "imageBase64Strings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Multiple images potentially in different shapes, each image is a base-64 encoded string."
                    },
                    "headlineText": {
                        "type": "string",
                        "description": "The headline of the image set"
                    }
                },
                "description": "Entity consists of multiple images in different ratios as a base-64 encoded and a headline text."
            },
            "Size": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "height": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "Size entity containing width and height of the creative"
            },
            "AccessTokenModel": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "description": "The access token issued by the authorization server."
                    },
                    "token_type": {
                        "type": "string",
                        "description": "The type of the token issued."
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "The refresh token issued by the authorization server.",
                        "x-nullable": true
                    },
                    "expires_in": {
                        "type": "integer",
                        "description": "The lifetime in seconds of the access token.For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value.",
                        "format": "int32"
                    }
                },
                "description": "Access Token to be used with other services"
            },
            "OAuthErrorModel": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "error_description": {
                        "type": "string"
                    },
                    "error_uri": {
                        "type": "string"
                    }
                }
            },
            "ErrorMessage": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "traceIdentifier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "detail": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "description": "This is the message defining an error"
            },
            "TransparencyReportDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransparencyReportEntityMessage"
                        }
                    }
                },
                "description": "This is the message defining the response for Transparency report"
            },
            "ReportDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportEntityMessage"
                        }
                    }
                },
                "description": "This is the message defining the json report data"
            },
            "StatisticsReportQueryMessage": {
                "required": [
                    "dimensions",
                    "metrics",
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
                    },
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets ids. If empty, all the adSets will be fetched"
                    },
                    "adSetNames": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets names. If empty, all the adSets will be fetched"
                    },
                    "adSetStatus": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets status. If empty, all the adSets will be fetched"
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AdsetId",
                                "Adset",
                                "AdvertiserId",
                                "Advertiser",
                                "CategoryId",
                                "Category",
                                "Hour",
                                "Day",
                                "Week",
                                "Month",
                                "Year",
                                "Os",
                                "Device",
                                "CampaignId",
                                "Campaign",
                                "AdId",
                                "Ad",
                                "CouponId",
                                "Coupon",
                                "MarketingObjectiveId",
                                "MarketingObjective",
                                "ChannelId",
                                "Channel"
                            ],
                            "type": "string"
                        },
                        "description": "The dimensions for the report."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Adset report",
                "example": {
                    "advertiserIds": "123,456,789",
                    "adSetIds": [
                        "12345",
                        "54321"
                    ],
                    "adSetNames": [
                        "myAdSet1",
                        "myAdSet2"
                    ],
                    "adSetStatus": [
                        "Active"
                    ],
                    "dimensions": [
                        "CampaignId",
                        "Campaign",
                        "AdsetId",
                        "Adset",
                        "AdvertiserId",
                        "Advertiser",
                        "AdId",
                        "Ad",
                        "CouponId",
                        "Coupon",
                        "CategoryId",
                        "Category",
                        "Hour",
                        "Day",
                        "Week",
                        "Month",
                        "Year",
                        "Os",
                        "Device"
                    ],
                    "metrics": [
                        "Clicks",
                        "Displays",
                        "Cpc",
                        "Visits"
                    ],
                    "currency": "EUR",
                    "format": "csv",
                    "timezone": "Europe/Paris",
                    "startDate": "2021-12-29T00:00:00.0000000+01:00",
                    "endDate": "2022-01-01T00:00:00.0000000+01:00"
                }
            },
            "TransactionsReportQueryDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionsReportQueryEntityMessage"
                        }
                    }
                },
                "description": "Contains queries for Transactions report",
                "example": {
                    "data": [
                        {
                            "type": "TransactionsReport",
                            "attributes": {
                                "advertiserIds": "123,456,789",
                                "eventType": "display",
                                "currency": "EUR",
                                "format": "csv",
                                "timezone": "Europe/Paris",
                                "startDate": "2021-12-29T00:00:00.0000000+01:00",
                                "endDate": "2021-12-29T00:00:00.0000000+01:00"
                            }
                        }
                    ]
                }
            },
            "PlacementsReportQueryDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacementsReportQueryEntityMessage"
                        }
                    }
                },
                "description": "Contains queries for Placements report",
                "example": {
                    "data": [
                        {
                            "type": "PlacementReport",
                            "attributes": {
                                "advertiserIds": "123,456,789",
                                "campaignIds": "111,222,333,444",
                                "adsetIds": "135,246,357,468",
                                "environment": "web",
                                "placement": "MyPlacement",
                                "dimensions": [
                                    "AdsetId",
                                    "AdvertiserId",
                                    "Placement"
                                ],
                                "metrics": [
                                    "clicks",
                                    "displays",
                                    "cost"
                                ],
                                "currency": "EUR",
                                "disclosed": false,
                                "format": "csv",
                                "timezone": "Europe/Paris",
                                "startDate": "2021-12-29T00:00:00.0000000+01:00",
                                "endDate": "2021-12-29T00:00:00.0000000+01:00"
                            }
                        }
                    ]
                }
            },
            "TransparencyQueryMessage": {
                "required": [
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "shouldDisplayProductIds": {
                        "type": "boolean",
                        "description": "Specify if the product ids are displayed in the report.",
                        "default": false
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Transparency report",
                "example": {
                    "shouldDisplayProductIds": false,
                    "startDate": "2021-12-29T00:00:00.0000000+01:00",
                    "endDate": "2022-01-01T00:00:00.0000000+01:00"
                }
            },
            "GenerateCategoriesReportRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/GenerateCategoriesReportRequestData"
                    }
                },
                "description": "Contains queries for Categories report",
                "example": {
                    "data": {
                        "type": "CategoriesReport",
                        "attributes": {
                            "advertiserIds": [
                                "123",
                                "456",
                                "789"
                            ],
                            "campaignId": "111",
                            "adsetId": "135",
                            "domain": "example.com",
                            "category": "Example",
                            "shouldDisplayDomainDimension": true,
                            "format": "csv",
                            "timezone": "Europe/Paris",
                            "startDate": "2021-12-29T00:00:00.0000000+01:00",
                            "endDate": "2021-12-29T00:00:00.0000000+01:00"
                        }
                    }
                }
            },
            "GenerateTopProductsReportRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/GenerateTopProductsReportRequestData"
                    }
                },
                "description": "Contains queries for topProducts report",
                "example": {
                    "data": {
                        "type": "TopProductsReport",
                        "attributes": {
                            "timezone": "Europe/Paris",
                            "startDate": "2021-12-29T00:00:00.0000000+01:00",
                            "endDate": "2022-01-01T00:00:00.0000000+01:00",
                            "advertiserId": "1234",
                            "limit": 200,
                            "rankProductsBy": "Clicks",
                            "dimensions": [
                                "CampaignId",
                                "Campaign",
                                "AdSetId",
                                "AdSet",
                                "ProductId",
                                "Product",
                                "ProductUrl",
                                "Brand",
                                "Category"
                            ],
                            "metrics": [
                                "Clicks",
                                "Ctr",
                                "Visits",
                                "Sales",
                                "Cost",
                                "Revenue",
                                "Displays"
                            ],
                            "currency": "EUR",
                            "brands": [
                                "Brand1",
                                "Brand2"
                            ],
                            "categoryIds": [
                                "6666",
                                "7777"
                            ],
                            "campaignIds": [
                                "9999"
                            ],
                            "adSetIds": [
                                "11111",
                                "22222"
                            ],
                            "adSetStatus": [
                                "Active",
                                "NotRunning"
                            ]
                        }
                    }
                }
            },
            "GenerateCreativesReportRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/GenerateCreativesReportRequestData"
                    }
                },
                "description": "Contains queries for Creatives report",
                "example": {
                    "data": {
                        "type": "CreativesReport",
                        "attributes": {
                            "startDate": "2021-12-29T00:00:00.0000000+01:00",
                            "endDate": "2022-01-01T00:00:00.0000000+01:00",
                            "advertiserIds": [
                                "6666",
                                "7777"
                            ],
                            "metrics": [
                                "Clicks",
                                "Ctr",
                                "Displays"
                            ],
                            "dimensions": [
                                "SizeCategory",
                                "DisplaySize",
                                "AdType",
                                "AdFormat",
                                "Coupon",
                                "CouponId",
                                "Ad",
                                "AdId",
                                "Day",
                                "Hour"
                            ],
                            "timezone": "Europe/Paris",
                            "adTypes": [
                                "Dynamic",
                                "Other types"
                            ],
                            "adFormats": [
                                "Mozaic",
                                "Native"
                            ],
                            "displaySizes": [
                                "LeaderBoard",
                                "LargeBanner"
                            ],
                            "couponNames": [
                                "a coupon name"
                            ],
                            "couponIds": [
                                "3333",
                                "5555"
                            ],
                            "adNames": [
                                "Ad by Criteo team"
                            ],
                            "adIds": [
                                "2222"
                            ],
                            "campaignIds": [
                                "1111"
                            ],
                            "adSetIds": [
                                "2222",
                                "3333"
                            ],
                            "adSetStatus": [
                                "Active",
                                "NotRunning"
                            ]
                        }
                    }
                }
            },
            "TransparencyReportEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/TransparencyReportAttributes"
                    }
                },
                "description": "This is the message defining the entity response for Transparency report"
            },
            "ReportEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/JsonReportRows"
                    }
                },
                "description": "This is the message defining the json report entity"
            },
            "TransactionsReportQueryEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/TransactionsReportQueryMessage"
                    }
                },
                "description": "Contains a query for Transaction report and its type"
            },
            "PlacementsReportQueryEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PlacementsReportQueryMessage"
                    }
                },
                "description": "Contains a query for Transaction report and its type"
            },
            "GenerateCategoriesReportRequestData": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/GenerateCategoriesReportRequestAttributes"
                    }
                },
                "description": "Contains a query for Categories report and its type"
            },
            "GenerateTopProductsReportRequestData": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/GenerateTopProductsReportRequestAttributes"
                    }
                },
                "description": "Contains a query for TopProducts report and its type"
            },
            "GenerateCreativesReportRequestData": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/GenerateCreativesReportRequestAttributes"
                    }
                },
                "description": "Contains a query for Creatives report and its type"
            },
            "TransparencyReportAttributes": {
                "required": [
                    "advertiserId",
                    "tokenValidUntil",
                    "files"
                ],
                "type": "object",
                "properties": {
                    "advertiserId": {
                        "type": "string"
                    },
                    "tokenValidUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "files": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransparencyReportFile"
                        }
                    }
                },
                "description": "This is the message defining the attribute response for Transparency report"
            },
            "JsonReportRows": {
                "type": "object",
                "properties": {
                    "rows": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": "This is the message defining the json report rows"
            },
            "TransactionsReportQueryMessage": {
                "required": [
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Apply a filter on Event type ."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Transaction report"
            },
            "PlacementsReportQueryMessage": {
                "required": [
                    "dimensions",
                    "metrics",
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids."
                    },
                    "campaignIds": {
                        "type": "string",
                        "description": "The comma-separated list of campaign ids."
                    },
                    "adsetIds": {
                        "type": "string",
                        "description": "The comma-separated list of adSet ids."
                    },
                    "environment": {
                        "type": "string",
                        "description": "Type of environment: Web, Android or iOS."
                    },
                    "placement": {
                        "type": "string",
                        "description": "Filter the value of the placement"
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AdsetId",
                                "AdvertiserId",
                                "Placement",
                                "Environment",
                                "AdsetName",
                                "AdvertiserName",
                                "CampaignId",
                                "CampaignName"
                            ],
                            "type": "string"
                        },
                        "description": "The dimensions for the report."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "disclosed": {
                        "type": "boolean",
                        "description": "Returns disclosed or undisclosed placements.",
                        "default": true
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Placements report"
            },
            "GenerateCategoriesReportRequestAttributes": {
                "required": [
                    "advertiserIds",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Advertiser ids."
                    },
                    "campaignId": {
                        "type": "string",
                        "description": "Report only on the specified Campaign id."
                    },
                    "adsetId": {
                        "type": "string",
                        "description": "Report only on the specified AdSet id."
                    },
                    "domain": {
                        "type": "string",
                        "description": "Report only on the specified domain."
                    },
                    "category": {
                        "type": "string",
                        "description": "Report only on the specified category."
                    },
                    "shouldDisplayDomainDimension": {
                        "type": "boolean",
                        "description": "Specify if the domain dimension is displayed in the report.",
                        "default": true
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Categories report"
            },
            "GenerateTopProductsReportRequestAttributes": {
                "required": [
                    "startDate",
                    "endDate",
                    "advertiserId",
                    "rankProductsBy"
                ],
                "type": "object",
                "properties": {
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "The client id."
                    },
                    "limit": {
                        "type": "integer",
                        "description": "The maximum number of top products returned.",
                        "format": "int32"
                    },
                    "rankProductsBy": {
                        "enum": [
                            "Clicks",
                            "Displays",
                            "Sales"
                        ],
                        "type": "string",
                        "description": "The metric used to filter the top products."
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Campaign",
                                "CampaignId",
                                "AdSet",
                                "AdSetId",
                                "Product",
                                "ProductId",
                                "Category",
                                "CategoryId",
                                "Advertiser",
                                "AdvertiserId",
                                "ProductUrl",
                                "Brand"
                            ],
                            "type": "string"
                        },
                        "description": "The dimensions for the report."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Clicks",
                                "Ctr",
                                "Visits",
                                "Sales",
                                "Cost",
                                "Revenue",
                                "Displays"
                            ],
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals).",
                        "default": "EUR"
                    },
                    "brands": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of brands names."
                    },
                    "categoryIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of category ids."
                    },
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of campaign ids."
                    },
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adSet ids."
                    },
                    "adSetStatus": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adSet status (ex: 'Active','NotRunning')."
                    }
                },
                "description": "This is the message defining the query for TopProducts report"
            },
            "GenerateCreativesReportRequestAttributes": {
                "required": [
                    "startDate",
                    "endDate",
                    "advertiserIds",
                    "metrics",
                    "dimensions"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of client ids."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Clicks",
                                "Ctr",
                                "Displays"
                            ],
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AdFormat",
                                "AdType",
                                "Coupon",
                                "CouponId",
                                "DisplaySize",
                                "SizeCategory",
                                "Ad",
                                "AdId",
                                "Day",
                                "Hour"
                            ],
                            "type": "string"
                        },
                        "description": "The list of dimensions to report."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz)."
                    },
                    "adTypes": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adTypes."
                    },
                    "adFormats": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adFormats."
                    },
                    "displaySizes": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of displaySizes."
                    },
                    "couponNames": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of coupon names."
                    },
                    "couponIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of coupon ids."
                    },
                    "adNames": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of ad names."
                    },
                    "adIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of ad ids."
                    },
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of campaign ids (marketing campaign ids)."
                    },
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adSet ids (campaign ids)."
                    },
                    "adSetStatus": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of adSet status (ex: 'Active','NotRunning')."
                    }
                },
                "description": "This is the message defining the query for Creatives report"
            },
            "TransparencyReportFile": {
                "required": [
                    "fileName",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "description": "This is the message defining the file response for Transparency report"
            },
            "AdSetTargetingDealIdsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIdsResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingDealIdsSetResultResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResultResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingDealIdsDisableResultResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResultResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingVideoPositioningResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioningResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingVideoPositioningSetResultResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResultResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingVideoPositioningDisableResultResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResultResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Represents an API response message containing the usual outcome fields (warnings+errors), and a valueResource data,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "SupplyVendorListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupplyVendorResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "SetAdSetTargetingDealIdsRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/SetAdSetTargetingDealIdsResource"
                    }
                },
                "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "SetAdSetTargetingVideoPositioningRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioningResource"
                    }
                },
                "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects."
            },
            "AdSetTargetingDealIdsResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIds"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingDealIdsSetResultResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIdsSetResult"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingDealIdsDisableResultResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingDealIdsDisableResult"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingVideoPositioningResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioning"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingVideoPositioningSetResultResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioningSetResult"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingVideoPositioningDisableResultResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetTargetingVideoPositioningDisableResult"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "SupplyVendorResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/SupplyVendor"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "SetAdSetTargetingDealIdsResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/SetAdSetTargetingDealIds"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "SetAdSetTargetingVideoPositioningResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/SetAdSetTargetingVideoPositioning"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "AdSetTargetingDealIds": {
                "type": "object",
                "properties": {
                    "dealIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DealId"
                        }
                    }
                },
                "description": "Ad set Deal Id targeting model",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "AdSetTargetingDealIdsSetResult": {
                "type": "object",
                "description": "Result of the AdSetTargetingDealIds setting",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "AdSetTargetingDealIdsDisableResult": {
                "type": "object",
                "description": "Result of the AdSetTargetingDealIds disabling",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "AdSetTargetingVideoPositioning": {
                "type": "object",
                "properties": {
                    "videoPlacement": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "InBanner",
                                "InArticle",
                                "InFeed",
                                "Interstitial",
                                "InStream"
                            ],
                            "type": "string"
                        }
                    },
                    "playbackMethod": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AutoSoundOn",
                                "AutoSoundOff",
                                "ClickSoundOn",
                                "MouseOverSoundOn",
                                "EnteringViewportSoundOn",
                                "EnteringViewportSoundOff"
                            ],
                            "type": "string"
                        }
                    },
                    "skippable": {
                        "enum": [
                            "Required",
                            "Blocked"
                        ],
                        "type": "string"
                    },
                    "videoInStreamPosition": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "PreRoll",
                                "MidRoll",
                                "PostRoll"
                            ],
                            "type": "string"
                        }
                    },
                    "videoPlayerSize": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Small",
                                "Medium",
                                "Large",
                                "ExtraLarge"
                            ],
                            "type": "string"
                        }
                    },
                    "videoAspectRatio": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Horizontal",
                                "Square",
                                "Vertical"
                            ],
                            "type": "string"
                        }
                    }
                },
                "description": "Video positioning targeting model",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "AdSetTargetingVideoPositioningSetResult": {
                "type": "object",
                "description": "Result of the AdSetTargetingDealIds setting",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "AdSetTargetingVideoPositioningDisableResult": {
                "type": "object",
                "description": "Result of the AdSetTargetingVideoPositioning deletion",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "SupplyVendor": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "description": "Supply Vendor model",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "SetAdSetTargetingDealIds": {
                "type": "object",
                "properties": {
                    "dealIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DealId"
                        }
                    }
                },
                "description": "deal ids targeting writing model",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "SetAdSetTargetingVideoPositioning": {
                "type": "object",
                "properties": {
                    "videoPlacement": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "InBanner",
                                "InArticle",
                                "InFeed",
                                "Interstitial",
                                "InStream"
                            ],
                            "type": "string"
                        }
                    },
                    "playbackMethod": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AutoSoundOn",
                                "AutoSoundOff",
                                "ClickSoundOn",
                                "MouseOverSoundOn",
                                "EnteringViewportSoundOn",
                                "EnteringViewportSoundOff"
                            ],
                            "type": "string"
                        }
                    },
                    "skippable": {
                        "enum": [
                            "Required",
                            "Blocked"
                        ],
                        "type": "string"
                    },
                    "videoInStreamPosition": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "PreRoll",
                                "MidRoll",
                                "PostRoll"
                            ],
                            "type": "string"
                        }
                    },
                    "videoPlayerSize": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Small",
                                "Medium",
                                "Large",
                                "ExtraLarge"
                            ],
                            "type": "string"
                        }
                    },
                    "videoAspectRatio": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "Horizontal",
                                "Square",
                                "Vertical"
                            ],
                            "type": "string"
                        }
                    }
                },
                "description": "Video positioning targeting writing model",
                "x-criteo-canonical": {
                    "infoType": "entity"
                }
            },
            "DealId": {
                "type": "object",
                "properties": {
                    "dealIdentifier": {
                        "type": "string"
                    },
                    "supplyVendorId": {
                        "type": "string"
                    }
                },
                "description": "Deal Id model"
            },
            "GetPortfolioResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityOfPortfolioMessage"
                        },
                        "description": "The response�s primary data"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiError"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarning"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "Portfolio fetch Response"
            },
            "AdvertiserCreationResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityV2OfObject"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiErrorV2"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarningV2"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "Advertiser Creation Response"
            },
            "UnauthorizedResponseV2": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityV2OfObject"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiErrorV2"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarningV2"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "Unauthorized Response"
            },
            "ListAvailableIndustriesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityV2OfObject"
                        },
                        "description": "The response�s primary data"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiErrorV2"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarningV2"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "List Available Industries Response"
            },
            "AdvertiserDatasetListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityV2OfDataset"
                        },
                        "description": "The response’s primary data"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiErrorV2"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarningV2"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "Get datasets response."
            },
            "AdvertiserCreationRequest": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "campaign",
                            "adset",
                            "ad",
                            "advertiser",
                            "agency",
                            "agencyAdvertiserLink",
                            "AgencyAdvertiserTransferRequest",
                            "publisher",
                            "address",
                            "client",
                            "contact",
                            "industry"
                        ],
                        "type": "string",
                        "description": "A string containing the entity type",
                        "example": "campaign"
                    },
                    "data": {
                        "$ref": "#/components/schemas/AdvertiserCreationInput"
                    }
                },
                "description": "Advertiser Creation Request",
                "example": {
                    "type": "advertiser",
                    "data": {
                        "accountName": "AdvertiserName",
                        "websiteUrl": "http://website_URL.com",
                        "countryIsoCode": "RO",
                        "currencyIsoCode": "EUR",
                        "industryId": "200006"
                    }
                }
            },
            "EntityOfPortfolioMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "campaign",
                            "adset",
                            "ad",
                            "advertiser",
                            "agency",
                            "publisher",
                            "address",
                            "client",
                            "contact",
                            "industry"
                        ],
                        "type": "string",
                        "description": "A string containing the entity type",
                        "example": "campaign"
                    },
                    "id": {
                        "type": "string",
                        "description": "A opaque string containing the unique Id of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PortfolioMessage"
                    },
                    "meta": {
                        "type": "object",
                        "description": "A meta object that contains application-specific metadata"
                    }
                },
                "description": "Generic Criteo API successful data model"
            },
            "CriteoApiError": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access_control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access_control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
                    }
                },
                "description": "Criteo API response error"
            },
            "CriteoApiWarning": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access_control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access_control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    }
                },
                "description": "Criteo API response warning"
            },
            "EntityV2OfObject": {
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "campaign",
                            "adset",
                            "ad",
                            "advertiser",
                            "agency",
                            "agencyAdvertiserLink",
                            "AgencyAdvertiserTransferRequest",
                            "publisher",
                            "address",
                            "client",
                            "contact",
                            "industry"
                        ],
                        "type": "string",
                        "description": "A string containing the entity type",
                        "example": "campaign"
                    },
                    "id": {
                        "type": "string",
                        "description": "A opaque string containing the unique Id of the entity"
                    },
                    "attributes": {
                        "type": "object",
                        "description": "Generic Criteo API successful data model\r\nWhile others may be computed e.g. lastChangedDate.\r\nComputed attributes are only part of the read model and not part of the write model."
                    },
                    "meta": {
                        "type": "object",
                        "description": "A meta object that contains application-specific metadata"
                    },
                    "relationships": {
                        "type": "object",
                        "description": "Relationships with this entity"
                    }
                },
                "description": "Generic Criteo API successful data model"
            },
            "CriteoApiErrorV2": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access-control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan",
                            "permission-denied"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
                    }
                },
                "description": "Criteo API response error"
            },
            "CriteoApiWarningV2": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access-control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan",
                            "permission-denied"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    }
                },
                "description": "Criteo API response warning"
            },
            "EntityV2OfDataset": {
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "campaign",
                            "adset",
                            "ad",
                            "advertiser",
                            "agency",
                            "agencyAdvertiserLink",
                            "AgencyAdvertiserTransferRequest",
                            "publisher",
                            "address",
                            "client",
                            "contact",
                            "industry",
                            "agencyAdvertiserCreationRequest",
                            "countryCurrenciesList",
                            "verticalsSubverticalsList",
                            "dataset"
                        ],
                        "type": "string",
                        "description": "A string containing the entity type",
                        "example": "dataset"
                    },
                    "id": {
                        "type": "string",
                        "description": "A opaque string containing the unique Id of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Dataset"
                    }
                },
                "description": "Generic Criteo API successful data model"
            },
            "AdvertiserCreationInput": {
                "required": [
                    "accountName",
                    "websiteUrl",
                    "countryIsoCode",
                    "currencyIsoCode",
                    "industryId"
                ],
                "type": "object",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "The Account Name; This will not be in fact the Advertiser name"
                    },
                    "websiteUrl": {
                        "type": "string",
                        "description": "Website url"
                    },
                    "countryIsoCode": {
                        "type": "string",
                        "description": "Country ISO code"
                    },
                    "currencyIsoCode": {
                        "type": "string",
                        "description": "Currency ISO code"
                    },
                    "industryId": {
                        "type": "string",
                        "description": "Industry ID"
                    }
                },
                "description": "Infomation for creating an advertiser"
            },
            "PortfolioMessage": {
                "type": "object",
                "properties": {
                    "advertiserName": {
                        "type": "string"
                    }
                },
                "description": "Class with elementary info about advertiser"
            },
            "Dataset": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "description": "Information about a dataset"
            },
            "BatchAcceptedResponse": {
                "required": [
                    "operationToken"
                ],
                "type": "object",
                "properties": {
                    "operationToken": {
                        "type": "string"
                    }
                },
                "description": "A batch was accepted. The report can be accessed using the reporting endpoint."
            },
            "FailResponse": {
                "required": [
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductImporterError"
                        },
                        "description": "List of errors"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductImporterWarning"
                        },
                        "description": "List of warnings"
                    }
                },
                "description": "Error server response."
            },
            "ReportOkResponse": {
                "required": [
                    "errorDetails",
                    "importRequestTimestamp",
                    "numberOfProductsDeleted",
                    "numberOfProductsInTheBatch",
                    "numberOfProductsUpserted",
                    "numberOfProductsWithErrors",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "enum": [
                            "ACCEPTED",
                            "IN_PROGRESS",
                            "VALIDATED",
                            "VALIDATED_WITH_ERRORS",
                            "FAILED"
                        ],
                        "type": "string",
                        "description": "The status of the operation.\nThe operation is completed when the status is one of (VALIDATED,VALIDATED_WITH_ERRORS,FAILED)"
                    },
                    "importRequestTimestamp": {
                        "type": "integer",
                        "description": "The date when the original batch request was sent.",
                        "format": "int64"
                    },
                    "numberOfProductsInTheBatch": {
                        "type": "integer",
                        "description": "The number of products present in the batch.",
                        "format": "int32"
                    },
                    "numberOfProductsUpserted": {
                        "type": "integer",
                        "description": "The number of products upserted.",
                        "format": "int32"
                    },
                    "numberOfProductsDeleted": {
                        "type": "integer",
                        "description": "The number of products deleted.",
                        "format": "int32"
                    },
                    "numberOfProductsWithErrors": {
                        "type": "integer",
                        "description": "The number of products with errors.",
                        "format": "int32"
                    },
                    "errorDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportDetailErrors"
                        },
                        "description": "The list of errors with details."
                    }
                },
                "description": "The report on a given operationToken is ready. The report is available for 4 days"
            },
            "ProductsCustomBatchRequest": {
                "required": [
                    "entries"
                ],
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductsCustomBatchRequestEntry"
                        },
                        "description": "The request entries to be processed in the batch."
                    }
                },
                "description": "Defines a batch of operations."
            },
            "ProductImporterError": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "title",
                    "traceId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The MACHINE-READABLE correlation ID provided by the gateway"
                    },
                    "type": {
                        "type": "string",
                        "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
                    },
                    "code": {
                        "type": "string",
                        "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
                    }
                },
                "description": "Error descriptor."
            },
            "ProductImporterWarning": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "title",
                    "traceId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The MACHINE-READABLE correlation ID provided by the gateway"
                    },
                    "type": {
                        "type": "string",
                        "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
                    },
                    "code": {
                        "type": "string",
                        "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
                    }
                },
                "description": "Warning descriptor."
            },
            "ReportDetailErrors": {
                "required": [
                    "errors",
                    "productId"
                ],
                "type": "object",
                "properties": {
                    "productId": {
                        "type": "string",
                        "description": "The product ID in lowercase"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportDetailError"
                        }
                    }
                },
                "description": "A list of errors on a batch operation."
            },
            "ProductsCustomBatchRequestEntry": {
                "required": [
                    "merchantId",
                    "method"
                ],
                "type": "object",
                "properties": {
                    "batchId": {
                        "type": "integer",
                        "description": "An entry ID, unique within the batch request.",
                        "format": "int64"
                    },
                    "merchantId": {
                        "type": "integer",
                        "description": "The ID of the managing account. Criteo: the partnerId.",
                        "format": "int32"
                    },
                    "method": {
                        "enum": [
                            "delete",
                            "insert"
                        ],
                        "type": "string",
                        "description": "The method of the batch entry."
                    },
                    "productId": {
                        "type": "string",
                        "description": "The Product ID to delete. Only defined if the method is delete."
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "feedId": {
                        "type": "string",
                        "description": "Not used by Criteo."
                    }
                },
                "description": "A batch entry encoding a single non-batch products request."
            },
            "ReportDetailError": {
                "required": [
                    "isServerRelated",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "UnknownError",
                            "InvalidBigImageUrl",
                            "InvalidProductId",
                            "InvalidProductUrl",
                            "InvalidSmallImageUrl",
                            "JsonParsingIssue",
                            "MissingID",
                            "MissingImages",
                            "MissingName",
                            "MissingURL",
                            "NonAsciiId",
                            "OverlargeBigImage",
                            "OverlargeID",
                            "OverlargeSmallImage",
                            "OverlargeURL",
                            "ConfigurationError"
                        ],
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "isServerRelated": {
                        "type": "boolean"
                    }
                },
                "description": "An error on a batch operation."
            },
            "Product": {
                "required": [
                    "channel",
                    "id",
                    "imageLink",
                    "link",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for the item. Aka Product ID."
                    },
                    "offerId": {
                        "type": "string",
                        "description": "Not used by Criteo."
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the item. (500 UTF8 characters max)."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the item. RECOMMENDED. (5000 UTF8 characters max)."
                    },
                    "link": {
                        "type": "string",
                        "description": "URL directly linking to your item's page on your website. (1000 UTF8 characters max)."
                    },
                    "imageLink": {
                        "type": "string",
                        "description": "URL of an image of the item. Supported formats: PNG, JPEG, GIF. (2000 UTF8 characters max). "
                    },
                    "additionalImageLinks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Additional URLs of images of the item."
                    },
                    "contentLanguage": {
                        "type": "string",
                        "description": "The two-letter ISO 639-1 language code for the item."
                    },
                    "targetCountry": {
                        "type": "string",
                        "description": "The CLDR territory code for the item."
                    },
                    "channel": {
                        "enum": [
                            "online"
                        ],
                        "type": "string",
                        "description": "The item's channel (online only)."
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format."
                    },
                    "adult": {
                        "type": "boolean",
                        "description": "Set to true if the item is targeted towards adults. RECOMMENDED."
                    },
                    "kind": {
                        "type": "string",
                        "description": "Identifies what kind of resource this is."
                    },
                    "brand": {
                        "type": "string",
                        "description": "Brand of the item. RECOMMENDED."
                    },
                    "color": {
                        "type": "string",
                        "description": "Color of the item."
                    },
                    "googleProductCategory": {
                        "type": "string",
                        "description": "Google's category of the item (see Google product taxonomy). RECOMMENDED."
                    },
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number (GTIN) of the item. RECOMMENDED."
                    },
                    "itemGroupId": {
                        "type": "string",
                        "description": "Shared identifier for all variants of the same product. RECOMMENDED."
                    },
                    "material": {
                        "type": "string",
                        "description": "The material of which the item is made."
                    },
                    "mpn": {
                        "type": "string",
                        "description": "Manufacturer Part Number (MPN) of the item. RECOMMENDED."
                    },
                    "pattern": {
                        "type": "string",
                        "description": "The item's pattern (e.g. polka dots)."
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "salePrice": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "salePriceEffectiveDate": {
                        "type": "string",
                        "description": "Date range during which the item is on sale."
                    },
                    "shipping": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductShipping"
                        },
                        "description": "Shipping rules."
                    },
                    "shippingWeight": {
                        "$ref": "#/components/schemas/ProductShippingWeight"
                    },
                    "sizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Size of the item. RECOMMENDED. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value."
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductTax"
                        },
                        "description": "Tax information."
                    },
                    "customAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomAttribute"
                        },
                        "description": "A list of custom (merchant-provided) attributes. This is useful for submitting attributes not explicitly exposed by the API. Declaring attributes explicitly exposed by the API using is forbidden"
                    },
                    "identifierExists": {
                        "type": "boolean",
                        "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
                    },
                    "installment": {
                        "$ref": "#/components/schemas/Installment"
                    },
                    "loyaltyPoints": {
                        "$ref": "#/components/schemas/LoyaltyPoints"
                    },
                    "multipack": {
                        "type": "integer",
                        "description": "The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.",
                        "format": "int64"
                    },
                    "customLabel0": {
                        "type": "string",
                        "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
                    },
                    "customLabel1": {
                        "type": "string",
                        "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
                    },
                    "customLabel2": {
                        "type": "string",
                        "description": "Custom label 2 for custom grouping of items in a Shopping campaign."
                    },
                    "customLabel3": {
                        "type": "string",
                        "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
                    },
                    "customLabel4": {
                        "type": "string",
                        "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
                    },
                    "isBundle": {
                        "type": "boolean",
                        "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
                    },
                    "mobileLink": {
                        "type": "string",
                        "description": "accounts.link to a mobile-optimized version of the landing page."
                    },
                    "availabilityDate": {
                        "type": "string",
                        "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
                    },
                    "shippingLabel": {
                        "type": "string",
                        "description": "The shipping label of the product, used to group product in account-level shipping rules."
                    },
                    "unitPricingMeasure": {
                        "$ref": "#/components/schemas/ProductUnitPricingMeasure"
                    },
                    "unitPricingBaseMeasure": {
                        "$ref": "#/components/schemas/ProductUnitPricingBaseMeasure"
                    },
                    "shippingLength": {
                        "$ref": "#/components/schemas/ProductShippingDimension"
                    },
                    "shippingWidth": {
                        "$ref": "#/components/schemas/ProductShippingDimension"
                    },
                    "shippingHeight": {
                        "$ref": "#/components/schemas/ProductShippingDimension"
                    },
                    "displayAdsId": {
                        "type": "string",
                        "description": "An identifier for an item for dynamic remarketing campaigns."
                    },
                    "displayAdsSimilarIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Advertiser-specified recommendations."
                    },
                    "displayAdsTitle": {
                        "type": "string",
                        "description": "Title of an item for dynamic remarketing campaigns."
                    },
                    "displayAdsLink": {
                        "type": "string",
                        "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
                    },
                    "displayAdsValue": {
                        "type": "number",
                        "description": "Offer margin for dynamic remarketing campaigns.",
                        "format": "double"
                    },
                    "sellOnGoogleQuantity": {
                        "type": "integer",
                        "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
                        "format": "int64"
                    },
                    "promotionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The unique ID of a promotion."
                    },
                    "maxHandlingTime": {
                        "type": "integer",
                        "description": "Maximal product handling time (in business days).",
                        "format": "int64"
                    },
                    "minHandlingTime": {
                        "type": "integer",
                        "description": "Minimal product handling time (in business days).",
                        "format": "int64"
                    },
                    "costOfGoodsSold": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "source": {
                        "type": "string",
                        "description": "The source of the offer, i.e., how the offer was created."
                    },
                    "includedDestinations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations."
                    },
                    "excludedDestinations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
                    },
                    "adsGrouping": {
                        "type": "string",
                        "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
                    },
                    "adsLabels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Similar to adsGrouping, but only works on CPC."
                    },
                    "adsRedirect": {
                        "type": "string",
                        "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads."
                    },
                    "productTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the item (formatted as in products data specification)."
                    },
                    "ageGroup": {
                        "type": "string",
                        "description": "Target age group of the item."
                    },
                    "availability": {
                        "type": "string",
                        "description": "Availability status of the item. RECOMMENDED."
                    },
                    "condition": {
                        "type": "string",
                        "description": "Condition or state of the item."
                    },
                    "gender": {
                        "type": "string",
                        "description": "Target gender of the item."
                    },
                    "sizeSystem": {
                        "type": "string",
                        "description": "System in which the size is specified. Recommended for apparel items."
                    },
                    "sizeType": {
                        "type": "string",
                        "description": "The cut of the item. Recommended for apparel items."
                    },
                    "energyEfficiencyClass": {
                        "type": "string",
                        "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
                    },
                    "minEnergyEfficiencyClass": {
                        "type": "string",
                        "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
                    },
                    "maxEnergyEfficiencyClass": {
                        "type": "string",
                        "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
                    },
                    "taxCategory": {
                        "type": "string",
                        "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
                    },
                    "transitTimeLabel": {
                        "type": "string",
                        "description": "The transit time label of the product, used to group product in account-level transit time tables."
                    },
                    "sellerId": {
                        "type": "string",
                        "description": "The ID of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Resellers Program."
                    }
                },
                "description": "Defines a product to be inserted or updated."
            },
            "Price": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "description": "The price represented as a number."
                    },
                    "value": {
                        "type": "string",
                        "description": "The currency of the price."
                    }
                },
                "description": "Defines a price."
            },
            "ProductShippingWeight": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The weight of the product used to calculate the shipping cost of the item.",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of value."
                    }
                },
                "description": "Defines the shipping weight of a product."
            },
            "Installment": {
                "type": "object",
                "properties": {
                    "months": {
                        "type": "integer",
                        "description": "The number of installments the buyer has to pay.",
                        "format": "int64"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Price"
                    }
                },
                "description": "Defines the installment of a product."
            },
            "LoyaltyPoints": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
                    },
                    "pointsValue": {
                        "type": "integer",
                        "description": "The retailer's loyalty points in absolute value.",
                        "format": "int64"
                    },
                    "ratio": {
                        "type": "number",
                        "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
                        "format": "double"
                    }
                },
                "description": "Defines how a client earns loyalty points after buying this product."
            },
            "ProductUnitPricingMeasure": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The measurement of an item.",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of measure."
                    }
                },
                "description": "Defines a measurement."
            },
            "ProductUnitPricingBaseMeasure": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "integer",
                        "description": "The denominator of the unit price.",
                        "format": "int64"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of the denominator."
                    }
                },
                "description": "Defines a measurement."
            },
            "ProductShippingDimension": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The dimension of the product used to calculate the shipping cost of the item.",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of value."
                    }
                },
                "description": "Defines the shipping dimension of a product."
            },
            "ProductShipping": {
                "type": "object",
                "properties": {
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "country": {
                        "type": "string",
                        "description": "The CLDR territory code of the country to which an item will ship."
                    },
                    "region": {
                        "type": "string",
                        "description": "The geographic region to which a shipping rate applies."
                    },
                    "service": {
                        "type": "string",
                        "description": "A free-form description of the service class or delivery speed."
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
                        "format": "int64"
                    },
                    "locationGroupName": {
                        "type": "string",
                        "description": "The location where the shipping is applicable, represented by a location group name."
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
                    }
                },
                "description": "Defines the shipping information of a product."
            },
            "ProductTax": {
                "type": "object",
                "properties": {
                    "rate": {
                        "type": "number",
                        "description": "The percentage of tax rate that applies to the item price.",
                        "format": "double"
                    },
                    "country": {
                        "type": "string",
                        "description": "The country within which the item is taxed, specified as a CLDR territory code."
                    },
                    "region": {
                        "type": "string",
                        "description": "The geographic region to which the tax rate applies."
                    },
                    "taxShip": {
                        "type": "boolean",
                        "description": "Set to true if tax is charged on shipping."
                    },
                    "locationId": {
                        "type": "integer",
                        "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
                        "format": "int64"
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
                    }
                },
                "description": "Defines the tax information of a product."
            },
            "CustomAttribute": {
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the attribute."
                    }
                },
                "description": "Defines a custom attribute of a product."
            },
            "ResourceOutcomeOfProductSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ResourceOfProductSet"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body"
            },
            "Outcome": {
                "type": "object",
                "properties": {
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the body of a response without data of the Criteo API as described in API Guild Guidelines"
            },
            "ResourceCollectionOutcomeOfProductSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceOfProductSet"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "A class implementing the response  of the Criteo API as described in API Guild Guidelines with collection of entities as body"
            },
            "ValueResourceInputOfCreateProductSetRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ValueResourceOfCreateProductSetRequest"
                    }
                },
                "description": "Represents an API request message containing the usual valueResource data field,\r\ni.e. data is not an entity (no id). This can be used for association objects.",
                "example": {
                    "data": {
                        "type": "CreateProductSetRequest",
                        "attributes": {
                            "datasetId": "0",
                            "name": "My Product Set",
                            "isDraft": true,
                            "rules": [
                                {
                                    "operator": "IsIn",
                                    "field": "Brand",
                                    "values": [
                                        "MyBrand"
                                    ]
                                }
                            ]
                        }
                    }
                }
            },
            "ResourceOfProductSet": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/ProductSet"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "A class that represents an entity in a guild compliant way"
            },
            "ValueResourceOfCreateProductSetRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/CreateProductSetRequest"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "ProductSet": {
                "type": "object",
                "properties": {
                    "datasetId": {
                        "type": "string",
                        "description": "The dataset to which the product set belong"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the product set"
                    },
                    "status": {
                        "enum": [
                            "Unknown",
                            "Draft",
                            "Pending",
                            "Valid",
                            "Invalid",
                            "Deleted"
                        ],
                        "type": "string",
                        "description": "The status of the product set"
                    },
                    "isEnabled": {
                        "type": "boolean",
                        "description": "True if the product set is active"
                    },
                    "numberOfProducts": {
                        "type": "integer",
                        "description": "The number of product matching the product set",
                        "format": "int32"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Optional: The creation date of the product set (UTC time in ISO8601 format). Example: \"02/25/2022 14:51:26\"\r\nCan be null if the value doesn't exist."
                    },
                    "rules": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSetRule"
                        },
                        "description": "The rules identifying the product belonging to the set"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "description": "Encapsulate a group of product"
            },
            "CreateProductSetRequest": {
                "type": "object",
                "properties": {
                    "datasetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "isDraft": {
                        "type": "boolean"
                    },
                    "rules": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSetRule"
                        }
                    }
                },
                "description": "Entity to create a product set"
            },
            "ProductSetRule": {
                "type": "object",
                "properties": {
                    "operator": {
                        "enum": [
                            "IsIn",
                            "IsNotIn",
                            "Between",
                            "NotBetween",
                            "LessThan",
                            "GreaterThan"
                        ],
                        "type": "string",
                        "description": "The operator used with the field"
                    },
                    "field": {
                        "enum": [
                            "Category1",
                            "Category2",
                            "Category3",
                            "ExternalItemId",
                            "SalePrice",
                            "Brand",
                            "CustomLabel0",
                            "CustomLabel1",
                            "CustomLabel2",
                            "CustomLabel3",
                            "CustomLabel4"
                        ],
                        "type": "string",
                        "description": "The field on which we want to apply the rule"
                    },
                    "values": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The values on which we want to apply the rule"
                    }
                },
                "description": "Encapsulate a product rule"
            },
            "OkResponse": {
                "required": [
                    "data",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ProductSetStatistics"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreviewWarning"
                        },
                        "description": "List of warnings"
                    }
                },
                "description": "Successful server response."
            },
            "PreviewFailResponse": {
                "required": [
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreviewError"
                        },
                        "description": "List of errors"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreviewWarning"
                        },
                        "description": "List of warnings"
                    }
                },
                "description": "Error server response."
            },
            "ProductSetStatisticsQuery": {
                "required": [
                    "productSampleCount",
                    "productSet"
                ],
                "type": "object",
                "properties": {
                    "productSet": {
                        "$ref": "#/components/schemas/ProductSetPreview"
                    },
                    "productSampleCount": {
                        "type": "integer",
                        "description": "The size of the products sample",
                        "format": "int32",
                        "example": 5
                    }
                },
                "description": "ProductSet statistics preview request"
            },
            "ProductSetStatistics": {
                "required": [
                    "productCount",
                    "sampleProducts",
                    "totalProductCount"
                ],
                "type": "object",
                "properties": {
                    "productCount": {
                        "type": "integer",
                        "description": "Number of products in the product set",
                        "format": "int64"
                    },
                    "totalProductCount": {
                        "type": "integer",
                        "description": "Number of products in the partner's catalog",
                        "format": "int64"
                    },
                    "sampleProducts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A sample of products (hashed external id) contained in the product set"
                    }
                },
                "description": "ProductSet statistics preview response"
            },
            "PreviewWarning": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "title",
                    "traceId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The MACHINE-READABLE correlation ID provided by the gateway"
                    },
                    "type": {
                        "type": "string",
                        "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
                    },
                    "code": {
                        "type": "string",
                        "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
                    }
                },
                "description": "Warning descriptor."
            },
            "PreviewError": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "title",
                    "traceId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The MACHINE-READABLE correlation ID provided by the gateway"
                    },
                    "type": {
                        "type": "string",
                        "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
                    },
                    "code": {
                        "type": "string",
                        "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
                    }
                },
                "description": "Error descriptor."
            },
            "ProductSetPreview": {
                "required": [
                    "partnerId",
                    "rules"
                ],
                "type": "object",
                "properties": {
                    "partnerId": {
                        "type": "integer",
                        "description": "PartnerId",
                        "format": "int32",
                        "example": 123
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rules"
                        },
                        "description": "ProductSet rules"
                    }
                },
                "description": "ProductSet preview schema"
            },
            "Rules": {
                "required": [
                    "field",
                    "operator"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "enum": [
                            "Brand",
                            "Category1",
                            "Category2",
                            "Category3",
                            "CustomLabel0",
                            "CustomLabel1",
                            "CustomLabel2",
                            "CustomLabel3",
                            "CustomLabel4",
                            "ExternalItemId",
                            "RetailPrice",
                            "SalePrice"
                        ],
                        "type": "string",
                        "example": "Brand"
                    },
                    "operator": {
                        "enum": [
                            "Between",
                            "EqualTo",
                            "GreaterThan",
                            "IsIn",
                            "IsNotIn",
                            "LessThan",
                            "NotBetween",
                            "NotEqualTo"
                        ],
                        "type": "string",
                        "example": "IsIn"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "ProductSet rule"
            },
            "OnSiteRecoResponse": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecommendedProduct"
                        },
                        "description": "Recommended products"
                    },
                    "extraInfos": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "Additional information in case of warnings, errors..."
                    }
                },
                "description": "Recommendation response."
            },
            "OnSiteRecoRequest": {
                "required": [
                    "nbRequestedProducts",
                    "partnerId"
                ],
                "type": "object",
                "properties": {
                    "nbRequestedProducts": {
                        "type": "integer",
                        "description": "Amount of products to recommend.",
                        "format": "int32"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Used to retrieve user events from Criteo trackers. Optional if UserEvents are passed."
                    },
                    "userEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserEvent"
                        },
                        "description": "Used to perform a recommendation without relying on events stored for a UserId. Optional if UserId is passed."
                    },
                    "partnerId": {
                        "type": "integer",
                        "description": "Id of the partner.",
                        "format": "int32"
                    }
                },
                "description": "Recommendation request parameters."
            },
            "RecommendedProduct": {
                "type": "object",
                "properties": {
                    "productExternalId": {
                        "type": "string",
                        "description": "Product external id. Same id than what is used in user events."
                    },
                    "clickUrl": {
                        "type": "string",
                        "description": "Url leading to product details page and also used to track user click."
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "Product image."
                    },
                    "name": {
                        "type": "string",
                        "description": "Product name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Product description."
                    },
                    "price": {
                        "type": "number",
                        "description": "Product price.",
                        "format": "double"
                    },
                    "googleCategory": {
                        "type": "string",
                        "description": "Product google category."
                    }
                },
                "description": "Represents a recommended product."
            },
            "UserEvent": {
                "required": [
                    "productExternalId",
                    "type",
                    "dateTime"
                ],
                "type": "object",
                "properties": {
                    "productExternalId": {
                        "type": "string",
                        "description": "Product external id."
                    },
                    "type": {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "integer",
                        "description": "Event type e.g. page view, sale...",
                        "format": "int32"
                    },
                    "dateTime": {
                        "type": "string",
                        "description": "Event date (format : 2012-04-23T18:25:43.511Z)",
                        "format": "date-time"
                    }
                },
                "description": "Represents an event where user has interacted with a product."
            },
            "TargetType": {
                "enum": [
                    "Campaign",
                    "Advertiser"
                ],
                "type": "string",
                "description": "Defines a target for a rule",
                "x-enumNames": [
                    "Campaign",
                    "Advertiser"
                ]
            },
            "OciBrandSafetyResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "type",
                            "id",
                            "attributes"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "x-nullable": false
                            },
                            "type": {
                                "type": "string",
                                "description": "A string containing the entity type"
                            },
                            "attributes": {
                                "$ref": "#/components/schemas/OciBrandSafetyRule"
                            }
                        },
                        "description": "The document's primary data"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TargetingErrorModel"
                        },
                        "description": "An array of warning objects"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TargetingErrorModel"
                        },
                        "description": "An array of error objects"
                    }
                },
                "description": "Response container"
            },
            "OciTargetingResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "type",
                            "id",
                            "attributes"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "x-nullable": false
                            },
                            "type": {
                                "type": "string",
                                "description": "A string containing the entity type"
                            },
                            "attributes": {
                                "$ref": "#/components/schemas/OciTargetingRule"
                            }
                        },
                        "description": "The document's primary data"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TargetingErrorModel"
                        },
                        "description": "An array of warning objects"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TargetingErrorModel"
                        },
                        "description": "An array of error objects"
                    }
                },
                "description": "Response container"
            },
            "OciBrandSafetyRule": {
                "type": "object",
                "properties": {
                    "target": {
                        "$ref": "#/components/schemas/Target"
                    },
                    "blacklisted": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OciBrandSafetySegment"
                        }
                    }
                },
                "description": "Object represents brand-safety rule based on OCI brand-safety segments. A brand-safety rule consists of a target and a list of brand-safety segments."
            },
            "OciTargetingRule": {
                "type": "object",
                "properties": {
                    "target": {
                        "$ref": "#/components/schemas/Target"
                    },
                    "rule": {
                        "$ref": "#/components/schemas/OciTargetingNode"
                    }
                },
                "description": "Object represents targeting rule based on OCI targeting segments. A targeting rule consists of a target and a boolean tree that reflects a boolean expression."
            },
            "TargetingErrorModel": {
                "required": [
                    "code",
                    "instance",
                    "traceId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "A machine-readable error code string."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable detailed explanation specific to this occurrence of the problem."
                    },
                    "instance": {
                        "type": "string",
                        "description": "A machine-readable URI reference that identifies the specific occurrence of the problem."
                    },
                    "source": {
                        "type": "object",
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable summary of the problem type."
                    },
                    "traceId": {
                        "type": "string",
                        "description": "The machine-readable correlation Id provided by the gateway."
                    },
                    "type": {
                        "type": "string",
                        "description": "A machine-readable code specifying error category. This information is used on client side to focus on certain type of error, \nto either retry some processing or display only certain type of errors."
                    }
                },
                "description": "A machine-readable format for specifying errors in Targeting.API"
            },
            "Target": {
                "required": [
                    "type",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/TargetType"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Object describes the target for the rules"
            },
            "OciBrandSafetySegment": {
                "enum": [
                    "gv_adult",
                    "gv_arms",
                    "gv_crime",
                    "gv_death_injury",
                    "gv_download",
                    "gv_drugs",
                    "gv_hatespeech",
                    "gv_military",
                    "gv_obscenity",
                    "gv_terrorism",
                    "gv_tobacco",
                    "gv_safe_adult",
                    "gv_safe_arms",
                    "gv_safe_crime",
                    "gv_safe_death_injury",
                    "gv_safe_download",
                    "gv_safe_drugs",
                    "gv_safe_hatespeech",
                    "gv_safe_military",
                    "gv_safe_obscenity",
                    "gv_safe_terrorism",
                    "gv_safe_tobacco",
                    "gv_crime_other",
                    "gv_crime_serious",
                    "gv_crime_sex",
                    "gv_crime_violent",
                    "gv_death_injury_air",
                    "gv_death_injury_fire",
                    "gv_death_injury_misc",
                    "gv_death_injury_rail",
                    "gv_death_injury_road",
                    "gv_death_injury_sea"
                ],
                "type": "string",
                "description": "Represents Oci standard brand-safety segment."
            },
            "OciTargetingNode": {
                "type": "object",
                "properties": {
                    "operator": {
                        "$ref": "#/components/schemas/TargetingOperator"
                    },
                    "value": {
                        "type": "string"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OciTargetingNode"
                        }
                    }
                },
                "description": "Object represents a single node in a boolean tree."
            },
            "TargetingOperator": {
                "enum": [
                    "Or",
                    "And",
                    "Not",
                    "Value"
                ],
                "type": "string",
                "description": "Defines a targeting operator"
            },
            "ApiResponseOfTargetingEntity": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityWrapperOfTargetingEntity"
                    }
                },
                "description": "Root object for the API response"
            },
            "ApiErrorResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDescription"
                        }
                    }
                },
                "description": "Root object for the API error response"
            },
            "ApiRequestOfTargetingEntity": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EntityWrapperOfTargetingEntity"
                    }
                },
                "description": "Root object containing the API request"
            },
            "EntityWrapperOfTargetingEntity": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/TargetingEntity"
                    }
                },
                "description": "Standard envelope for an entity"
            },
            "ErrorDescription": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "traceId": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "description": "Error structure representing an error message"
            },
            "TargetingEntity": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Can be either domain or bundle"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Can be either blocklist or allowlist"
                    },
                    "data": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityFilter"
                        }
                    }
                },
                "description": "Represents either an allowlisting or a blocklisting rule"
            },
            "EntityFilter": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "Could be a domain or a bundle depending on the context"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    }
                },
                "description": "Represents a filter value for a blocklist or allowlist rule"
            }
        },
        "securitySchemes": {
            "oauth": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://api.criteo.com/oauth2/token",
                        "scopes": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "oauth": []
        }
    ],
    "x-samples-languages": [
        "java",
        "python",
        "php",
        "csharp",
        "javascript",
        "curl",
        "ruby"
    ]
}