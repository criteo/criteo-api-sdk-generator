{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - RetailMedia",
    "version": "2024-07"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/2024-07/retail-media/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/account-management/accounts/{accountId}/brands/add": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Add brands to an account",
        "operationId": "AddBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrands"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRetailMediaBrands"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/account-management/accounts/{accountId}/brands/remove": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Remove brands from an account",
        "operationId": "RemoveBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrands"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRetailMediaBrands"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/account-management/accounts/{accountId}/create-brand-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Brand Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandBrandAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaBrandAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/account-management/accounts/{accountId}/create-seller-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Seller Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandSellerAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfRetailMediaSellerAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/account-management/accounts/{accountId}/sellers": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "Replace the sellers associated with an account",
        "operationId": "UpdateSellers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceCollectionInputOfRetailMediaSeller"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfRetailMediaSeller"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets page of account objects that the current user can access",
        "operationId": "AccountsApi_GetApiV1ExternalAccounts",
        "parameters": [
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{accountId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountBrandsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{accountId}/retailers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountRetailersByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/assets": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates an asset",
        "operationId": "CreateAsset",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "AssetFile"
                ],
                "properties": {
                  "AssetFile": {
                    "type": "string",
                    "description": "The asset binary content",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{accountId}/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a page of Audiences. (deprecated Public API)",
        "operationId": "LegacyGetAudienceV1",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "Limits results to the entity IDs specified; parameter key is repeated, eg. limitToId=1&limitToId=2",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Specifies the maximum number of entities returned in a single page; defaults to 25 entities per page.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Returns the specified page of results given a pageSize; pages are 0-indexed.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of audiences for the supplied account or shared by related retailers.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Create an Audience (deprecated Public API)",
        "operationId": "LegacyCreateAudienceV1",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Audience creation request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1Response"
                }
              }
            }
          },
          "201": {
            "description": "The audience that was just created.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "deprecated": true
      }
    },
    "/2024-07/retail-media/v2/accounts/{accountId}/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a page of Audiences. (deprecated Public API)",
        "operationId": "LegacyGetAudienceV2",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "Limits results to the entity IDs specified; parameter key is repeated, eg. limitToId=1&limitToId=2",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Specifies the maximum number of entities returned in a single page; defaults to 25 entities per page.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Returns the specified page of results given a pageSize; pages are 0-indexed.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of audiences for the supplied account or shared by related retailers.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Create an Audience (deprecated Public API)",
        "operationId": "LegacyUpdateAudienceV2",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Audience creation request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV2"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV2"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmLegacyAudienceCreateInputEntityV2"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2Response"
                }
              }
            }
          },
          "201": {
            "description": "The audience that was just created.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        },
        "deprecated": true
      }
    },
    "/2024-07/retail-media/line-items/{id}/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch keywords associated with the specified line item",
        "operationId": "FetchKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordsModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{id}/keywords/add-remove": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add or Remove keywords from the line item in bulk",
        "operationId": "AddRemoveKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveKeywordsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{id}/keywords/set-bid": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Set bid overrides for associated keywords to the given line item in bulk",
        "operationId": "SetKeywordBids",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBidsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/products": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieve a page of promoted products for a line item",
        "operationId": "FetchPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first item to fetch. Defaults to zero.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum page size to fetch. Defaults to 500.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of attribute names from the response model to compute and return.\r\n            Valid values are `status` and `bidOverride` in any order. Defaults to `status`.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted products associated with the line item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedProductResourceCollectionOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/products/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append a collection of promoted products to a line item",
        "operationId": "AppendPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products appended to the line item"
          },
          "200": {
            "description": "Promoted products appended to the line item with warnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/products/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Remove a collection of promoted products from a line item",
        "operationId": "DeletePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products removed from the line item"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/products/pause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Pause a collection of promoted products associated with a line item",
        "operationId": "PausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/products/unpause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Un-pause a collection of promoted products associated with a line item",
        "operationId": "UnpausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products un-paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{accountId}/catalogs": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "CatalogApi_PostApiV1ExternalAccountCatalogsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfCatalogRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/catalogs/{catalogId}/output": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Output the indicated catalog. Catalogs are only available for retrieval when their associated status request\r\nis at a Success status.\r\nProduces application/x-json-stream of v2021_07 CatalogProduct json objects.",
        "operationId": "CatalogApi_GetApiV1ExternalCatalogOutputByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog download initiated.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": { }
            }
          },
          "204": {
            "description": "Catalog has expired.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": { }
            }
          },
          "400": {
            "description": "The indicated catalog is not available for retrieval, wait for a success status.",
            "content": {
              "application/x-json-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/catalogs/{catalogId}/status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Check the status of a catalog request.",
        "operationId": "CatalogApi_GetApiV1ExternalCatalogStatusByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog request found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/categories": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search categories by text and retailer.",
        "operationId": "CategorySearchApi_GetApi202204ExternalCategories",
        "parameters": [
          {
            "name": "retailerId",
            "in": "query",
            "description": "The retailer id for which Categories fetched",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "textSubstring",
            "in": "query",
            "description": "Query string to search across Categories",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 100.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category202204ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/categories/{categoryId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search for a specific category by categoryId.",
        "operationId": "CategorySearchApi_GetApi202204ExternalCategorieByCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "ID of the desired category",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieval completed and category is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category202204"
                }
              }
            }
          },
          "400": {
            "description": "No IDs were passed in.",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "A non-request input based error occurred in the server.",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/retailers/{retailerId}/pages": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the page types available for the given retailer",
        "operationId": "RetailerApi_GetApi202110ExternalRetailerPagesByRetailerId",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailers to fetch pages for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pages fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalRetailerPages202110"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/creatives": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "CreativesApi_GetApi202110ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202110ListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a creative for an account",
        "operationId": "CreativesApi_PostApi202210ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to create a creative for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeCreateModel202207"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creatives created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/creatives/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "CreativesApi_PostApi202210ExternalAccountCreativesSearchByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-ids",
            "in": "query",
            "description": "Creatives to filter by",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/creatives/{creative-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the specified creative",
        "operationId": "CreativesApi_GetApi202210ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a creative",
        "operationId": "CreativesApi_PutApi202210ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id containing the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeUpdateModel202207"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creative updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/retailers/{retailer-id}/templates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get retailer creative templates",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerTemplatesByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "External retailer id to retrieve creative templates for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Templates found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/retailers/{retailer-id}/templates/{template-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the template for the specified retailer id and template id",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerByRetailerId}Templates{templateId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "Retailer Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "template-id",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template found for the retailer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/reports/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Return an asynchronous Campaigns Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/reports/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Line Items Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/reports/revenue": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Revenue Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncRevenueReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncRevenueReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/reports/{reportId}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the output of an async report",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/reports/{reportId}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the status of an async report",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/balances/{balanceId}/history": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets the balance's historical change data.",
        "operationId": "GetBalanceHistory",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "Balance id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) starting offset in the collection.",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "limitToChangeTypes",
            "in": "query",
            "description": "Comma separated change types string that will be queried.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfBalanceHistoryChangeDataCaptureV1"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/campaigns/{campaignId}/campaign-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get current campaign budget overrides by given external campaign id.",
        "operationId": "GetCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update campaign budget overrides by given external campaign id and new campaign budget overrides settings.",
        "operationId": "UpdateCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New campaign budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            }
          },
          "x-bodyName": "campaignBudgetOverridesInput"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{lineItemId}/line-item-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a collection of monthly and daily budget overrides for the provided line item.",
        "operationId": "GetLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The line item id to get budget overrides for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update line item budget overrides by given external line item id and new line item budget overrides settings.",
        "operationId": "UpdateLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "Line item external id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New line item budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            }
          },
          "x-bodyName": "lineItemBudgetOverridesInput"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/balances": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of balance objects for the given account id",
        "operationId": "GetApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to get balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Create balance for the given account id",
        "operationId": "PostApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to create balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to set when creating a Retail Media Balance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "createBalance"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/balances/{balance-id}": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Get a balance for the given account id and balance id",
        "operationId": "GetApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Balance"
        ],
        "description": "Modify a balance for the given account id",
        "operationId": "PatchApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceModelV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "updateBalanceModel"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/balances/{balance-id}/add-funds": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Add funds to a balance for the given account id",
        "operationId": "PostApiV2ExternalAccountAddFundsByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to add funds to",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options of adding funds to a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddFundsToBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "addFundsToBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/balances/{balance-id}/change-dates": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Change dates of a balance for the given account id",
        "operationId": "PostApiV2ExternalAccountChangeDatesByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify schedule of a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDatesOfBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "changeDatesOfBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/campaigns": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the editable and creatable campaign attributes including all types of budgets for each campaigns in relation to the account id, limited by the campaign ids.",
        "operationId": "Campaigns_GetApi202301ExternalAccountCampaignsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to request the campaign for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a campaign and assign budgets for the given account id with creatable campaign attributes given in request body constrained by business validation. The validation error includes details and source of errors. Pacing can be adjusted and affected by the status of the campaign and the days left on the campaign if auto daily pacing is enabled.",
        "operationId": "Campaigns_PostApi202301ExternalAccountCampaignsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to request the campaign for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Creatable campaign attributes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCampaignV202301"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "campaign"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/accounts/{account-id}/line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of line item objects for the given account id",
        "operationId": "GetApiV2ExternalAccountLineItemsByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToCampaignId",
            "in": "query",
            "description": "The campaign ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limitToType",
            "in": "query",
            "description": "The campaign types that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "enum": [
                "Unknown",
                "Auction",
                "Preferred"
              ],
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLineItemPagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/auction-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the auction line item for the given line item id",
        "operationId": "GetApiV2ExternalAuctionLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the auction line item for the given line item id",
        "operationId": "PutApiV2ExternalAuctionLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionLineItemUpdateModelRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/auction-line-items/{line-item-id}/targeting/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the keyword target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalAuctionLineItemTargetingKeywordsByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/auction-line-items/{line-item-id}/targeting/keywords/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more keywords to targeting on the specified line item.  The resulting state of the keyword target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalAuctionLineItemTargetingKeywordsAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordTarget202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "keywordsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/auction-line-items/{line-item-id}/targeting/keywords/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more keywords from targeting on the specified line item.  The resulting state of the keyword target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalAuctionLineItemTargetingKeywordsDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordTarget202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "keywordsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/balances/{balance-id}/campaigns": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of campaigns for the given balanceId",
        "operationId": "BalancesApi_GetApi202110ExternalBalanceCampaignsByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to get campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/balances/{balance-id}/campaigns/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "appends one or more campaigns to the specified balance",
        "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsAppendByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to add campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The campaigns to append",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "campaigns"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/balances/{balance-id}/campaigns/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Removes one or more campaigns on the specified balance",
        "operationId": "BalancesApi_PostApi202110ExternalBalanceCampaignsDeleteByBalanceId",
        "parameters": [
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to remove campaigns from",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The campaigns to append",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCampaign202110ListRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "campaigns"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceCampaign202110PagedListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/campaigns/{campaign-id}/auction-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of auction line item objects for the given campaign id",
        "operationId": "GetApiV2ExternalCampaignAuctionLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemPagedListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates new auction line item with the specified settings",
        "operationId": "PostApiV2ExternalCampaignAuctionLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuctionLineItemCreateModelRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuctionLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/campaigns/{campaign-id}/preferred-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of preferred line item objects for the given campaign id",
        "operationId": "LineItemsApi_GetApi202110ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110PagedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110PagedListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates a new preferred line item with the specified settings",
        "operationId": "LineItemsApi_PostApi202110ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemCreateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/campaigns/{campaignId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the editable and creatable campaign attributes including all types of budgets given the campaign id",
        "operationId": "Campaigns_GetApi202301ExternalCampaignByCampaignId",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Campaign Id of the campaign detail",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Edit a campaign for the given campaign id with a given editable attributes. This will return updated creatable and editable attributes of the campaign as the result of the operation. Pacing can be adjusted and affected by the status of the campaign and the days left on the campaign if auto daily pacing is enabled.",
        "operationId": "Campaigns_PutApi202301ExternalCampaignByCampaignId",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "Campaign Id of the updating campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Editable campaign attributes",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutCampaignV202301"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "campaign"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCampaignV202301"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the line item for the given line item id",
        "operationId": "GetApiV2ExternalLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonLineItemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/line-items/{line-item-id}/bid-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get bid multipliers by line item",
        "operationId": "LineItems_GetApi202301ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Replace bid multipliers on a line item",
        "operationId": "LineItems_PutApi202301ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemBidMultipliersRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the preferred line item for the given line item id",
        "operationId": "LineItemsApi_GetApi202110ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the preferred line item for the given line item id",
        "operationId": "LineItemsApi_PutApi202110ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItem202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the add to basket target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the add to basket target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAddToBasketByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The add to basket target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketTarget202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "addToBasketTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more add to basket ids to targeting on the specified line item.  The resulting state of the add to basket target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/add-to-basket/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more add to basket ids from targeting on the specified line item.  The resulting state of the add to basket target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAddToBasketDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToBasketIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToBasketTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/audiences": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the audience target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the audience target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingAudiencesByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The audience target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceTarget202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "audienceTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more audiences ids to targeting on the specified line item.  The resulting state of the audience target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Audience ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/audiences/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more audiences ids from targeting on the specified line item.  The resulting state of the audience target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingAudiencesDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Audience ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudienceIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/stores": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint gets the store target on the specified line item.",
        "operationId": "TargetingApi_GetApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint sets the scope of the store target on the specified line item.",
        "operationId": "TargetingApi_PutApi202110ExternalPreferredLineItemTargetingStoresByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The store target to set the scope for",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreTarget202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "storeTarget"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/stores/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint appends one or more store ids to targeting on the specified line item.  The resulting state of the store target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresAppendByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Store ids to append to the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToAppend"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    },
    "/2024-07/retail-media/preferred-line-items/{line-item-id}/targeting/stores/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "This endpoint removes one or more store ids from targeting on the specified line item.  The resulting state of the store target is returned.",
        "operationId": "TargetingApi_PostApi202110ExternalPreferredLineItemTargetingStoresDeleteByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to interact with",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Store ids to remove from the target",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreIdsUpdateModel202110Request"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "idsToRemove"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreTarget202110Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-response": true
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Used for the /me endpoint. Contains information about the currently authenticated application that we accept to give to our clients",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceOutcomeOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrands"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object.",
        "x-used-in-response": true
      },
      "EntityResourceOutcomeOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourceOfRetailMediaAccount"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "x-used-in-response": true
      },
      "ValueResourceCollectionOutcomeOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfRetailMediaSeller"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects.",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfAccount": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndAccountAndAccount"
            }
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfBrand": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndBrandAndBrand"
            }
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfRetailer": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndRetailerAndRetailer"
            }
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "ValueResourceInputOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrands"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaBrandAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfRetailMediaSellerAccountCreation": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRetailMediaSellerAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceCollectionInputOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfRetailMediaSeller"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for several value objects.",
        "x-used-in-request": true
      },
      "ValueResourceOfRetailMediaBrands": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaBrands"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "SdkApiRestCommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "EntityResourceOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaAccount"
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaSeller"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "PageMetadata": {
        "required": [
          "currentPageIndex",
          "currentPageSize"
        ],
        "type": "object",
        "properties": {
          "totalItemsAcrossAllPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currentPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "currentPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request",
        "x-used-in-response": true
      },
      "CommonError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API Common error structure",
        "x-used-in-response": true
      },
      "CommonWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API Base common warning",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndAccountAndAccount": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAccount"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndBrandAndBrand": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalBrand"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndRetailerAndRetailer": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailer"
          }
        },
        "additionalProperties": false,
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "ValueResourceOfRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaBrandAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ValueResourceOfRetailMediaSellerAccountCreation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaSellerAccountCreation"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "ExternalRetailMediaBrands": {
        "required": [
          "brandIds"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false,
        "description": "A collection of brand ids",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true,
            "x-optional-in-response": true
          },
          "companyName": {
            "type": "string",
            "description": "Paying entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries associated with the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currencyId": {
            "type": "string",
            "description": "the currency for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "parentAccountLabel": {
            "type": "string",
            "description": "parent account label for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaSeller": {
        "required": [
          "retailerId",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "sellerId": {
            "type": "string",
            "description": "the seller id"
          },
          "retailerId": {
            "type": "integer",
            "description": "the retailer id",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "used to define the exact seller linked with an account",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalAccount": {
        "required": [
          "countries",
          "currency",
          "name",
          "parentAccountLabel",
          "timeZone",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "enum": [
              "unknown",
              "supply",
              "demand"
            ],
            "type": "string"
          },
          "subtype": {
            "enum": [
              "unknown",
              "brand",
              "seller"
            ],
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "currency": {
            "type": "string"
          },
          "parentAccountLabel": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "companyName": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Account used to launch campaigns and line items",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalBrand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Brand used to represent a collection of products sold under the same umbrella name",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailer": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string"
          },
          "campaignEligibilities": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "auction",
                "preferred",
                "offsite",
                "offsiteCpc"
              ],
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A Retail Media Retailer used to represent a selection of products from multiple brands",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalRetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "list of brands to link to the new account",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account",
        "x-used-in-request": true
      },
      "ExternalRetailMediaSellerAccountCreation": {
        "required": [
          "sellers"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalRetailMediaSeller"
            },
            "description": "list of sellers to associate to the new account"
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account",
        "x-used-in-request": true
      },
      "AssetResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssetResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class implementing the response of the Criteo API as described in API Guild Guidelines with a single entity as body",
        "x-used-in-response": true
      },
      "AssetResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Asset"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents an entity in a guild compliant way",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Asset": {
        "required": [
          "fileExtension"
        ],
        "type": "object",
        "properties": {
          "fileExtension": {
            "type": "string",
            "description": "The file extension that is asset is representing. Example: jpg, png, gif or pdf."
          },
          "fileLocation": {
            "type": "string",
            "description": "A url pointing towards the static file the asset represents.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Handles pointing towards binary content that advertisers can use later on, for example in their creatives.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceGetEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "RmLegacyAudienceCreateEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-used-in-response": true
      },
      "RmLegacyAudienceGetEntityV2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "x-used-in-response": true
      },
      "RmLegacyAudienceCreateEntityV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-used-in-response": true
      },
      "RmLegacyAudienceCreateInputEntityV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity.",
        "x-used-in-request": true
      },
      "RmLegacyAudienceCreateInputEntityV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity.",
        "x-used-in-request": true
      },
      "RmLegacyAudienceGetEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "audienceType": {
            "enum": [
              "customerList",
              "userBehavior"
            ],
            "type": "string",
            "description": "Type of the audience.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmLegacyAudienceCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceGetEntityV2Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmLegacyAudienceCreateEntityV2Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceCreateEntityV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceGetEntityV1": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "retailerId": {
            "type": "string",
            "description": "ID of the retailer associated with this audience"
          },
          "userBehaviorDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV1"
          },
          "customerListDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentCustomerList"
          }
        },
        "description": "Audience definition of people of interest for a marketer.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSummary",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceCreateEntityV1": {
        "required": [
          "lookbackWindow",
          "name",
          "retailerId",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "viewer",
              "buyer",
              "addToCarter"
            ],
            "type": "string",
            "description": "Type of the user"
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The brands to target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The categories to target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "integer",
            "description": "ID of the retailer associated with this audience",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience definition",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        },
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceGetEntityV2": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "string",
            "description": "ID of the retailer associated with this audience"
          },
          "userBehaviorDetails": {
            "$ref": "#/components/schemas/RmLegacyAudienceUserBehaviorDetailsV2"
          },
          "customerListDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentCustomerList"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience definition of people of interest for a marketer",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceCreateEntityV2": {
        "required": [
          "name",
          "retailerId",
          "userBehaviorDetails"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "integer",
            "description": "ID of the retailer associated with this audience",
            "format": "int64"
          },
          "userBehaviorDetails": {
            "$ref": "#/components/schemas/RmLegacyAudienceUserBehaviorCreateV2"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience definition",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        },
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacySegmentUserBehaviorV1": {
        "required": [
          "lookbackWindow",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "viewer",
              "buyer",
              "addToCarter"
            ],
            "type": "string",
            "description": "Type of shopper activity used to generate the audience."
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "targetType": {
            "enum": [
              "brand",
              "category"
            ],
            "type": "string",
            "description": "Type of target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "targetIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The categories to target",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Audience definition of people based on what they visited",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacySegmentCustomerList": {
        "required": [
          "isShared",
          "size"
        ],
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "description": "Number of users in the customer list audience."
          },
          "isShared": {
            "type": "boolean",
            "description": "Indicate if the audience is shared."
          }
        },
        "description": "Audience definition of people based on a customer list",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceUserBehaviorDetailsV2": {
        "required": [
          "inclusiveSegment"
        ],
        "type": "object",
        "properties": {
          "inclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV2"
          },
          "exclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV2"
          }
        },
        "description": "User Behavior Details.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacyAudienceUserBehaviorCreateV2": {
        "required": [
          "inclusiveSegment"
        ],
        "type": "object",
        "properties": {
          "inclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorCreateV2"
          },
          "exclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorCreateV2"
          }
        },
        "description": "User Behavior to include and optionally exclude.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "RmLegacySegmentUserBehaviorV2": {
        "required": [
          "lookbackWindow",
          "userAction"
        ],
        "type": "object",
        "properties": {
          "userAction": {
            "enum": [
              "buy",
              "view",
              "addToCart"
            ],
            "type": "string",
            "description": "Type of shopper activity used to generate the audience."
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The categories to target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The brands to target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minPrice": {
            "type": "number",
            "description": "The min price of targeted skus.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxPrice": {
            "type": "number",
            "description": "The max price of targeted skus.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Audience definition of people based on what they visited",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmLegacySegmentUserBehaviorCreateV2": {
        "required": [
          "lookbackWindow",
          "userAction"
        ],
        "type": "object",
        "properties": {
          "userAction": {
            "enum": [
              "buy",
              "view",
              "addToCart"
            ],
            "type": "string",
            "description": "Type of shopper activity used to generate the audience."
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The categories to target",
            "nullable": true,
            "x-optional-in-response": true
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The brands to target",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "User Behavior Details.",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "KeywordsModelResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "data": {
            "$ref": "#/components/schemas/KeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Response object containing keywords associated with a line item.",
        "x-used-in-response": true
      },
      "ResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "PromotedProductResourceCollectionOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "meta": {
            "$ref": "#/components/schemas/ProductMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing promoted products.",
        "x-used-in-response": true
      },
      "ProductResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "AddRemoveKeywordsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to add or remove keywords from a line item",
        "x-used-in-request": true
      },
      "SetBidsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetBidsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to set bid overrides for keywords associated with a line item",
        "x-used-in-request": true
      },
      "PromotedProductResourceCollectionInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request object containing promoted products to be appended, deleted, paused or unpaused.",
        "x-used-in-request": true
      },
      "KeywordsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/KeywordsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmcaCommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "type": "integer",
            "description": "The problem's HTTP Status code.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": { },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "ProductMetadata": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Zero based offset of the first item in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "count": {
            "type": "integer",
            "description": "Total number of items available.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "responseCount": {
            "type": "integer",
            "description": "Number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata about the response. Used for pagination.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PromotedProductResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PromotedProduct"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing a promoted product.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "AddRemoveKeywordsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "SetBidsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SetBidsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "KeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/KeywordDataModel"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PromotedProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A retailer defined SKU ID for the promoted product.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "bidOverride": {
            "type": "number",
            "description": "The bid override for the promoted product for this line item. Ignored unless adding a product.",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "$ref": "#/components/schemas/LineItemProductStatus"
          }
        },
        "additionalProperties": false,
        "description": "A promoted product.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "AddRemoveKeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddRemoveKeywordModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "SetBidsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetBidModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "KeywordDataModel": {
        "type": "object",
        "properties": {
          "reviewState": {
            "$ref": "#/components/schemas/ReviewStateModel"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywordsModel"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override"
      },
      "LineItemProductStatus": {
        "enum": [
          "unknown",
          "active",
          "paused"
        ],
        "type": "string",
        "description": "The status of a promoted product in the context of the line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "AddRemoveKeywordModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword to be added or removed",
        "x-used-in-request": true
      },
      "SetBidModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override",
        "x-used-in-request": true
      },
      "ReviewStateModel": {
        "enum": [
          "InReview",
          "Recommended",
          "Approved",
          "AutoApproved",
          "Rejected",
          "AutoRejected"
        ],
        "type": "string",
        "description": "The state of a keyword in the context of a line item."
      },
      "MatchTypeModel": {
        "enum": [
          "PositiveExactMatch",
          "NegativeExactMatch",
          "NegativeBroadMatch"
        ],
        "type": "string",
        "description": "The match type of a keyword.",
        "x-used-in-request": true
      },
      "InputKeywordsModel": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords to be added or removed from a line item."
      },
      "JsonApiSingleResponseOfCatalogStatus": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-used-in-response": true
      },
      "Category202204ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCategory202204"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources",
        "x-used-in-response": true
      },
      "Category202204": {
        "required": [
          "text",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Category Text"
          },
          "name": {
            "type": "string",
            "description": "Category Name"
          },
          "parentId": {
            "type": "string",
            "description": "Category ParentId"
          }
        },
        "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID",
        "x-used-in-response": true
      },
      "ExternalRetailerPages202110": {
        "type": "object",
        "properties": {
          "pageTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of valid pages for a retailer"
          }
        },
        "description": "Wraps a list of valid pages for a retailer",
        "x-used-in-response": true
      },
      "JsonApiRequestOfCatalogRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "x-used-in-request": true
      },
      "JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogStatus"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "ResourceOfCategory202204": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Category202204"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category."
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value."
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem."
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "string",
            "description": "Technical information, only used in non-prod environments"
          }
        },
        "description": "Data model for common error or warning",
        "x-used-in-response": true
      },
      "JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogRequest"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "ExternalCatalogStatus": {
        "required": [
          "status",
          "currency",
          "rowCount",
          "fileSizeBytes",
          "md5Checksum",
          "createdAt",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "unknown",
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "description": "An enumeration of the status of the catalog."
          },
          "currency": {
            "type": "string",
            "description": "An ISO4217 representation of the currency products are listed under in this catalog.",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "md5Checksum": {
            "type": "string",
            "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "An optional information message intended for developer consumption.",
            "nullable": true
          }
        },
        "description": "The status of an asynchronous request to generate a catalog",
        "x-used-in-response": true
      },
      "ExternalCatalogRequest": {
        "type": "object",
        "properties": {
          "format": {
            "enum": [
              "json-newline"
            ],
            "type": "string",
            "default": "json-newline"
          },
          "brandIdFilter": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          }
        },
        "description": "A request for a catalog under the specified format. Currently \"json-newline\" is supported.",
        "x-used-in-request": true
      },
      "Creative202110ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative202110"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative202210Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative202210"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative202210ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative202210"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "TemplateListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfTemplate"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "TemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfTemplate"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "CreativeCreateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "nullable": true
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Create model of a creative",
        "x-used-in-request": true
      },
      "CreativeUpdateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Update model of a creative",
        "x-used-in-request": true
      },
      "ResourceOfCreative202110": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative202110"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true
      },
      "ResourceOfCreative202210": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative202210"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfTemplate": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Template"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TemplateVariableValue": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the template variable the value is applied to"
          },
          "textVariableValue": {
            "$ref": "#/components/schemas/TextVariableValue"
          },
          "choiceVariableValue": {
            "$ref": "#/components/schemas/ChoiceVariableValue"
          },
          "colorVariableValue": {
            "$ref": "#/components/schemas/ColorVariableValue"
          },
          "filesVariableValue": {
            "$ref": "#/components/schemas/FilesVariableValue"
          },
          "hyperlinkVariableValue": {
            "$ref": "#/components/schemas/HyperlinkVariableValue"
          },
          "videoVariableValue": {
            "$ref": "#/components/schemas/VideoVariableValue"
          }
        },
        "additionalProperties": false,
        "description": "A value for a variable in a creative template.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "Creative202110": {
        "required": [
          "name",
          "status",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "enum": [
              "Ready",
              "In_Use",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "format": "string"
          },
          "brandId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "integer",
            "format": "int32"
          },
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata and usage info of a preferred deals creative",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Creative202210": {
        "required": [
          "name",
          "status",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "creativeFormatType",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "status": {
            "enum": [
              "Ready",
              "In_Use",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "format": "string"
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Template Name"
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32"
          },
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated Line Item Ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "creativeFormatType": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "format": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment202210"
            },
            "description": "Environment type (e.g. mobile, web, app)"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "A creative entity",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "Template": {
        "required": [
          "creativeFormat",
          "name",
          "skuCollectionMin",
          "skuPerCollectionMin",
          "allCollectionsMandatory",
          "createdAt",
          "updatedAt",
          "sections"
        ],
        "type": "object",
        "properties": {
          "creativeFormat": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "The kind of creative this template can be used to build.",
            "format": "string"
          },
          "name": {
            "type": "string",
            "description": "The name of the template"
          },
          "skuCollectionMin": {
            "type": "integer",
            "description": "Minimum number of skus in the collection",
            "format": "int32"
          },
          "skuCollectionMax": {
            "type": "integer",
            "description": "Maximum number of skus in the collection",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "skuPerCollectionMin": {
            "type": "integer",
            "description": "Minimum number of skus per collection",
            "format": "int32"
          },
          "skuPerCollectionMax": {
            "type": "integer",
            "description": "Maximum number of skus per collection",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "displayableSkusMax": {
            "type": "integer",
            "description": "Maximum number of displayable skus",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "allCollectionsMandatory": {
            "type": "boolean",
            "description": "Marks whether or not all collections are mandatory"
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which the template was created",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the template was updated",
            "format": "date-time"
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            },
            "description": "The sections holding various template variables"
          }
        },
        "additionalProperties": false,
        "description": "A template for creating creatives.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TextVariableValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The displayed text",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template text variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ChoiceVariableValue": {
        "required": [
          "chosenOptions"
        ],
        "type": "object",
        "properties": {
          "chosenOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The chosen options"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template choice variable (among different accepted options)",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ColorVariableValue": {
        "type": "object",
        "properties": {
          "color": {
            "pattern": "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type": "string",
            "description": "The displayed color (HEX format)",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template color variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "FilesVariableValue": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The assets representing the images to be displayed"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template file variable (one or several files), like images in a creative",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "HyperlinkVariableValue": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to redirect to",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template hyperlink variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "VideoVariableValue": {
        "required": [
          "url",
          "width",
          "height",
          "duration"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "The vast video url"
          },
          "width": {
            "type": "integer",
            "description": "The video's width",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The video's height",
            "format": "int32"
          },
          "duration": {
            "minLength": 1,
            "type": "string",
            "description": "The video's duration"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template video variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PageTypeEnvironment202210": {
        "type": "object",
        "properties": {
          "pageType": {
            "enum": [
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Creative PageType",
            "format": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "description": "Creative format, defining where the creative can be served",
              "format": "string"
            },
            "description": "List of environments per PageType",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The PageType-Environment Tuples for creatives",
        "x-used-in-response": true
      },
      "Section": {
        "required": [
          "templateVariables"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "templateVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            }
          }
        },
        "additionalProperties": false,
        "description": "Section object that hold template variables",
        "nullable": true,
        "x-used-in-response": true
      },
      "TemplateVariable": {
        "required": [
          "id",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the variable"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the variable is required"
          },
          "type": {
            "enum": [
              "Text",
              "Choice",
              "Color",
              "Files",
              "Hyperlink"
            ],
            "type": "string",
            "description": "The type of the variable",
            "format": "string"
          },
          "choiceVariableSpecification": {
            "$ref": "#/components/schemas/ChoiceVariableSpecification"
          },
          "textVariableSpecification": {
            "$ref": "#/components/schemas/TextVariableSpecification"
          },
          "filesVariablesSpecification": {
            "$ref": "#/components/schemas/FilesVariablesSpecification"
          }
        },
        "additionalProperties": false,
        "description": "A variable in a creative template",
        "x-used-in-response": true
      },
      "ChoiceVariableSpecification": {
        "required": [
          "options"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChoiceOption"
            },
            "description": "The available options"
          },
          "maxSelected": {
            "type": "integer",
            "description": "The maximum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minSelected": {
            "type": "integer",
            "description": "The minimum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Specification of choice variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TextVariableSpecification": {
        "type": "object",
        "properties": {
          "maxChars": {
            "type": "integer",
            "description": "The maximum amount of characters accepted for the text",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Specification of a text variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "FilesVariablesSpecification": {
        "required": [
          "extensions"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Jpeg",
                "Png",
                "Gif",
                "Pdf"
              ],
              "type": "string",
              "description": "File extensions supported in templates",
              "format": "string"
            },
            "description": "The accepted file extensions"
          },
          "maxBytes": {
            "type": "integer",
            "description": "The maximum amount of bytes per file",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minFiles": {
            "type": "integer",
            "description": "The minimum amount of files requires",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxFile": {
            "type": "integer",
            "description": "The maximum amount of files required",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Specification of a file variable",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ChoiceOption": {
        "required": [
          "dependentVariables",
          "id"
        ],
        "type": "object",
        "properties": {
          "dependentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            },
            "description": "Template variables unblocked when the option is chosen"
          },
          "id": {
            "type": "string",
            "description": "The id of the option"
          }
        },
        "additionalProperties": false,
        "description": "An option given in a choice",
        "x-used-in-response": true
      },
      "AsyncReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatusResponseResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "Async Report response format",
        "x-used-in-response": true
      },
      "ReportOutcome": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "AsyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncRevenueReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncRevenueReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "StatusResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/StatusResponse"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "AsyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncCampaignsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncLineItemsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncRevenueReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncRevenueReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "md5CheckSum": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Status of an async report request",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "AsyncCampaignsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on"
          },
          "id": {
            "type": "string",
            "description": "Campaign id to report on"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Campaigns report body request",
        "x-used-in-request": true
      },
      "AsyncLineItemsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to report on"
          },
          "id": {
            "type": "string",
            "description": "Line Item id to report on"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Line Items report body request",
        "x-used-in-request": true
      },
      "AsyncRevenueReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Supply account ids to report on"
          },
          "id": {
            "type": "string",
            "description": "Supply account id to report on"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Retailer ids to filter"
          },
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account ids to filter"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to filter"
          },
          "reportType": {
            "enum": [
              "advertiser",
              "environment",
              "pageType",
              "productCategory",
              "brand"
            ],
            "type": "string",
            "description": "Type of report"
          },
          "revenueType": {
            "enum": [
              "auction",
              "preferred"
            ],
            "type": "string",
            "description": "Type of revenue"
          },
          "soldBy": {
            "enum": [
              "directSold",
              "indirectSold",
              "privateMarket"
            ],
            "type": "string",
            "description": "Filter on the seller: Indirect Sold, Direct Sold or Private Market"
          },
          "buyType": {
            "enum": [
              "auction",
              "preferredDeals",
              "sponsorship"
            ],
            "type": "string",
            "description": "Filter on buy type: Auction, Preferred Deals or Sponsorship"
          },
          "advertiserTypes": {
            "type": "array",
            "items": {
              "enum": [
                "retailer",
                "brand",
                "seller"
              ],
              "type": "string"
            },
            "description": "Filter on the type of advertiser: retailer, brand, seller"
          },
          "skuRelations": {
            "type": "array",
            "items": {
              "enum": [
                "sameSku",
                "sameParentSku",
                "sameCategory",
                "sameBrand",
                "sameSeller"
              ],
              "type": "string"
            },
            "description": "Filter on sku relations: Same SKU, Same Parent SKU, Same Category, Same Brand or Same Seller"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "parentAccount",
                "accountId",
                "accountName",
                "accountTypeName",
                "advertiserType",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "campaignStartDate",
                "campaignEndDate",
                "lineItemId",
                "lineItemName",
                "lineItemStartDate",
                "lineItemEndDate",
                "lineItemStatus",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "placementId",
                "placementName",
                "pageTypeName",
                "environment",
                "pageCategory",
                "advProductId",
                "advProductName",
                "advProductGtin",
                "advProductMpn",
                "buyType",
                "soldBy",
                "saleChannel",
                "salesChannel",
                "attributionSettings",
                "activityType",
                "keyword",
                "skuRelation",
                "retailerCategoryId",
                "retailerCategoryName",
                "taxonomyBreadcrumb",
                "taxonomy1Id",
                "taxonomy1Name",
                "taxonomy2Id",
                "taxonomy2Name",
                "taxonomy3Id",
                "taxonomy3Name",
                "taxonomy4Id",
                "taxonomy4Name",
                "taxonomy5Id",
                "taxonomy5Name",
                "taxonomy6Id",
                "taxonomy6Name",
                "taxonomy7Id",
                "taxonomy7Name"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "numberOfCampaigns",
                "numberOfLineItems",
                "numberOfSkus",
                "skuPrice",
                "pageViews",
                "impressions",
                "productClicks",
                "placementClicks",
                "clicks",
                "sales",
                "units",
                "transactions",
                "assistedSales",
                "assistedUnits",
                "revenue",
                "openAuctionRevenue",
                "preferredDealsRevenue",
                "ctr",
                "cr",
                "cpc",
                "cpm",
                "roas",
                "workingMedia",
                "netRevenue",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoResumed",
                "videoPaused",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Revenue report body request",
        "x-used-in-request": true
      },
      "PageOfBalanceHistoryChangeDataCaptureV1": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceHistoryChangeDataCaptureV1"
            }
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of items with metadata for offset and limit based paging.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceInputOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "ValueResourceInputOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "Metadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request.",
        "x-used-in-response": true
      },
      "BalanceHistoryChangeDataCaptureV1": {
        "required": [
          "changeDetails",
          "changeType",
          "dateOfModification",
          "modifiedByUser"
        ],
        "type": "object",
        "properties": {
          "dateOfModification": {
            "type": "string",
            "description": "Date when data change has occured.",
            "format": "date-time"
          },
          "modifiedByUser": {
            "type": "string",
            "description": "Username who modified the insertion order."
          },
          "changeType": {
            "enum": [
              "BalanceCreated",
              "BalanceAdded",
              "BalanceRemoved",
              "BalanceUncapped",
              "BalanceCapped",
              "EndDate",
              "StartDate",
              "BalanceName",
              "PoNumber",
              "ValueAdd",
              "Unknown"
            ],
            "type": "string",
            "description": "Represent the type of change states of the history."
          },
          "changeDetails": {
            "$ref": "#/components/schemas/ChangeDetailsV1"
          },
          "memo": {
            "type": "string",
            "description": "Memo associate with the insertion order modification.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Data model represents the data change capture of balance history.",
        "x-used-in-response": true
      },
      "ValueResourceOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/CampaignBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LineItemBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "ChangeDetailsV1": {
        "type": "object",
        "properties": {
          "previousValue": {
            "type": "string",
            "description": "Previous value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "changeValue": {
            "type": "string",
            "description": "Change detail of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Change details of a property of the balance.",
        "x-used-in-response": true
      },
      "CampaignBudgetOverrides": {
        "required": [
          "dailyBudgetOverrides",
          "monthlyBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "monthlyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMonthlyBudgetOverride"
            },
            "description": "Campaign budget override monthly part, chronological order restricted."
          },
          "dailyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignDailyBudgetOverride"
            },
            "description": "Campaign budget override daily part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Campaign budget overrides including Monthly and Daily budget overrides.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "LineItemBudgetOverrides": {
        "required": [
          "dailyLineItemBudgetOverrides",
          "monthlyLineItemBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "monthlyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyLineItemBudegetOverride"
            },
            "description": "Line item budget override monthly part, chronological order restricted."
          },
          "dailyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyLineItemBudgetOverride"
            },
            "description": "Line item budget override daily part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Line item budget overrides including Monthly and Daily budget overrides.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "CampaignMonthlyBudgetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign monthly budget override.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "CampaignDailyBudgetOverride": {
        "required": [
          "duration",
          "maxDailySpend"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign daily budget override.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "MonthlyLineItemBudegetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a monthly budget override",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "DailyLineItemBudgetOverride": {
        "required": [
          "duration"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a daily budget override",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "PagedResourceCollectionOutcomeOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "BalanceResponseV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-used-in-response": true
      },
      "JsonApiPageResponseOfCampaignV202301": {
        "required": [
          "metadata",
          "data"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301"
            }
          }
        },
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-used-in-response": true
      },
      "JsonApiSingleResponseOfCampaignV202301": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-used-in-response": true
      },
      "CommonLineItemPagedListResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCommonLineItem"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "AuctionLineItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "KeywordTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfKeywordTarget202110"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "BalanceCampaign202110PagedListResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "AuctionLineItemPagedListResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfAuctionLineItem"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "PreferredLineItem202110PagedListResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPreferredLineItem202110"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "PreferredLineItem202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItem202110"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "CommonLineItemResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCommonLineItem"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "JsonApiSingleResponseOfLineItemBidMultipliers": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersAndLineItemBidMultipliers"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            }
          }
        },
        "description": "Data model for the response of a line item bid multiplier",
        "x-used-in-response": true
      },
      "LineItemBidMultipliersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliers"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource",
        "x-used-in-response": true
      },
      "AddToBasketTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "AudienceTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "StoreTarget202110Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a value type resource outcome",
        "x-used-in-response": true
      },
      "CreateBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreateBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "UpdateBalanceModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfUpdateBalanceModelV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "AddFundsToBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAddFundsToBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "ChangeDatesOfBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfChangeDatesOfBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "PostCampaignV202301": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCampaignAttributesV202301AndCampaignV202301"
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Campaign",
        "x-used-in-request": true
      },
      "AuctionLineItemUpdateModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfAuctionLineItemUpdateModel"
          }
        },
        "description": "Data model for an input resource",
        "x-used-in-request": true
      },
      "KeywordTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfKeywordTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "BalanceCampaign202110ListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceCampaign202110"
            }
          }
        },
        "description": "A class implementing the request of the Criteo API as described in API Guild Guidelines with a collection of entities as body\r\nhttps://criteo.atlassian.net/wiki/spaces/GUA/pages/1564541212/Response+Body+Guidelines",
        "x-used-in-request": true
      },
      "AuctionLineItemCreateModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfAuctionLineItemCreateModel"
          }
        },
        "description": "Data model for a create input resource",
        "x-used-in-request": true
      },
      "PreferredLineItemCreateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfPreferredLineItemCreateModel202110"
          }
        },
        "description": "Data model for a create input resource",
        "x-used-in-request": true
      },
      "PutCampaignV202301": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithExternalIdOfEditableCampaignAttributesV202301AndCampaignV202301"
          }
        },
        "description": "An object that represents the available options to set when editing a Retail Media Campaign",
        "x-used-in-request": true
      },
      "LineItemBidMultipliersRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliers"
          }
        },
        "description": "Data model for an input resource",
        "x-used-in-request": true
      },
      "PreferredLineItemUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemUpdateModel202110"
          }
        },
        "description": "Data model for an input resource",
        "x-used-in-request": true
      },
      "AddToBasketTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AddToBasketIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAddToBasketIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AudienceTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "AudienceIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfAudienceIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "StoreTarget202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreTarget202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "StoreIdsUpdateModel202110Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueTypeResourceOfStoreIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type input resource",
        "x-used-in-request": true
      },
      "ResourceOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BalanceResponseV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndCampaignV202301AndCampaignV202301": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/CampaignV202301"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-response": true
      },
      "ResourceOfCommonLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalCommonLineItem"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ResourceOfAuctionLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItem"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "ValueTypeResourceOfKeywordTarget202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalKeywordTarget202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ResourceOfBalanceCampaign202110": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalBalanceCampaign202110"
          }
        },
        "description": "A class that represents an entity in a guild compliant way",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ResourceOfPreferredLineItem202110": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItem202110"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersAndLineItemBidMultipliers": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/LineItemBidMultipliers"
          }
        },
        "description": "Response object for line item bid multiplier calls",
        "x-used-in-response": true
      },
      "ResourceOfLineItemBidMultipliers": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LineItemBidMultipliers"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "ValueTypeResourceOfAddToBasketTarget202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAddToBasketTarget202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAudienceTarget202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAudienceTarget202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ValueTypeResourceOfStoreTarget202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalStoreTarget202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ResourceOfCreateBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfUpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateBalanceModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfAddFundsToBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AddFundsToBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeDatesOfBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "JsonApiBodyWithoutIdOfCampaignAttributesV202301AndCampaignV202301": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/CampaignAttributesV202301"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "ResourceOfAuctionLineItemUpdateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItemUpdateModel"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "InputResourceOfAuctionLineItemCreateModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAuctionLineItemCreateModel"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "InputResourceOfPreferredLineItemCreateModel202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemCreateModel202110"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "JsonApiBodyWithExternalIdOfEditableCampaignAttributesV202301AndCampaignV202301": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id"
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/EditableCampaignAttributesV202301"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-used-in-request": true
      },
      "ResourceOfPreferredLineItemUpdateModel202110": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemUpdateModel202110"
          }
        },
        "description": "Data model for a Resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAddToBasketIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAddToBasketIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfAudienceIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAudienceIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "ValueTypeResourceOfStoreIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalStoreIdsUpdateModel202110"
          }
        },
        "description": "Data model for a value type resource",
        "x-used-in-request": true
      },
      "BalanceResponseV2": {
        "required": [
          "name",
          "startDate",
          "balanceType",
          "spendType",
          "privateMarketBillingType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal",
            "nullable": true
          },
          "spent": {
            "type": "number",
            "description": "Amount of spent funds of the balance.",
            "format": "decimal",
            "nullable": true
          },
          "remaining": {
            "type": "number",
            "description": "Amount of remaining funds of the balance.",
            "format": "decimal",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "scheduled",
              "active",
              "ended"
            ],
            "type": "string",
            "description": "Status of the balance."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time of the balance.",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Update time of the balance.",
            "format": "date-time"
          },
          "balanceType": {
            "enum": [
              "unknown",
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Type of the balance."
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Spend Type of the balance."
          },
          "privateMarketBillingType": {
            "enum": [
              "notApplicable",
              "billByRetailer",
              "billByCriteo",
              "unknown"
            ],
            "type": "string",
            "description": "Billing type for Private Market of the balance."
          }
        },
        "description": "A Retail Media Balance used to determine the funds available for any or all campaigns in an account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CampaignV202301": {
        "required": [
          "accountId",
          "promotedBrandIds",
          "budgetSpent",
          "budgetRemaining",
          "createdAt",
          "updatedAt",
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "long-id"
          },
          "promotedBrandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "budgetSpent": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "inactive",
              "scheduled",
              "ended"
            ],
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string",
            "default": "auction"
          },
          "drawableBalanceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string",
            "default": "30D"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "default": "none"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A Retail Media Campaign used to represent an advertiser's marketing objective",
        "x-used-in-response": true
      },
      "ExternalCommonLineItem": {
        "required": [
          "name",
          "type",
          "startDate",
          "targetRetailerId",
          "campaignId",
          "budgetRemaining",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "budgetSpent": {
            "type": "number",
            "format": "double"
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A common line item to hold line item information shared between preferred and auction line items",
        "x-used-in-response": true
      },
      "ExternalAuctionLineItem": {
        "required": [
          "name",
          "startDate",
          "targetRetailerId",
          "campaignId",
          "budgetRemaining",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "default": false
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "budgetSpent": {
            "type": "number",
            "format": "double"
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          }
        },
        "description": "A Retail Media Auction Line Item used to hold bid settings for one or many promoted products on a single retailer",
        "x-used-in-response": true
      },
      "ExternalKeywordTarget202110": {
        "required": [
          "keywords"
        ],
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "enum": [
                "unknown",
                "negativeExact",
                "negativeBroad"
              ],
              "type": "string"
            },
            "description": "Keywords that targeting specifications exist for"
          }
        },
        "description": "Identifies keyword targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalBalanceCampaign202110": {
        "type": "object",
        "description": "Campaigns related to the balance",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalPreferredLineItem202110": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status",
          "pacing",
          "page",
          "targetRetailerId",
          "budget",
          "campaignId",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCapping202110"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPage202110"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "budget": {
            "type": "number",
            "format": "double"
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "budgetSpent": {
            "type": "number",
            "format": "double"
          },
          "budgetRemaining": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true
          }
        },
        "description": "A Retail Media Preferred Line Item used to hold bid settings for one or many promoted products on a single retailer",
        "x-used-in-response": true
      },
      "LineItemBidMultipliers": {
        "type": "object",
        "properties": {
          "search": {
            "type": "number",
            "format": "double"
          },
          "homepage": {
            "type": "number",
            "format": "double"
          },
          "categories": {
            "type": "number",
            "format": "double"
          },
          "productDetail": {
            "type": "number",
            "format": "double"
          },
          "confirmation": {
            "type": "number",
            "format": "double"
          },
          "merchandising": {
            "type": "number",
            "format": "double"
          },
          "deals": {
            "type": "number",
            "format": "double"
          },
          "checkout": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "Data model representing bid multipliers on a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalAddToBasketTarget202110": {
        "required": [
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the add to basket target"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product ids that add to basket should target"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category ids that add to basket should target"
          }
        },
        "description": "Identifies add to basket targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalAudienceTarget202110": {
        "required": [
          "scope",
          "audienceIds"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the audience target"
          },
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "Audience ids that should be targeted"
          }
        },
        "description": "Identifies audience targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalStoreTarget202110": {
        "required": [
          "scope",
          "storeIds"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "enum": [
              "unknown",
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Scope of the store target"
          },
          "storeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Store ids that should be targeted"
          }
        },
        "description": "Identifies store targeting for a line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "CreateBalanceV2": {
        "required": [
          "name",
          "startDate",
          "spendType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Type of the balance spend."
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Balance",
        "x-used-in-request": true
      },
      "UpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when updating a Retail Media Balance.",
        "x-used-in-request": true
      },
      "AddFundsToBalanceV2": {
        "required": [
          "deltaAmount"
        ],
        "type": "object",
        "properties": {
          "deltaAmount": {
            "type": "number",
            "description": "Amount of billable funds to be added / decreased allotted to the balance.",
            "format": "decimal"
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true
          }
        },
        "description": "An object that represents the available options of adding funds to a balance.",
        "x-used-in-request": true
      },
      "ChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to modify schedule of a balance.",
        "x-used-in-request": true
      },
      "CampaignAttributesV202301": {
        "required": [
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "unknown",
              "auction",
              "preferred"
            ],
            "type": "string",
            "default": "auction"
          },
          "drawableBalanceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            }
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string",
            "default": "30D"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "default": "none"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Campaign",
        "x-used-in-request": true
      },
      "ExternalAuctionLineItemUpdateModel": {
        "required": [
          "name",
          "startDate",
          "status",
          "targetBid",
          "isAutoDailyPacing"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          }
        },
        "description": "Model to update a retail media auction line item",
        "x-used-in-request": true
      },
      "ExternalAuctionLineItemCreateModel": {
        "required": [
          "name",
          "startDate",
          "targetRetailerId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "targetBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maxBid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "default": false
          },
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          }
        },
        "description": "Model to create a retail media auction line item",
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemCreateModel202110": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "pacing",
          "page",
          "targetRetailerId",
          "budget"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCapping202110"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPage202110"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "budget": {
            "type": "number",
            "format": "double"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true
          }
        },
        "description": "Model used to create a preferred line item",
        "x-used-in-request": true
      },
      "EditableCampaignAttributesV202301": {
        "required": [
          "name",
          "isAutoDailyPacing",
          "startDate",
          "endDate",
          "clickAttributionWindow",
          "viewAttributionWindow"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "unknown"
            ],
            "type": "string"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "unknown",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string"
          },
          "clickAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "viewAttributionScope": {
            "enum": [
              "unknown",
              "sameSku",
              "sameSkuCategory",
              "sameSkuCategoryBrand"
            ],
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when editing a Retail Media Campaign",
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemUpdateModel202110": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "default": "accelerated"
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCapping202110"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPage202110"
          },
          "budget": {
            "type": "number",
            "format": "double"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true
          }
        },
        "description": "Model used to update a preferred line item",
        "x-used-in-request": true
      },
      "ExternalAddToBasketIdsUpdateModel202110": {
        "type": "object",
        "properties": {
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product ids that add to basket should target"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category ids that add to basket should target"
          }
        },
        "description": "Update model for updating add to basket target ids",
        "x-used-in-request": true
      },
      "ExternalAudienceIdsUpdateModel202110": {
        "required": [
          "audienceIds"
        ],
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "Audience ids that should be targeted"
          }
        },
        "description": "Update model for updating audience target ids",
        "x-used-in-request": true
      },
      "ExternalStoreIdsUpdateModel202110": {
        "required": [
          "storeIds"
        ],
        "type": "object",
        "properties": {
          "storeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Store ids that should be targeted"
          }
        },
        "description": "Update model for updating store target ids",
        "x-used-in-request": true
      },
      "ExternalLineItemCapping202110": {
        "required": [
          "type",
          "count"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "unknown",
              "day",
              "session"
            ],
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Frequency capping for a preferred line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPage202110": {
        "required": [
          "pageType"
        ],
        "type": "object",
        "properties": {
          "pageType": {
            "enum": [
              "search",
              "home",
              "checkout",
              "category",
              "productDetail",
              "confirmation",
              "merchandising",
              "deals"
            ],
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalLineItemPageCategory202110"
            }
          },
          "searchKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Page information for a preferred line item",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPageCategory202110": {
        "required": [
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "includeChildren": {
            "type": "boolean",
            "default": true
          }
        },
        "description": "Category information for a preferred line item page",
        "x-used-in-response": true,
        "x-used-in-request": true
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}