{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - RetailMedia",
    "version": "Preview"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/preview/retail-media/accounts/{accountId}/grant-consent": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Grant consent to a business application on behalf of a Private Market demand account",
        "operationId": "GrantConsent",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The demand account ID on which to grant consent",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            }
          },
          "x-bodyName": "grantConsentInput"
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/preview/retail-media/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of account objects that the current user can access",
        "operationId": "AccountsApi_GetApiV1ExternalAccounts",
        "parameters": [
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfAccount"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountBrandsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfBrand"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/retailers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of retailer objects that are associated with the given account",
        "operationId": "AccountsApi_GetApiV1ExternalAccountRetailersByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The given account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiPageResponseOfRetailer"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a page of Audiences. (deprecated Public API)",
        "operationId": "LegacyGetAudienceV1",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "Limits results to the entity IDs specified; parameter key is repeated, eg. limitToId=1&limitToId=2",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Specifies the maximum number of entities returned in a single page; defaults to 25 entities per page.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Returns the specified page of results given a pageSize; pages are 0-indexed.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of audiences for the supplied account or shared by related retailers.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/v2/accounts/{accountId}/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a page of Audiences. (deprecated Public API)",
        "operationId": "LegacyGetAudienceV2",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of the account to which this audience belongs.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "Limits results to the entity IDs specified; parameter key is repeated, eg. limitToId=1&limitToId=2",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Specifies the maximum number of entities returned in a single page; defaults to 25 entities per page.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Returns the specified page of results given a pageSize; pages are 0-indexed.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A page of audiences for the supplied account or shared by related retailers.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch keywords associated with the specified line item",
        "operationId": "FetchKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1KeywordsModelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1KeywordsModelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1KeywordsModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/add-remove": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add or Remove keywords from the associated line item in bulk",
        "operationId": "AddRemoveKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing keywords to be added or removed",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaExternalv1AddRemoveKeywordsModelRequest"
              }
            }
          },
          "x-bodyName": "keywords"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/set-bid": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Set bid overrides for associated keywords to the given line item in bulk",
        "operationId": "SetKeywordBids",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Object containing a list of bid overrides for associated keywords",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaExternalv1SetBidsModelRequest"
              }
            }
          },
          "x-bodyName": "keywords"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/preferred-deal-line-items/{id}/proposal": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch the status of a proposal to modify a Preferred Deal Line Item.",
        "operationId": "FetchProposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The external id of a line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/preferred-deal-line-items/{id}/proposal/submit": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Submit a proposal to modify a Preferred Deal Line Item for review.",
        "operationId": "SubmitProposal",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The external id of a line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a creative for an account",
        "operationId": "CreativesApi_PostApi202210ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to create a creative for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeCreateModel202207"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creatives created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "CreativesApi_PostApi202210ExternalAccountCreativesSearchByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "creative-ids",
            "in": "query",
            "description": "Creatives to filter by",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/{creative-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the specified creative",
        "operationId": "CreativesApi_GetApi202210ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a creative",
        "operationId": "CreativesApi_PutApi202210ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id containing the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeUpdateModel202207"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "creative"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative202210Response"
                }
              }
            }
          },
          "204": {
            "description": "Creative updated",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/catalogs": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "CatalogApi_PostApiV0ExternalAccountCatalogsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfCatalogRequestPreview"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-retrieval": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuRetrievalApi_PostApiV1ExternalCatalogsSkuRetrieval",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The list of SKU keys to retrieve sku information",
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string",
                  "x-nullable": false
                },
                "x-nullable": false
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuKeys"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearch",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestPreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-search/accounts/{account-id}/retailers/{retailer-id}": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, account and retailer with an option to filter by brands id's.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearchAccountIdAndRetailerId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The client id/retailer id for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1500.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestSlimPreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuSlimDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku/search/retailers/{retailer-id}": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text for a retailer with an option to filter by brands id's.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearchRetailerByRetailerId",
        "parameters": [
          {
            "name": "X-Origin-Account",
            "in": "header",
            "description": "The account id of the initiator of the call.",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The client id/retailer id for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero and less than 1500. 10,000 records deep is the max limit.",
            "style": "form",
            "schema": {
              "maximum": 1500.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestSlimV2PreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuSlimDataV2ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/{catalogId}/output": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Output the indicated catalog. Catalogs are only available for retrieval when their associated status request\r\nis at a Success status.\r\nProduces application/x-json-stream of CatalogProduct json objects.",
        "operationId": "CatalogApi_GetApiV0ExternalCatalogOutputByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog download initiated.",
            "content": {
              "application/x-json-stream": { },
              "application/json": { }
            }
          },
          "400": {
            "description": "The indicated catalog is not available for retrieval, wait for a success status.",
            "content": {
              "application/x-json-stream": { },
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/{catalogId}/status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Check the status of a catalog request.",
        "operationId": "CatalogApi_GetApiV0ExternalCatalogStatusByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog request found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfCatalogStatus"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/cpc-rates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the minimum cpc bid for the retailer, and optionally the categories under the retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerCategoryCpcRatesByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields in the response that is to be included",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "bids found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CpcRateCardPreviewResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/placements": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets all placement information for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerPlacementsByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id for which placements should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "placements records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlacementPreviewListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/templates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get retailer creative templates",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerTemplatesByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "External retailer id to retrieve creative templates for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Templates found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/templates/{template-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the template for the specified retailer id and template id",
        "operationId": "CreativesApi_GetApi202207ExternalRetailerByRetailerId}Templates{templateId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "Retailer Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "template-id",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Template found for the retailer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailerId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the brands for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerBrandsByRetailerId",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which brands should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "sku-stock-type-filter",
            "in": "query",
            "description": "Filter to narrow down brands [first-party|third-party|first-and-third-party]. Defaults to first-and-third-party",
            "style": "form",
            "schema": {
              "enum": [
                "first-party",
                "third-party",
                "first-and-third-party"
              ],
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "brand-type",
            "in": "query",
            "description": " Filter to narrow down brands [all|uc|retailer]. Defaults to uc",
            "style": "form",
            "schema": {
              "enum": [
                "all",
                "uc",
                "retailer"
              ],
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Brands found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailerId}/sellers/{seller}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to get market place seller id and name",
        "operationId": "SellerApi_GetApiV1ExternalRetailerByRetailerIdSellerBySeller",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which seller should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "seller",
            "in": "path",
            "description": "The seller id or seller name which should be validated.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Seller found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerPreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Return an asynchronous Campaigns Report",
        "operationId": "GenerateAsyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Line Items Report",
        "operationId": "GenerateAsyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/attributed-transactions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Attributed Transactions Report",
        "operationId": "GenerateSyncAttributedTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Campaigns Report",
        "operationId": "GenerateSyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Line Items Report",
        "operationId": "GenerateSyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/{reportId}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the output of an async report",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/{reportId}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the status of an async report",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/account-management/accounts/{accountId}/brands": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "replace the brands for an account",
        "operationId": "UpdateBrands",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "brands to associate to account",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfInt64"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/account-management/accounts/{accountId}/create-brand-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Brand Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandBrandAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id for the parent private market account",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Initial creation and configuration options for the new account",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaBrandAccountCreation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaBrandAccountCreation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaBrandAccountCreation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaBrandAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/account-management/accounts/{accountId}/create-seller-account": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Creates a new child Demand Seller Account for the provided parent private market account",
        "operationId": "CreatePrivateMarketDemandSellerAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id for the parent private market account",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Initial creation and configuration options for the new account",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaSellerAccountCreation"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaSellerAccountCreation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaSellerAccountCreation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaSellerAccountCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcomeOfRetailMediaAccount"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/account-management/accounts/{accountId}/sellers": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "description": "replace the sellers assoiated with an account",
        "operationId": "UpdateSellers",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "the account id to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "sellers to associate",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RetailMediaSeller"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RetailMediaSeller"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RetailMediaSeller"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RetailMediaSeller"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfRetailMediaSeller"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/campaigns/{campaignId}/campaign-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get current campaign budget overrides by given external campaign id.",
        "operationId": "GetCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update campaign budget overrides by given external campaign id and new campaign budget overrides settings.",
        "operationId": "UpdateCampaignBudgetOverrides",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "External campaign id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "New campaign budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfCampaignBudgetOverrides"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfCampaignBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku/search/accounts/{accountId}/retailers/{retailerId}/by-id": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a list of SKUs based on a privided list of Product Ids",
        "operationId": "GetSkuByProductId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "account id",
            "required": true,
            "style": "simple",
            "schema": {
              "pattern": "^\\d+$",
              "type": "string"
            }
          },
          {
            "name": "retailerId",
            "in": "path",
            "description": "retailer id",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "skip a number of matches before retrning results, used with limit",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "max number of results to return",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCollectionOutcomeOfSkuSearchResult"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{externalLineItemId}/keywords/recommended": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieves a collection of recommended keywords for a line item",
        "operationId": "GetRecommendedKeywords",
        "parameters": [
          {
            "name": "externalLineItemId",
            "in": "path",
            "description": "The external line item identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRecommendedKeywordsResult"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{lineItemId}/line-item-budget-overrides": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a collection of monthly and daily budget overrides for the provided line item.",
        "operationId": "GetLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The line item id to get budget overrides for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update line item budget overrides by given external line item id and new line item budget overrides settings.",
        "operationId": "UpdateLineItemBudgetOverrides",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "Line item external id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New line item budget overrides settings value resource input.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfLineItemBudgetOverrides"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfLineItemBudgetOverrides"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/bid-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get bid multipliers by line item",
        "operationId": "LineItems_GetApi202301ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliers"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Replace bid multipliers on a line item",
        "operationId": "LineItems_PutApi202301ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemBidMultipliersRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the product buttons associated with a line item",
        "operationId": "ProductButtons_GetApi202210ExternalLineItemProductButtonsByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/create": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append new product buttons to a line item",
        "operationId": "ProductButtons_PostApi202210ExternalLineItemProductButtonsCreateByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "List of product buttons to append to the specified line item",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonListRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "productButtons"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/{product-button-id}": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Delete a product button",
        "operationId": "ProductButtons_DeleteApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get a single product button",
        "operationId": "ProductButtons_GetApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a product button",
        "operationId": "ProductButtons_PutApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "Details of the updated product button",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "productButton"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GrantConsentInput": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GrantConsentModelValueResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "GrantConsentModelValueResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/GrantConsentModel"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "GrantConsentModel": {
        "required": [
          "callbackUrl",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "callbackUrl": {
            "type": "string"
          },
          "callbackState": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "An object that represents the required (ClientId and CallbackUrl) and optional (CallbackState) parameters when granting consents on behalf of a Private Market demand account."
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Response of ApplicationSummaryModel"
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Common problem object. Can be specialized as needed."
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Model of ApplicationSummary"
      },
      "JsonApiPageResponseOfAccount": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "x-nullable": false
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndAccountAndAccount"
            },
            "x-nullable": false
          }
        },
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-nullable": false
      },
      "JsonApiPageResponseOfBrand": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "x-nullable": false
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndBrandAndBrand"
            },
            "x-nullable": false
          }
        },
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-nullable": false
      },
      "JsonApiPageResponseOfRetailer": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "x-nullable": false
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndRetailerAndRetailer"
            },
            "x-nullable": false
          }
        },
        "description": "A wrapper class to return a single page of <typeparamref name=\"T\" /> with metadata",
        "x-nullable": false
      },
      "PageMetadata": {
        "required": [
          "currentPageSize",
          "currentPageIndex"
        ],
        "type": "object",
        "properties": {
          "totalItemsAcrossAllPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "currentPageSize": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "currentPageIndex": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "nextPage": {
            "type": "string",
            "x-nullable": false
          },
          "previousPage": {
            "type": "string",
            "x-nullable": false
          }
        },
        "description": "Metadata related to the current request",
        "x-nullable": false
      },
      "CommonError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "x-nullable": false
          }
        },
        "description": "A JSON:API Common error structure",
        "x-nullable": false
      },
      "CommonWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "x-nullable": false
          }
        },
        "description": "A JSON:API Base common warning",
        "x-nullable": false
      },
      "JsonApiBodyWithIdOfInt64AndAccountAndAccount": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalAccount"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-nullable": false
      },
      "JsonApiBodyWithIdOfInt64AndBrandAndBrand": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalBrand"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-nullable": false
      },
      "JsonApiBodyWithIdOfInt64AndRetailerAndRetailer": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailer"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-nullable": false
      },
      "ExternalAccount": {
        "required": [
          "name",
          "type",
          "countries",
          "currency",
          "parentAccountLabel",
          "timeZone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "unknown",
              "supply",
              "demand"
            ],
            "type": "string",
            "x-nullable": false
          },
          "subtype": {
            "enum": [
              "unknown",
              "brand",
              "seller"
            ],
            "type": "string",
            "nullable": true,
            "x-nullable": true
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "x-nullable": false
          },
          "currency": {
            "type": "string",
            "x-nullable": false
          },
          "parentAccountLabel": {
            "maxLength": 510,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          },
          "timeZone": {
            "type": "string",
            "x-nullable": false
          },
          "companyName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A Retail Media Account used to launch campaigns and line items",
        "x-nullable": false
      },
      "ExternalBrand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          }
        },
        "description": "A Retail Media Brand used to represent a collection of products sold under the same umbrella name",
        "x-nullable": false
      },
      "ExternalRetailer": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "x-nullable": false
          },
          "campaignEligibilities": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "auction",
                "preferred"
              ],
              "type": "string",
              "x-nullable": false
            },
            "x-nullable": false
          }
        },
        "description": "A Retail Media Retailer used to represent a selection of products from multiple brands",
        "x-nullable": false
      },
      "RmLegacyAudienceGetEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1Resource"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of responses"
      },
      "RmLegacyAudienceGetEntityV2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2Resource"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmLegacyAudienceGetEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV1"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "audienceType": {
            "enum": [
              "customerList",
              "userBehavior"
            ],
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Legacy resource"
      },
      "RmLegacyAudienceGetEntityV2Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmLegacyAudienceGetEntityV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmLegacyAudienceGetEntityV1": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "retailerId": {
            "type": "string",
            "description": "ID of the retailer associated with this audience"
          },
          "userBehaviorDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV1"
          },
          "customerListDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentCustomerList"
          }
        },
        "description": "Audience definition of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSummary",
          "version": "v1"
        }
      },
      "RmLegacyAudienceGetEntityV2": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "string",
            "description": "ID of the retailer associated with this audience"
          },
          "userBehaviorDetails": {
            "$ref": "#/components/schemas/RmLegacyAudienceUserBehaviorDetailsV2"
          },
          "customerListDetails": {
            "$ref": "#/components/schemas/RmLegacySegmentCustomerList"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience definition of people of interest for a marketer",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        }
      },
      "RmLegacySegmentUserBehaviorV1": {
        "required": [
          "lookbackWindow",
          "userType"
        ],
        "type": "object",
        "properties": {
          "userType": {
            "enum": [
              "viewer",
              "buyer",
              "addToCarter"
            ],
            "type": "string",
            "description": "Type of shopper activity used to generate the audience."
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "targetType": {
            "enum": [
              "brand",
              "category"
            ],
            "type": "string",
            "description": "Type of target",
            "nullable": true
          },
          "targetIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The categories to target",
            "nullable": true
          }
        },
        "description": "Audience definition of people based on what they visited"
      },
      "RmLegacySegmentCustomerList": {
        "required": [
          "isShared",
          "size"
        ],
        "type": "object",
        "properties": {
          "size": {
            "type": "string",
            "description": "Number of users in the customer list audience."
          },
          "isShared": {
            "type": "boolean",
            "description": "Indicate if the audience is shared."
          }
        },
        "description": "Audience definition of people based on a customer list"
      },
      "RmLegacyAudienceUserBehaviorDetailsV2": {
        "required": [
          "inclusiveSegment"
        ],
        "type": "object",
        "properties": {
          "inclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV2"
          },
          "exclusiveSegment": {
            "$ref": "#/components/schemas/RmLegacySegmentUserBehaviorV2"
          }
        },
        "description": "User Behavior Details."
      },
      "RmLegacySegmentUserBehaviorV2": {
        "required": [
          "lookbackWindow",
          "userAction"
        ],
        "type": "object",
        "properties": {
          "userAction": {
            "enum": [
              "buy",
              "view",
              "addToCart"
            ],
            "type": "string",
            "description": "Type of shopper activity used to generate the audience."
          },
          "lookbackWindow": {
            "enum": [
              "P7D",
              "P14D",
              "P30D",
              "P45D",
              "P60D",
              "P90D",
              "P120D",
              "P150D",
              "P180D"
            ],
            "type": "string",
            "description": "Length of lookback window"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The categories to target",
            "nullable": true
          },
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The brands to target",
            "nullable": true
          },
          "minPrice": {
            "type": "number",
            "description": "The min price of targeted skus.",
            "format": "double",
            "nullable": true
          },
          "maxPrice": {
            "type": "number",
            "description": "The max price of targeted skus.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Audience definition of people based on what they visited"
      },
      "RetailMediaExternalv1KeywordsModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaExternalv1KeywordsModelResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Response object containing keywords associated with a line item"
      },
      "RetailMediaExternalv1ResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A response object containing errors or warnings if required"
      },
      "RetailMediaExternalv1ProposalStatusModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModelResource"
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Wrapper for the proposal status resource"
      },
      "RetailMediaExternalv1AddRemoveKeywordsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaExternalv1AddRemoveKeywordsModelResource"
          }
        },
        "description": "Request object to add or remove keywords from a line item"
      },
      "RetailMediaExternalv1SetBidsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaExternalv1SetBidsModelResource"
          }
        },
        "description": "Request to set bid overrides for specified keywords on a line item"
      },
      "RetailMediaExternalv1KeywordsModelResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaExternalv1KeywordsModel"
          }
        },
        "description": "Resource wrapper of associated keywords with a line item"
      },
      "RetailMediaExternalv1ProblemDetails": {
        "type": "object",
        "properties": {
          "traceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        },
        "description": "Datamodel for common errors and warnings"
      },
      "RetailMediaExternalv1ProposalStatusModelResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaExternalv1ProposalStatusModel"
          }
        },
        "description": "Wrapper for the proposal status"
      },
      "RetailMediaExternalv1AddRemoveKeywordsModelResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaExternalv1AddRemoveKeywordsModel"
          }
        },
        "description": "Resource wrapper the keyword add and remove datamodel"
      },
      "RetailMediaExternalv1SetBidsModelResource": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaExternalv1SetBidsModel"
          }
        },
        "description": "Wrapper of the Set Bids datamodel"
      },
      "RetailMediaExternalv1KeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/RetailMediaExternalv1KeywordDataModel"
          },
          "rank": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "Datamodel representing keywords associated with a line item"
      },
      "RetailMediaExternalv1ProposalStatusModel": {
        "required": [
          "negotiationState",
          "bookingStatus",
          "runnableStatus"
        ],
        "type": "object",
        "properties": {
          "negotiationState": {
            "enum": [
              "Invalid",
              "Modified",
              "Submitted",
              "Reviewed",
              "Approved"
            ],
            "type": "string"
          },
          "bookingStatus": {
            "enum": [
              "NotSubmitted",
              "Submitted",
              "Rejected",
              "Approved"
            ],
            "type": "string"
          },
          "runnableStatus": {
            "enum": [
              "NotSubmitted",
              "Submitted",
              "Rejected",
              "Approved"
            ],
            "type": "string"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "The proposal status includes the state of the proposal, the status of the booking and approval, as well as any comments explaining why it might have been rejected."
      },
      "RetailMediaExternalv1AddRemoveKeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1AddRemoveKeywordModel"
            },
            "nullable": true
          }
        },
        "description": "Data model containing keywords to be added or removed from a line item"
      },
      "RetailMediaExternalv1SetBidsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaExternalv1SetBidModel"
            },
            "nullable": true
          }
        },
        "description": "Data model containing keywords and bid overrides to associate to them"
      },
      "RetailMediaExternalv1KeywordDataModel": {
        "type": "object",
        "properties": {
          "reviewState": {
            "enum": [
              "InReview",
              "Recommended",
              "Approved",
              "AutoApproved",
              "Rejected",
              "AutoRejected"
            ],
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "enum": [
              "PositiveExactMatch",
              "NegativeExactMatch",
              "NegativeBroadMatch"
            ],
            "type": "string",
            "nullable": true
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/RetailMediaExternalv1InputKeywordsModel"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Details for a specific keyword"
      },
      "RetailMediaExternalv1AddRemoveKeywordModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "enum": [
              "PositiveExactMatch",
              "NegativeExactMatch",
              "NegativeBroadMatch"
            ],
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "description": "A single keyword to be added or removed"
      },
      "RetailMediaExternalv1SetBidModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "description": "A single keyword and associated bid override"
      },
      "RetailMediaExternalv1InputKeywordsModel": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "negativeExact": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "positiveExact": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "Input values associated with a keyword"
      },
      "Creative202210Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative202210"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false
      },
      "Creative202210ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative202210"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "JsonApiSingleResponseOfCatalogStatus": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "x-nullable": false
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-nullable": false
      },
      "SkuDataPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuDataPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "SkuSlimDataPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuSlimDataPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "SkuSlimDataV2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuSlimDataV2"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "CpcRateCardPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCpcRateCardPreview"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false
      },
      "PlacementPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPlacementPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "TemplateListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfTemplate"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "TemplateResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfTemplate"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false
      },
      "BrandPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBrandPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "SellerPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSellerPreview"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false
      },
      "CreativeCreateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative",
            "x-nullable": false
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "x-nullable": false
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32",
            "x-nullable": false
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32",
            "x-nullable": false
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values",
            "x-nullable": false
          }
        },
        "description": "Create model of a creative",
        "x-nullable": false
      },
      "CreativeUpdateModel202207": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative",
            "x-nullable": false
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "x-nullable": false
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32",
            "x-nullable": false
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32",
            "x-nullable": false
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values",
            "x-nullable": false
          }
        },
        "description": "Update model of a creative",
        "x-nullable": false
      },
      "JsonApiRequestOfCatalogRequestPreview": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequestPreview"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "x-nullable": false
      },
      "SkuSearchRequestPreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestPreview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false
      },
      "SkuSearchRequestSlimPreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestSlimPreview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false
      },
      "SkuSearchRequestSlimV2PreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestSlimV2Preview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false
      },
      "ResourceOfCreative202210": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative202210"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "Technical information, only used in non-prod environments",
            "x-nullable": false
          }
        },
        "description": "Data model for common error or warning",
        "x-nullable": false
      },
      "JsonApiBodyWithIdOfInt64AndCatalogStatusAndCatalogStatus": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogStatus"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-nullable": false
      },
      "ResourceOfSkuDataPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SkuDataPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfSkuSlimDataPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSlimDataPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfSkuSlimDataV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSlimDataV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfCpcRateCardPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CpcRateCardPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfPlacementPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PlacementPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfTemplate": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Template"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfBrandPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfSellerPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SellerPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "TemplateVariableValue": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the template variable the value is applied to",
            "x-nullable": false
          },
          "textVariableValue": {
            "$ref": "#/components/schemas/TextVariableValue"
          },
          "choiceVariableValue": {
            "$ref": "#/components/schemas/ChoiceVariableValue"
          },
          "colorVariableValue": {
            "$ref": "#/components/schemas/ColorVariableValue"
          },
          "filesVariableValue": {
            "$ref": "#/components/schemas/FilesVariableValue"
          },
          "hyperlinkVariableValue": {
            "$ref": "#/components/schemas/HyperlinkVariableValue"
          }
        },
        "description": "A value for a variable in a creative template.",
        "x-nullable": false
      },
      "JsonApiBodyWithoutIdOfCatalogRequestAndCatalogRequestPreview": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalCatalogRequestPreview"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-nullable": false
      },
      "ResourceOfSkuSearchRequestPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfSkuSearchRequestSlimPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestSlimPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfSkuSearchRequestSlimV2Preview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestSlimV2Preview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "Creative202210": {
        "required": [
          "name",
          "status",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "creativeFormatType",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name",
            "x-nullable": false
          },
          "status": {
            "enum": [
              "Ready",
              "In_Use",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "x-nullable": false
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32",
            "x-nullable": false
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32",
            "x-nullable": false
          },
          "templateName": {
            "type": "string",
            "description": "Template Name",
            "x-nullable": false
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32",
            "x-nullable": false
          },
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "Associated Line Item Ids",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time",
            "x-nullable": false
          },
          "creativeFormatType": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "x-nullable": false
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment"
            },
            "description": "Environment type (e.g. mobile, web, app)",
            "x-nullable": false
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values",
            "x-nullable": false
          }
        },
        "description": "A creative entity",
        "x-nullable": false
      },
      "ExternalCatalogStatus": {
        "required": [
          "status",
          "currency",
          "rowCount",
          "fileSizeBytes",
          "md5Checksum",
          "createdAt",
          "message"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "unknown",
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "description": "An enumeration of the status of the catalog.",
            "x-nullable": false
          },
          "currency": {
            "type": "string",
            "description": "An ISO4217 representation of the currency products are listed under in this catalog.",
            "x-nullable": false
          },
          "rowCount": {
            "type": "integer",
            "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "md5Checksum": {
            "type": "string",
            "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
            "nullable": true,
            "x-nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          },
          "message": {
            "type": "string",
            "description": "An optional information message intended for developer consumption.",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "The status of an asynchronous request to generate a catalog",
        "x-nullable": false
      },
      "SkuDataPreview": {
        "required": [
          "skuKey",
          "id",
          "brandId",
          "brandName",
          "retailerId",
          "retailerName",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "skuKey": {
            "type": "string",
            "description": "The product SKU Key.",
            "x-nullable": false
          },
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "description": {
            "type": "string",
            "description": "A product description.",
            "x-nullable": false
          },
          "categoryId": {
            "type": "string",
            "description": "The category Id.",
            "x-nullable": false
          },
          "category": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "x-nullable": false
          },
          "isSellerSku": {
            "type": "boolean",
            "description": "An indication of if the sku is seller sku.",
            "x-nullable": false
          },
          "isBuybox": {
            "type": "boolean",
            "description": "Whether the Sku is a Buybox Winner.",
            "x-nullable": false
          },
          "sellerId": {
            "type": "string",
            "description": "The id of the seller.",
            "x-nullable": false
          },
          "sellerName": {
            "type": "string",
            "description": "The name of the seller.",
            "x-nullable": false
          },
          "brandId": {
            "type": "string",
            "description": "The global brand id associated to the product.",
            "x-nullable": false
          },
          "brandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the global brand.",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "The identifier for the retailer the product is listed by.",
            "x-nullable": false
          },
          "retailerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "The retailer name.",
            "x-nullable": false
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site.",
            "format": "double",
            "x-nullable": false
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "x-nullable": false
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "x-nullable": false
          },
          "modelNumber": {
            "type": "string",
            "description": "The Model Number for the product if available.",
            "x-nullable": false
          },
          "parentId": {
            "type": "string",
            "description": "The ParentId for the product if available.",
            "x-nullable": false
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "productPage": {
            "type": "string",
            "description": "An The product page URL",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Metadata and usage info of a sku search",
        "x-nullable": false
      },
      "SkuSlimDataPreview": {
        "required": [
          "id",
          "globalBrandId",
          "globalBrandName",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "categoryId": {
            "type": "string",
            "description": "The category Id.",
            "x-nullable": false
          },
          "globalCategoryId": {
            "type": "string",
            "description": "The global category Id.",
            "x-nullable": false
          },
          "category": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "x-nullable": false
          },
          "globalBrandId": {
            "type": "string",
            "description": "The global brand id associated to the product.",
            "x-nullable": false
          },
          "globalBrandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the global brand.",
            "x-nullable": false
          },
          "retailerBrandId": {
            "type": "string",
            "description": "The retailer brand id associated to the product.",
            "x-nullable": false
          },
          "retailerBrandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the retailer brand.",
            "x-nullable": false
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site. Can be omitted in certain circumstances",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "x-nullable": false
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "x-nullable": false
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Slim  version of Sku Data model",
        "x-nullable": false
      },
      "SkuSlimDataV2": {
        "required": [
          "id",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short description of the product.",
            "x-nullable": false
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site. Can be omitted in certain circumstances",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "x-nullable": false
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "x-nullable": false
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Slim  version of Sku Data model",
        "x-nullable": false
      },
      "CpcRateCardPreview": {
        "required": [
          "retailerMinimumCpcBid"
        ],
        "type": "object",
        "properties": {
          "retailerMinimumCpcBid": {
            "type": "number",
            "description": "retailer minimum cpc bid",
            "format": "double",
            "x-nullable": false
          },
          "categoryMinimumCpcBids": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "x-nullable": false
            },
            "description": "map of category id to minimum cpc bids",
            "x-nullable": false
          },
          "categories": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Category202204"
            },
            "description": "map of category id to category values",
            "x-nullable": false
          }
        },
        "description": "Represents all minimum cpc rates for a retailer and category id",
        "x-nullable": false
      },
      "PlacementPreview": {
        "required": [
          "name",
          "retailerId",
          "pageType",
          "pageEnvironmentType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the placement",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id",
            "x-nullable": false
          },
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Page Type",
            "x-nullable": false
          },
          "pageEnvironmentType": {
            "enum": [
              "Unknown",
              "Web",
              "Mobile",
              "App"
            ],
            "type": "string",
            "description": "Page Environment",
            "x-nullable": false
          }
        },
        "description": "Ad Placement information on a page",
        "x-nullable": false
      },
      "Template": {
        "required": [
          "creativeFormat",
          "name",
          "skuCollectionMin",
          "skuPerCollectionMin",
          "allCollectionsMandatory",
          "createdAt",
          "updatedAt",
          "sections"
        ],
        "type": "object",
        "properties": {
          "creativeFormat": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "CUSTOM",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "The kind of creative this template can be used to build.",
            "x-nullable": false
          },
          "name": {
            "type": "string",
            "description": "The name of the template",
            "x-nullable": false
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the template",
            "format": "int32",
            "x-nullable": false
          },
          "skuCollectionMin": {
            "type": "integer",
            "description": "TODO: what is it ?",
            "format": "int32",
            "x-nullable": false
          },
          "skuCollectionMax": {
            "type": "integer",
            "description": "TODO: what is it ?",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "skuPerCollectionMin": {
            "type": "integer",
            "description": "TODO: what is it ?",
            "format": "int32",
            "x-nullable": false
          },
          "skuPerCollectionMax": {
            "type": "integer",
            "description": "TODO: what is it ?",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "displayableSkusMax": {
            "type": "integer",
            "description": "TODO: what is it ?",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "allCollectionsMandatory": {
            "type": "boolean",
            "description": "TODO: what is it ?",
            "x-nullable": false
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which the template was created",
            "format": "date-time",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the template was updated",
            "format": "date-time",
            "x-nullable": false
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            },
            "description": "The sections holding various template variables",
            "x-nullable": false
          }
        },
        "description": "A template for creating creatives.",
        "x-nullable": false
      },
      "BrandPreview": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Brand Name",
            "x-nullable": false
          }
        },
        "description": "Retail media brands",
        "x-nullable": false
      },
      "SellerPreview": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Seller Name",
            "x-nullable": false
          }
        },
        "description": "Retail media Seller Id and Name",
        "x-nullable": false
      },
      "TextVariableValue": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The displayed text",
            "x-nullable": false
          }
        },
        "description": "A value of a template text variable",
        "x-nullable": false
      },
      "ChoiceVariableValue": {
        "required": [
          "chosenOptions"
        ],
        "type": "object",
        "properties": {
          "chosenOptions": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "The chosen options",
            "x-nullable": false
          }
        },
        "description": "A value of a template choice variable (among different accepted options)",
        "x-nullable": false
      },
      "ColorVariableValue": {
        "required": [
          "color"
        ],
        "type": "object",
        "properties": {
          "color": {
            "pattern": "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type": "string",
            "description": "The displayed color (HEX format)",
            "x-nullable": false
          }
        },
        "description": "A value of a template color variable",
        "x-nullable": false
      },
      "FilesVariableValue": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "The assets representing the images to be displayed",
            "x-nullable": false
          }
        },
        "description": "A value of a template file variable (one or several files), like images in a creative",
        "x-nullable": false
      },
      "HyperlinkVariableValue": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to redirect to",
            "x-nullable": false
          }
        },
        "description": "A value of a template hyperlink variable",
        "x-nullable": false
      },
      "ExternalCatalogRequestPreview": {
        "type": "object",
        "properties": {
          "format": {
            "enum": [
              "json-newline"
            ],
            "type": "string",
            "default": "json-newline",
            "x-nullable": false
          }
        },
        "description": "A request for a catalog under the specified format. Currently \"json-newline\" is supported.",
        "x-nullable": false
      },
      "SkuSearchRequestPreview": {
        "required": [
          "queryString",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "queryString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id",
            "format": "long-id",
            "x-nullable": false
          },
          "sellers": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A list of seller names and/or seller Id's",
            "x-nullable": false
          },
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's",
            "x-nullable": false
          },
          "skuType": {
            "enum": [
              "brand",
              "seller",
              "all"
            ],
            "type": "string",
            "description": "Enum to set isSellerSku field",
            "default": "brand",
            "x-nullable": false
          },
          "productIdType": {
            "enum": [
              "skuKey",
              "gtin",
              "mpn",
              "model",
              "skuId",
              "parentId"
            ],
            "type": "string",
            "description": "Type of product Ids to search for(SkuKey, SkuId, Gtin, Mpn, Model, ParentId)",
            "default": "skuKey",
            "x-nullable": false
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A list of product Id's, if not passed ignore and search by QueryString",
            "x-nullable": false
          }
        },
        "description": "A request for sku by sellers or brands.",
        "x-nullable": false
      },
      "SkuSearchRequestSlimPreview": {
        "required": [
          "searchString",
          "limitResultsToSkusWithBrandIds"
        ],
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "limitResultsToSkusWithBrandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's to limit the search results to",
            "x-nullable": false
          }
        },
        "description": "A request for sku by search text and brand ids.",
        "x-nullable": false
      },
      "SkuSearchRequestSlimV2Preview": {
        "required": [
          "searchString"
        ],
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "brandId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's to limit the search results to",
            "x-nullable": false
          }
        },
        "description": "A request for sku by search text and brand ids.",
        "x-nullable": false
      },
      "PageTypeEnvironment": {
        "type": "object",
        "properties": {
          "pageType": {
            "enum": [
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Creative PageType",
            "x-nullable": false
          },
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "x-nullable": false
            },
            "description": "List of environments per PageType",
            "x-nullable": false
          }
        },
        "description": "The PageType-Environment Tuples for creatives",
        "x-nullable": false
      },
      "Category": {
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "x-nullable": false
          }
        },
        "description": "Retailer Category.",
        "x-nullable": false
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the brand.",
            "x-nullable": false
          }
        },
        "description": "Brand of the product.",
        "x-nullable": false
      },
      "Category202204": {
        "required": [
          "text",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Category Text",
            "x-nullable": false
          },
          "name": {
            "type": "string",
            "description": "Category Name",
            "x-nullable": false
          },
          "parentId": {
            "type": "string",
            "description": "Category ParentId",
            "x-nullable": false
          }
        },
        "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID",
        "x-nullable": false
      },
      "Section": {
        "required": [
          "title",
          "templateVariables"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "x-nullable": false
          },
          "templateVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            },
            "x-nullable": false
          }
        },
        "description": "Section object that hold template variables",
        "x-nullable": false
      },
      "TemplateVariable": {
        "required": [
          "id",
          "required",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the variable",
            "x-nullable": false
          },
          "required": {
            "type": "boolean",
            "description": "Whether the variable is required",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "Text",
              "Choice",
              "Color",
              "Files",
              "Hyperlink"
            ],
            "type": "string",
            "description": "The type of the variable",
            "x-nullable": false
          },
          "choiceVariableSpecification": {
            "$ref": "#/components/schemas/ChoiceVariableSpecification"
          },
          "textVariableSpecification": {
            "$ref": "#/components/schemas/TextVariableSpecification"
          },
          "filesVariablesSpecification": {
            "$ref": "#/components/schemas/FilesVariablesSpecification"
          }
        },
        "description": "A variable in a creative template",
        "x-nullable": false
      },
      "ChoiceVariableSpecification": {
        "required": [
          "options"
        ],
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChoiceOption"
            },
            "description": "The available options",
            "x-nullable": false
          },
          "maxSelected": {
            "type": "integer",
            "description": "The maximum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "minSelected": {
            "type": "integer",
            "description": "The minimum number of selectable options",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Specification of choice variable",
        "x-nullable": false
      },
      "TextVariableSpecification": {
        "type": "object",
        "properties": {
          "maxChars": {
            "type": "integer",
            "description": "The maximum amount of characters accepted for the text",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Specification of a text variable",
        "x-nullable": false
      },
      "FilesVariablesSpecification": {
        "required": [
          "extensions",
          "minFiles"
        ],
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Jpeg",
                "Png",
                "Gif",
                "Pdf"
              ],
              "type": "string",
              "x-nullable": false
            },
            "description": "The accepted file extensions",
            "x-nullable": false
          },
          "maxBytes": {
            "type": "integer",
            "description": "The maximum amount of bytes per file",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "minFiles": {
            "type": "integer",
            "description": "The minimum amount of files requires",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "maxFile": {
            "type": "integer",
            "description": "The maximum amount of files required",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Specification of a file variable",
        "x-nullable": false
      },
      "ChoiceOption": {
        "required": [
          "dependentVariables",
          "id"
        ],
        "type": "object",
        "properties": {
          "dependentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariable"
            },
            "description": "Template variables unblocked when the option is chosen",
            "x-nullable": false
          },
          "id": {
            "type": "string",
            "description": "The id of the option",
            "x-nullable": false
          }
        },
        "description": "An option given in a choice",
        "x-nullable": false
      },
      "AsyncReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatusResponseResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Async Report response format"
      },
      "ReportOutcome": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "The outcome of an API call."
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/ExportReportMetaData"
          },
          "data": {
            "$ref": "#/components/schemas/ReportDataResponseResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Report response format"
      },
      "AsyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncAttributedTransactionsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "StatusResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/StatusResponse"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ExportReportMetaData": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportReportColumn"
            },
            "nullable": true
          },
          "rows": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for an async report request: descriptions of the columns and number of rows returned"
      },
      "ReportDataResponseResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "description": "Data response format",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncCampaignsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncLineItemsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "SyncAttributedTransactionsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "SyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncCampaignsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "SyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncLineItemsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "md5CheckSum": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Status of an async report request",
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "ExportReportColumn": {
        "required": [
          "name",
          "role",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the exported column"
          },
          "title": {
            "type": "string",
            "description": "Title of the exported column",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the exported column",
            "nullable": true
          },
          "type": {
            "enum": [
              "Boolean",
              "Number",
              "Money",
              "String",
              "Date",
              "DateTime",
              "Interval",
              "Duration"
            ],
            "type": "string",
            "description": "Type of the column"
          },
          "role": {
            "enum": [
              "Dimension",
              "Property",
              "Interval",
              "Metric"
            ],
            "type": "string",
            "description": "Role of the colummn"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the column",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "Duration of the column",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency of the column",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Flag for deprecated column",
            "nullable": true
          }
        },
        "description": "Description of a column from an async report request"
      },
      "AsyncCampaignsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency",
                "assistedUnits",
                "assistedSales"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "brandId",
                "brandName",
                "pageTypeName",
                "environment",
                "keyword",
                "salesChannel",
                "retailerId",
                "retailerName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on",
            "nullable": true
          },
          "campaignType": {
            "enum": [
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "nullable": true
          },
          "salesChannel": {
            "enum": [
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "nullable": true
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact",
            "nullable": true
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "1D",
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ids to report on",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id to report on",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC",
            "nullable": true
          }
        },
        "description": "Campaign report body request"
      },
      "AsyncLineItemsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "ctr",
                "cpc",
                "cpo",
                "roas",
                "assistedUnits",
                "assistedSales",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "brandId",
                "brandName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "keyword",
                "pageTypeName",
                "salesChannel",
                "environment"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on",
            "nullable": true
          },
          "campaignType": {
            "enum": [
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "nullable": true
          },
          "salesChannel": {
            "enum": [
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "nullable": true
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact",
            "nullable": true
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary",
            "nullable": true
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "1D",
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none",
            "nullable": true
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ids to report on",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id to report on",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC",
            "nullable": true
          }
        },
        "description": "Line Items report body request"
      },
      "SyncAttributedTransactionsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on",
            "nullable": true
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to report on",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "campaignName",
                "campaignId",
                "lineItemId",
                "purchasedDate",
                "purchasedHour",
                "advDate",
                "advHour",
                "daysDifference",
                "lineItemName",
                "advProductId",
                "advProductGtin",
                "advProductMpn",
                "advProductName",
                "advProductCategory",
                "purchasedProductId",
                "purchasedProductGtin",
                "purchasedProductMpn",
                "purchasedProductName",
                "purchasedProductCategory",
                "advEngagement",
                "advToPurchasedProductRelationship",
                "salesChannel",
                "pageTypeName",
                "retailerName",
                "keyword",
                "attributionWindow"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on",
            "nullable": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "attributedUnits",
                "attributedSales"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "1D",
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none",
            "nullable": true
          },
          "campaignType": {
            "enum": [
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "nullable": true
          },
          "salesChannel": {
            "enum": [
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC",
            "nullable": true
          }
        },
        "description": "Attributed transactions report body request"
      },
      "SyncCampaignsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary",
            "nullable": true
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of campaign Ids to filter",
            "nullable": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency",
                "assistedUnits",
                "assistedSales"
              ],
              "type": "string"
            },
            "description": "List of Metrics to report on",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "brandId",
                "brandName",
                "pageTypeName",
                "environment",
                "keyword",
                "salesChannel",
                "retailerId",
                "retailerName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "1D",
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none",
            "nullable": true
          },
          "campaignType": {
            "enum": [
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "nullable": true
          },
          "salesChannel": {
            "enum": [
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC",
            "nullable": true
          }
        },
        "description": "Campaign report body request"
      },
      "SyncLineItemsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary",
            "nullable": true
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to report on",
            "nullable": true
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on",
            "nullable": true
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "ctr",
                "cpc",
                "cpo",
                "roas",
                "assistedUnits",
                "assistedSales",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on",
            "nullable": true
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "brandId",
                "brandName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "keyword",
                "pageTypeName",
                "salesChannel",
                "environment"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none",
            "nullable": true
          },
          "viewAttributionWindow": {
            "enum": [
              "1D",
              "7D",
              "14D",
              "30D",
              "none"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none",
            "nullable": true
          },
          "campaignType": {
            "enum": [
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "nullable": true
          },
          "salesChannel": {
            "enum": [
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC",
            "nullable": true
          }
        },
        "description": "Line Items report body request"
      },
      "ValueResourceCollectionOutcomeOfInt64": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfInt64"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several values."
      },
      "ResourceOutcomeOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfRetailMediaAccount"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "ValueResourceCollectionOutcomeOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfRetailMediaSeller"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several values."
      },
      "ValueResourceOutcomeOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ResourceCollectionOutcomeOfSkuSearchResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuSearchResult"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities."
      },
      "ValueResourceOutcomeOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRecommendedKeywordsResult"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ValueResourceOutcomeOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "RetailMediaBrandAccountCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "list of brands to link to the new account",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account"
      },
      "RetailMediaSellerAccountCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the account, must be unique across all accounts",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaSeller"
            },
            "description": "list of sellers to associate to the new account",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "the initial set up and configuration options for a new private market demand brand account"
      },
      "ValueResourceInputOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfCampaignBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "SkuSearchRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SkuSearchRequestBody"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single entity."
      },
      "ValueResourceInputOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfLineItemBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RetailMediaSeller": {
        "type": "object",
        "properties": {
          "sellerId": {
            "type": "string",
            "description": "the seller id",
            "nullable": true
          },
          "retailerId": {
            "type": "integer",
            "description": "the retailer id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "used to define the exact seller linked with an account"
      },
      "ValueResourceOfInt64": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ResourceOfRetailMediaAccount": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaAccount"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ValueResourceOfRetailMediaSeller": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaSeller"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ValueResourceOfCampaignBudgetOverrides": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/CampaignBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ResourceOfSkuSearchResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchResult"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of this resource.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API."
      },
      "ValueResourceOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RecommendedKeywordsResult"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "ValueResourceOfLineItemBudgetOverrides": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/LineItemBudgetOverrides"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value."
      },
      "SkuSearchRequestBody": {
        "required": [
          "productIdType",
          "queryIds"
        ],
        "type": "object",
        "properties": {
          "productIdType": {
            "enum": [
              "SkuKey",
              "Gtin",
              "Mpn",
              "Model",
              "SkuId",
              "ParentId"
            ],
            "type": "string",
            "description": "sets which product id the QueryIds will be compared to"
          },
          "queryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of product ids to search for"
          }
        },
        "additionalProperties": false,
        "description": "defines the type product Id to search and list of ids to be searched for"
      },
      "RetailMediaAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Display name for reporting the owning entity of ads for the Digital Services Act in the European Union",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "list of countries associated with the account",
            "nullable": true
          },
          "currencyId": {
            "type": "integer",
            "description": "the currency for the account",
            "format": "int32",
            "nullable": true
          },
          "parentAccountLabel": {
            "type": "string",
            "description": "parent account label for the account",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account"
      },
      "CampaignBudgetOverrides": {
        "required": [
          "dailyBudgetOverrides",
          "monthlyBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "monthlyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignMonthlyBudgetOverride"
            },
            "description": "Campaign budget override monthly part, chronological order restricted."
          },
          "dailyBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignDailyBudgetOverride"
            },
            "description": "Campaign budget override daily part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Campaign budget overrides including Monthly and Daily budget overrides."
      },
      "SkuSearchResult": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The product name",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The cateogry Id",
            "nullable": true
          },
          "category": {
            "type": "string",
            "description": "The full retailer category taken from the retailers catalog",
            "nullable": true
          },
          "globalBrandId": {
            "type": "string",
            "description": "The global brand id associated to the product",
            "nullable": true
          },
          "globalBrandName": {
            "type": "string",
            "description": "The name of the global brand",
            "nullable": true
          },
          "retailerBrandId": {
            "type": "string",
            "description": "The retailer brand id associated to the product",
            "nullable": true
          },
          "retailerBrandName": {
            "type": "string",
            "description": "The name of the retailer brand",
            "nullable": true
          },
          "globalCategoryId": {
            "type": "string",
            "description": "the Global Category Id",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "The product price pulled from the retailer's catalog",
            "format": "double",
            "nullable": true
          },
          "modelNumber": {
            "type": "string",
            "description": "The model number for the product",
            "nullable": true
          },
          "isInStock": {
            "type": "boolean",
            "description": "Indicates if the retailer product is in stock",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available.\r\nTIt covers variations such as EANs and UPCs",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "description": "The MPN identifier for the product if available",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer catalog",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog.\r\nThe date value is represented as an UTC ISO8601 string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model for response resource"
      },
      "RecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Keywords"
            },
            "description": "Dictionary of keywords to their keyword models",
            "nullable": true
          },
          "recommendedKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Collection of recommended keywords",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for recommended keywords"
      },
      "LineItemBudgetOverrides": {
        "required": [
          "dailyLineItemBudgetOverrides",
          "monthlyLineItemBudgetOverrides"
        ],
        "type": "object",
        "properties": {
          "monthlyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyLineItemBudegetOverride"
            },
            "description": "Line item budget override monthly part, chronological order restricted."
          },
          "dailyLineItemBudgetOverrides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyLineItemBudgetOverride"
            },
            "description": "Line item budget override daily part, chronological order restricted."
          }
        },
        "additionalProperties": false,
        "description": "Line item budget overrides including Monthly and Daily budget overrides."
      },
      "CampaignMonthlyBudgetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign monthly budget override."
      },
      "CampaignDailyBudgetOverride": {
        "required": [
          "duration",
          "maxDailySpend"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Campaign daily budget override."
      },
      "Keywords": {
        "type": "object",
        "properties": {
          "reviewState": {
            "enum": [
              "InReview",
              "Recommended",
              "Approved",
              "AutoApproved",
              "Rejected",
              "AutoRejected",
              "Unkown"
            ],
            "type": "string",
            "description": "Review status of the keyword",
            "nullable": true
          },
          "matchType": {
            "enum": [
              "PositiveExactMatch",
              "NegativeExactMatch",
              "NegativeBroadMatch",
              "Unknown"
            ],
            "type": "string",
            "description": "The matching algorthim to be use when comparing this keyword with the shopper search phrase",
            "nullable": true
          },
          "bid": {
            "type": "number",
            "description": "The bid to use when a positive keyword matches the shopper search phrase",
            "format": "double",
            "nullable": true
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywords"
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which this keyword was created in UTC",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the keyword was last modified in UTC",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data associated with a normalized keyword phrase"
      },
      "MonthlyLineItemBudegetOverride": {
        "required": [
          "duration",
          "maxMonthlySpend"
        ],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "string",
            "description": "Monthly budget override start month, format \"yyyy-MM\". If it is null, the StartMonth would be the following month of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The number of MONTHs that the override is active from StartMonth, e.g. \"1M\". Must end with 'M' or 'm'."
          },
          "maxMonthlySpend": {
            "type": "number",
            "description": "Monthly budget override maximum monthly spend amount.",
            "format": "double"
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Monthly budget override computed status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a monthly budget override"
      },
      "DailyLineItemBudgetOverride": {
        "required": [
          "duration"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Daily budget override start date, format \"yyyy-MM-dd\". If it is null, the StartDate would be the following date of the last item in the override sequence.",
            "format": "date-time",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "The number of DAYs that the override is active from StartDate, e.g. \"1D\". Must end with 'D' or 'd'."
          },
          "maxDailySpend": {
            "type": "number",
            "description": "Daily budget override maximum daily spend amount.",
            "format": "double",
            "nullable": true
          },
          "status": {
            "enum": [
              "Expired",
              "Active",
              "Upcoming"
            ],
            "type": "string",
            "description": "Daily budget override computed status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a daily budget override"
      },
      "InputKeywords": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative broad phrased",
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative exact phrase",
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied positive exact phrases",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Keywords submitted by the user binned by type after some cleanup has been performed"
      },
      "JsonApiSingleResponseOfLineItemBidMultipliers": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersAndLineItemBidMultipliers"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "x-nullable": false
          }
        },
        "description": "Data model for the response of a line item bid multiplier",
        "x-nullable": false
      },
      "LineItemBidMultipliersResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliers"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false
      },
      "ProductButtonListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonResponse"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false
      },
      "LineItemBidMultipliersRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliers"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false
      },
      "ProductButtonListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
            },
            "x-nullable": false
          }
        },
        "description": "Data model for a list of input resources",
        "x-nullable": false
      },
      "ProductButtonRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false
      },
      "JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersAndLineItemBidMultipliers": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/LineItemBidMultipliers"
          }
        },
        "description": "Response object for line item bid multiplier calls",
        "x-nullable": false
      },
      "ResourceOfLineItemBidMultipliers": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LineItemBidMultipliers"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "ResourceOfProductButtonResponse": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalProductButtonResponse"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for an output resource",
        "x-nullable": false
      },
      "ResourceOfProductButtonRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalProductButtonRequest"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false
      },
      "LineItemBidMultipliers": {
        "type": "object",
        "properties": {
          "search": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "homepage": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "categories": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "productDetail": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "confirmation": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "merchandising": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "deals": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "checkout": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          }
        },
        "description": "Data model representing bid multipliers on a line item",
        "x-nullable": false
      },
      "ExternalProductButtonResponse": {
        "required": [
          "name",
          "backgroundImage",
          "rank",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Product Button",
            "x-nullable": false
          },
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image",
            "x-nullable": false
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the Product Button",
            "format": "int32",
            "x-nullable": false
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32",
            "x-nullable": false
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "List of skus on the Product Button",
            "x-nullable": false
          }
        },
        "description": "The Product Button entity used for output",
        "x-nullable": false
      },
      "ExternalProductButtonRequest": {
        "required": [
          "name",
          "backgroundImage",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Product Button",
            "x-nullable": false
          },
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image",
            "x-nullable": false
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32",
            "x-nullable": false
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "List of skus on the Product Button",
            "x-nullable": false
          }
        },
        "description": "The Product Button entity used for input",
        "x-nullable": false
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}