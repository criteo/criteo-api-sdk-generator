{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - RetailMedia",
    "version": "Preview"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/preview/retail-media/account-management/accounts/{accountId}/private-market-child-accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets page of private market child accounts that are associated with the given account",
        "operationId": "ExternalApiAccounts_GetApiExternalV1AccountPrivateMarketChildAccountsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of accounts to be returned. The default is 25.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of accounts. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Accounts_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all segments with a valid configuration, and returns the full segments. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment Update request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/{audience-segment-id}/contact-list": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns the statistics of a contact list segment.",
        "operationId": "getAudienceSegmentContactListStatistics",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "Segment Id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all segments. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudienceSegmentsSizes",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentSizeEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all segments with a valid configuration, and returns the full segments. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment creation parameter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete the segments associated to the given IDs.",
        "operationId": "bulkDeleteAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment delete request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent segment. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSegmentSize",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentSizeEstimationV1Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 500.",
            "style": "form",
            "schema": {
              "maximum": 500,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Segment search filters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all audiences with a valid configuration, and returns their IDs. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudience",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/compute-sizes": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size of all audiences. An error is returned for those whose size calculation is not supported.",
        "operationId": "computeAudiencesSizes",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceComputeSizesInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSizeEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all audiences with a valid configuration, and returns their IDs. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudience",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Audience creation parameter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Deletes the audiences associated to the given IDs.",
        "operationId": "bulkDeleteAudiences",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          },
          "204": {
            "description": "Success or partial success",
            "content": {
              "application/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/estimate-size": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Gets the size estimation of a non existent audience. An error is returned when size calculation is not supported.",
        "operationId": "estimateAudienceSize",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceEstimateSizeInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSizeEstimationV1Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudiences",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 500.",
            "style": "form",
            "schema": {
              "maximum": 500,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Audience search filters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of balance objects for the given account id",
        "operationId": "GetBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to get balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2PagedListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Create balance for the given account id",
        "operationId": "CreateBalanceByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to create balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to set when creating a Retail Media Balance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBalanceV2Request"
              }
            }
          },
          "x-bodyName": "createBalance"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances/{balance-id}": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Get a balance for the given account id and balance id",
        "operationId": "GetBalanceByAccountAndBalanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Read"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Balance"
        ],
        "description": "Modify a balance for the given account id",
        "operationId": "ModifyBalanceByAccountAndBalanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceModelV2Request"
              }
            }
          },
          "x-bodyName": "updateBalanceModel"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances/{balance-id}/change-dates": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Change dates of a balance for the given account id",
        "operationId": "ChangeDatesByAccountAndBalanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify schedule of a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDatesOfBalanceV2Request"
              }
            }
          },
          "x-bodyName": "changeDatesOfBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a creative for an account",
        "operationId": "PostApiV2ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to create a creative for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeCreateModel2"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creatives created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/{creative-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the specified creative",
        "operationId": "GetApiV2ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a creative",
        "operationId": "PutApiV2ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id containing the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeUpdateModel2"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          },
          "204": {
            "description": "Creative updated"
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "PostApiV2ExternalAccountCreativesSearchByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-ids",
            "in": "query",
            "description": "Creatives to filter by",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{account-id}/keywords/in-review-report": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Generate a list of reports for line items which contain one or more actionable keyword reviews",
        "operationId": "InReviewReportV1",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to generate a report for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "style": "form",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeLineItemKeywordReviewReportAndMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{accountId}/brand-catalog-export": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "Catalog_PostApiExternalV2AccountBrandCatalogExportByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfBrandCatalogRequestV2"
              }
            }
          },
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfCatalogStatusV2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/{accountId}/seller-catalog-export": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "Catalog_PostApiExternalV2AccountSellerCatalogExportByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerCatalogRequestV2"
              }
            }
          },
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfCatalogStatusV2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/fees/search": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Get fees for provided accounts",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "used for paging, number of results returned per request, Maximum of 500",
            "style": "form",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "used for paging, number of records to skip",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputAccountFeesSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomePrivateMarketAccountFeesAndMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Accounts_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/accounts/fees/update": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Set fees for provided accounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputAccountFeesUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeAccountFeesUpdateResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Accounts_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/auction-line-items/{lineItemId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a sponsored product line item by its id.",
        "operationId": "GetAuctionLineItemV2",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The id of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfSponsoredProductsLineItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates a Sponsored Products Line Item given a line item id and a request.",
        "operationId": "UpdateAuctionLineItemV2",
        "parameters": [
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The external line item ID of the sponsored products line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "An update request containing all details of the requested update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSponsoredProductsLineItemUpdateRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfSponsoredProductsLineItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/audience-segments/{audience-segment-id}/contact-list/add-remove": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove identifiers to or from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "updateContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaContactlistOperation"
                },
                "example": {
                  "type": "AddRemoveContactlistResult",
                  "data": {
                    "contactListId": 568708742535471104,
                    "operation": "add",
                    "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                    "identifierType": "madid",
                    "nbValidIdentifiers": 7343,
                    "nbInvalidIdentifiers": 13,
                    "sampleInvalidIdentifiers": [
                      "InvalidIdentifier"
                    ]
                  },
                  "errors": [
                    {
                      "traceId": "667ac683ac797284.667ac683ac797284<:667ac683ac797284",
                      "type": "availability",
                      "code": "internal-error",
                      "instance": "",
                      "title": "Internal error"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers'"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/audience-segments/{audience-segment-id}/contact-list/clear": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete all identifiers from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "DeleteContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Contact List identifiers were deleted",
            "content": {
              "application/json": { }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Audience_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/balances/{balanceId}/history": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets the balance's historical change data.",
        "operationId": "GetBalanceHistory",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "Balance id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "limitToChangeTypes",
            "in": "query",
            "description": "Comma separated change types string that will be queried.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) starting offset in the collection.",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfBalanceHistoryChangeDataCaptureV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Balance_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/billing/partner-report": {
      "post": {
        "tags": [
          "Billing"
        ],
        "description": "Create a Partner Billing Report request.",
        "requestBody": {
          "description": "Partner Billing Report request object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputPartnerBillingReportRequestV1"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Billing_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/billing/partner-report/{requestId}/output": {
      "get": {
        "tags": [
          "Billing"
        ],
        "description": "Get the output of an existing Partner Billing Report.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The id of a Partner Billing Report request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Billing_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/billing/partner-report/{requestId}/status": {
      "get": {
        "tags": [
          "Billing"
        ],
        "description": "Get the status of an existing Partner Billing Report.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The id of a Partner Billing Report request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Billing_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/brands/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for brands given a retailer ID and search term.",
        "operationId": "SearchBrands",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "the number of brands to return",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset of paginated results",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "BrandIdSearchRequest which contains the request parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputBrandIdSearchRequest"
              }
            }
          },
          "x-bodyName": "brandIdSearchRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/campaigns/{campaign-id}/preferred-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of preferred line item objects for the given campaign id",
        "operationId": "GetPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2PagedListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates a new preferred line item with the specified settings",
        "operationId": "CreatePreferredLineItemByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemCreateModelV2Request"
              }
            }
          },
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/campaigns/{campaignId}/auction-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets a page of sponsored product line items by campaign id.",
        "operationId": "GetAuctionLineItemsByCampaignIdV2",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeOfSponsoredProductsLineItemAndMetadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates new auction line item with the specified settings",
        "operationId": "CreateAuctionLineItemV2",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSponsoredProductsLineItemCreateRequestModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfSponsoredProductsLineItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/catalog/products/batch": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Used to publish a batch of operations to insert, update and deletes products.\n The batch is processed asynchronously.The response provides an operationToken which can be used to track\n the status of the report of the operation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsCustomBatchRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "202": {
            "description": "Batch accepted. The status of the operation can be tracked using the report endpoint and the operationToken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAcceptedResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Catalog_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/catalog/products/batch/report/{operation-token}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "description": "Get the report of an asynchronous batch operation previously requested",
        "parameters": [
          {
            "name": "operation-token",
            "in": "path",
            "description": "The token returned by the batch endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOkResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Catalog_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/catalogs/{catalogId}/status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Check the status of a catalog request.",
        "operationId": "Catalog_GetApiExternalV2CatalogStatusByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog request found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomeOfCatalogStatusV2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/catalogs/sku-retrieval": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuRetrievalApi_PostApiV1ExternalCatalogsSkuRetrieval",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "requestBody": {
          "description": "The list of SKU keys to retrieve sku information",
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-bodyName": "skuKeys"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/catalogs/sku-search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearch",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestPreviewRequest"
              }
            }
          },
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/chatbot-catalogs/{catalogid}/product-recommendations": {
      "post": {
        "tags": [
          "OnSiteRecommendation"
        ],
        "description": "Ask a chatbot for a product recommendation",
        "operationId": "chatbotProductRecommendations",
        "parameters": [
          {
            "name": "catalogid",
            "in": "path",
            "description": "the identifier of the catalog to query",
            "required": true,
            "style": "simple",
            "schema": {
              "title": "catalogid",
              "type": "integer",
              "description": "the identifier of the catalog to query"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InbotDiscussionBodyModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBodyModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_OnSiteRecommendation_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{id}/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch keywords associated with the specified line item",
        "operationId": "FetchKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordsModelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/add-remove": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add or Remove keywords from the line item in bulk",
        "operationId": "AddRemoveKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveKeywordsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/set-bid": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Set bid overrides for associated keywords to the given line item in bulk",
        "operationId": "SetKeywordBids",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBidsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/keywords/review": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Update the status of keyword reviews under a line item",
        "operationId": "UpdateKeywordReviewsV1",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The line item to update keyword review statuses for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request object containing a list of Phrase-ReviewState pairs to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputRetailMediaKeywordsReview"
              }
            }
          },
          "x-bodyName": "keywordReviewSetStateRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeRetailMediaKeywordsReviewResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get LineItem Product Buttons",
        "operationId": "GetProductButtonsByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "LineItemId for productButton retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductButtons found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonResponseListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/{product-button-id}": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Delete Specific Product Button",
        "operationId": "DeleteProductButtonByLineItemAndProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "LineItemId for productButton delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "productButtonId used for delete",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductButton deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonResponseListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get Specific Product Button",
        "operationId": "GetProductButtonByLineItemAndProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "LineItemId for productButton retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "productButtonId used for retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProductButton found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonResponseListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update Specific Product Button",
        "operationId": "UpdateProductButtonByLineItemAndProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "LineItemId for productButton update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "productButtonId used for update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Specific Product button update info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonRequestRequest"
              }
            }
          },
          "x-bodyName": "productButton"
        },
        "responses": {
          "200": {
            "description": "ProductButton updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonResponseListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/create": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add Specific Product Buttons",
        "operationId": "AppendProductButtonByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "LineItemId for productButton retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of Product Buttons to append",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonRequestListRequest"
              }
            }
          },
          "x-bodyName": "productButtons"
        },
        "responses": {
          "200": {
            "description": "ProductButtons added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonResponseListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieve a page of promoted products for a line item",
        "operationId": "FetchPromotedProducts",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of attribute names from the response model to compute and return.\r\n            Valid values are `status` and `bidOverride` in any order. Defaults to `status`.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum page size to fetch. Defaults to 500.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first item to fetch. Defaults to zero.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted products associated with the line item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedProductResourceCollectionOutcome"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append a collection of promoted products to a line item",
        "operationId": "AppendPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Promoted products appended to the line item with warnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "204": {
            "description": "Promoted products appended to the line item"
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Remove a collection of promoted products from a line item",
        "operationId": "DeletePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products removed from the line item"
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/pause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Pause a collection of promoted products associated with a line item",
        "operationId": "PausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products paused"
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/unpause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Un-pause a collection of promoted products associated with a line item",
        "operationId": "UnpausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products un-paused"
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [ ]
          }
        ]
      }
    },
    "/preview/retail-media/preferred-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the preferred line item for the given line item id",
        "operationId": "GetPreferredLineItemsByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the preferred line item for the given line item id",
        "operationId": "UpdatePreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemUpdateModelV2Request"
              }
            }
          },
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/{reportId}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the output of an async report",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/{reportId}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the status of an async report",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/accounts": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Accounts Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncAccountsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncAccountsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Return an asynchronous Campaigns Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/fillrate": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Fill Rate Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncFillRateReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncFillRateReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Line Items Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/offsite": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Offsite Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncOffsiteReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncOffsiteReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/sync/attributed-transactions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Attributed Transactions Report",
        "operationId": "GenerateSyncAttributedTransactionsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/sync/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Campaigns Report",
        "operationId": "GenerateSyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/reports/sync/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Line Items Report",
        "operationId": "GenerateSyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Analytics_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/cpc-rates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the minimum cpc bid for the retailer, and optionally the categories under the retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerCategoryCpcRatesByRetailerId",
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "The fields in the response that is to be included",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "bids found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CpcRateCardPreviewResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/placements": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets all placement information for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerPlacementsByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id for which placements should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "placements records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlacementPreviewListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the brands for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerBrandsByRetailerId",
        "parameters": [
          {
            "name": "brand-type",
            "in": "query",
            "description": " Filter to narrow down brands [all|uc|retailer]. Defaults to uc",
            "style": "form",
            "schema": {
              "enum": [
                "all",
                "uc",
                "retailer"
              ],
              "type": "string"
            }
          },
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which brands should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sku-stock-type-filter",
            "in": "query",
            "description": "Filter to narrow down brands [first-party|third-party|first-and-third-party]. Defaults to first-and-third-party",
            "style": "form",
            "schema": {
              "enum": [
                "first-party",
                "third-party",
                "first-and-third-party"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brands found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPreviewListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/categories/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search a retailer categories by given text substring and category ids.",
        "operationId": "SearchCategory",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit of the search result.",
            "style": "form",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the search result.",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "retailerId",
            "in": "path",
            "description": "Retailer id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request of categories search.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCategoriesSearchRequestV1"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeCategory202204Metadata"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/offers/load": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Replace the offers for one or more SKUs with a snapshot of the new offers for each respective SKU",
        "operationId": "OfferLoadV1",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer for which these offers will be loaded",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputLoadSkuOffersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeAsyncJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Catalog_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/offers/set-buy-box-winners": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Update the buy box winner for one or more SKUs",
        "operationId": "OfferSetBbwV1",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer for which these buy box winners will be set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputSetSkuBuyBoxWinnersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeAsyncJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Catalog_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/offers/update": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Update one or more offers by replacing each offer's price and availability with the given values",
        "operationId": "OfferUpdateV1",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer for which these offers will be updated",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputUpdateOffersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeAsyncJobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Catalog_Manage"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/recommend-categories": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to get recommended categories by given retailer id and sku id list.",
        "operationId": "GetRecommendedCategories",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "Retailer id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Request of recommended categories.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputRecommendedCategoriesRequestV1"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeCategory202204"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/recommend-keywords": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Recommend keywords by given retailer id and sku ids.",
        "operationId": "RecommendedKeywords",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "Retailer id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request of recommended keywords.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputRecommendedKeywordsRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeRecommendedKeywordsResponseV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    },
    "/preview/retail-media/retailers/{retailerId}/sellers/{seller}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to get market place seller id and name",
        "operationId": "SellerApi_GetApiV1ExternalRetailerByRetailerIdSellerBySeller",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which seller should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "seller",
            "in": "path",
            "description": "The seller id or seller name which should be validated.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Seller found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerPreviewResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "RetailMedia_Campaign_Read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountFeesSearchRequest": {
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account Ids to return fees",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "the request body for account fees search"
      },
      "AccountFeesUpdateRequest": {
        "required": [
          "accountIds",
          "fees"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "maxItems": 25,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "accounts to update"
          },
          "fees": {
            "$ref": "#/components/schemas/PrivateMarketFees"
          }
        },
        "additionalProperties": false,
        "description": "request body to set provided fees for the provided accounts"
      },
      "AccountFeesUpdateResult": {
        "type": "object",
        "properties": {
          "failedUpdateAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "account Id that were not updated in the request",
            "nullable": true
          },
          "successfullyUpdatedAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "account Ids that were successfully updated in the request",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "results of the update request, includes any accounts that were not updated successfully",
        "nullable": true
      },
      "AddRemoveKeywordModel": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword to be added or removed"
      },
      "AddRemoveKeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddRemoveKeywordModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords to be added or removed from a line item"
      },
      "AddRemoveKeywordsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to add or remove keywords from a line item"
      },
      "AddRemoveKeywordsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords to be added or removed from a line item"
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Used for the /me endpoint. Contains information about the currently authenticated application that we accept to give to our clients",
        "nullable": true
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncAccountsReport": {
        "required": [
          "accountIds",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account Ids to report on"
          },
          "aggregationLevel": {
            "enum": [
              "campaign",
              "lineItem"
            ],
            "type": "string",
            "description": "Level of aggregation, if no dimensions and metrics are provided, falls back to campaign aggregationLevel",
            "default": "campaign"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "mediaType",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName",
                "targetedKeywordType"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "mediaType": {
            "enum": [
              "unknown",
              "video",
              "display",
              "all"
            ],
            "type": "string",
            "description": "Filter on the type of media: unknown, display, video",
            "default": "all"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency",
                "winRate",
                "sampledBidsWon",
                "sampledBidsParticipated"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "targetedKeywordTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "generic",
                "branded",
                "conquesting"
              ],
              "type": "string"
            },
            "description": "Filter on targeted keyword type: unknown, generic, branded, conquesting"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Accounts report body request"
      },
      "AsyncAccountsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncAccountsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncAccountsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncAccountsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncCampaignsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "mediaType",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName",
                "targetedKeywordType"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "id": {
            "type": "string",
            "description": "Campaign id to report on"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on"
          },
          "mediaType": {
            "enum": [
              "unknown",
              "video",
              "display",
              "all"
            ],
            "type": "string",
            "description": "Filter on the type of media: unknown, display, video",
            "default": "all"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency",
                "winRate",
                "sampledBidsWon",
                "sampledBidsParticipated"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "targetedKeywordTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "generic",
                "branded",
                "conquesting"
              ],
              "type": "string"
            },
            "description": "Filter on targeted keyword type: unknown, generic, branded, conquesting"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Campaigns report body request"
      },
      "AsyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncCampaignsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncFillRateReport": {
        "required": [
          "dimensions",
          "endDate",
          "metrics",
          "startDate",
          "supplyAccountIds"
        ],
        "type": "object",
        "properties": {
          "adServerType": {
            "enum": [
              "all",
              "gam",
              "criteo"
            ],
            "type": "string",
            "description": "Filter on the type of the ad server: criteo, gam, all",
            "default": "all"
          },
          "dimensions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "date",
                "retailerId",
                "retailerName",
                "placementId",
                "placementName",
                "pageTypeName",
                "environment",
                "servedCategory",
                "retailerCategoryId",
                "retailerCategoryName",
                "adServerType"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json"
          },
          "metrics": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "pageViews",
                "availablePlacements",
                "unfilledPlacements",
                "fillRate",
                "placementImpressions",
                "productImpressions",
                "impressions",
                "placementClicks",
                "productClicks",
                "clicks",
                "placementImpressionsCTR",
                "productImpressionsCTR",
                "cpm",
                "cpc",
                "placementImpressionsRevenue",
                "productClicksRevenue",
                "revenue",
                "workingMedia",
                "netRevenue"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "supplyAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Supply account ids to report on"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async FillRate report body request"
      },
      "AsyncFillRateReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncFillRateReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncFillRateReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncFillRateReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncJobResponse": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Indicates the successful receipt of an async request, containing the job ID",
        "nullable": true
      },
      "AsyncLineItemsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "mediaType",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName",
                "targetedKeywordType"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "id": {
            "type": "string",
            "description": "Line Item id to report on"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to report on"
          },
          "mediaType": {
            "enum": [
              "unknown",
              "video",
              "display",
              "all"
            ],
            "type": "string",
            "description": "Filter on the type of media: unknown, display, video",
            "default": "all"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency",
                "winRate",
                "sampledBidsWon",
                "sampledBidsParticipated"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "targetedKeywordTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "generic",
                "branded",
                "conquesting"
              ],
              "type": "string"
            },
            "description": "Filter on targeted keyword type: unknown, generic, branded, conquesting"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Line Items report body request"
      },
      "AsyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncLineItemsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncOffsiteReport": {
        "required": [
          "accountIds",
          "dimensions",
          "endDate",
          "metrics",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account ids to report on"
          },
          "buyType": {
            "enum": [
              "auction",
              "preferredDeals",
              "sponsorship"
            ],
            "type": "string",
            "description": "Filter on buy type: Auction, Preferred Deals or Sponsorship"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "creativeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Creative ids to filter"
          },
          "dimensions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "daysDifference",
                "advDate",
                "advHour",
                "campaignId",
                "campaignName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "billingType",
                "environment",
                "adFormatSize",
                "ssp",
                "publisher",
                "inventoryType",
                "mediaType",
                "buyType",
                "salesChannel",
                "creativeId",
                "creativeName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to filter"
          },
          "mediaType": {
            "enum": [
              "unknown",
              "video",
              "display",
              "all"
            ],
            "type": "string",
            "description": "Filter on the type of media: unknown, display, video",
            "default": "all"
          },
          "metrics": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "audience",
                "uniqueVisitors",
                "reachRate",
                "impressions",
                "frequency",
                "winRate",
                "clicks",
                "ctr",
                "viewability",
                "cpc",
                "ecpm",
                "cpm",
                "spend",
                "attributedUnits",
                "attributedSales",
                "roas",
                "videoStarts",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoStartingRate",
                "videoCompletionRate",
                "videoCPC",
                "videoCPCV",
                "visits",
                "qualifiedVisits",
                "landingRate"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Retailer ids to filter"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Async Offsite report body request"
      },
      "AsyncOffsiteReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncOffsiteReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "AsyncOffsiteReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncOffsiteReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "AsyncReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatusResponseResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Async Report response format"
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of an audience error"
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          }
        },
        "description": "Definition of the warning"
      },
      "BalanceHistoryChangeDataCaptureV1": {
        "required": [
          "changeDetails",
          "changeType",
          "dateOfModification",
          "modifiedByUser"
        ],
        "type": "object",
        "properties": {
          "changeDetails": {
            "$ref": "#/components/schemas/ChangeDetailsV1"
          },
          "changeType": {
            "enum": [
              "BalanceCreated",
              "BalanceAdded",
              "BalanceRemoved",
              "BalanceUncapped",
              "BalanceCapped",
              "EndDate",
              "StartDate",
              "BalanceName",
              "PoNumber",
              "ValueAdd",
              "Unknown"
            ],
            "type": "string",
            "description": "Represent the type of change states of the history."
          },
          "dateOfModification": {
            "type": "string",
            "description": "Date when data change has occured.",
            "format": "date-time"
          },
          "memo": {
            "type": "string",
            "description": "Memo associate with the insertion order modification.",
            "nullable": true
          },
          "modifiedByUser": {
            "type": "string",
            "description": "Username who modified the insertion order."
          }
        },
        "additionalProperties": false,
        "description": "Data model represents the data change capture of balance history."
      },
      "BalanceResponseV2": {
        "required": [
          "name",
          "startDate",
          "balanceType",
          "spendType",
          "privateMarketBillingType"
        ],
        "type": "object",
        "properties": {
          "balanceType": {
            "enum": [
              "unknown",
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Type of the balance."
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time of the balance.",
            "format": "date-time"
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "privateMarketBillingType": {
            "enum": [
              "notApplicable",
              "billByRetailer",
              "billByCriteo",
              "unknown"
            ],
            "type": "string",
            "description": "Billing type for Private Market of the balance."
          },
          "remaining": {
            "type": "number",
            "description": "Amount of remaining funds of the balance.",
            "format": "double",
            "nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Spend Type of the balance."
          },
          "spent": {
            "type": "number",
            "description": "Amount of spent funds of the balance.",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD."
          },
          "status": {
            "enum": [
              "unknown",
              "scheduled",
              "active",
              "ended"
            ],
            "type": "string",
            "description": "Status of the balance."
          },
          "updatedAt": {
            "type": "string",
            "description": "Update time of the balance.",
            "format": "date-time"
          }
        },
        "description": "A Retail Media Balance used to determine the funds available for any or all campaigns in an account",
        "nullable": true
      },
      "BalanceResponseV2PagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources"
      },
      "BalanceResponseV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true
      },
      "BatchAcceptedResponse": {
        "required": [
          "operationToken"
        ],
        "type": "object",
        "properties": {
          "operationToken": {
            "type": "string"
          }
        },
        "description": "A batch was accepted. The report can be accessed using the reporting endpoint."
      },
      "BotMessage": {
        "title": "BotMessage",
        "type": "object",
        "properties": {
          "closing": {
            "title": "Closing",
            "type": "string",
            "description": "closing remark from the bot",
            "nullable": true
          },
          "opening": {
            "title": "Opening",
            "type": "string",
            "description": "opening comment from the bot, introducing the list of recommended products if relevant.",
            "nullable": true
          },
          "productRecos": {
            "title": "Productrecos",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRecommendation"
            },
            "description": "list of recommended products",
            "nullable": true
          }
        },
        "description": "bot structured answer to the user prompt",
        "nullable": true
      },
      "BrandCatalogRequestV2": {
        "type": "object",
        "properties": {
          "brandIdFilter": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The brand ids to filter the catalog by.",
              "format": "long-id"
            },
            "description": "The brand ids to filter the catalog by."
          },
          "includeFields": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Description",
                "ImageUrl",
                "GoogleCategory",
                "RetailerName",
                "Category",
                "BrandName"
              ],
              "type": "string"
            },
            "description": "Out of the optional fields, only the ones specified will be included in the catalog generated."
          },
          "modifiedAfter": {
            "type": "string",
            "description": "Only products modified after this time will be returned.",
            "format": "date-time"
          },
          "retailerIdFilter": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The retailer ids to filter the catalog by."
          }
        },
        "description": "A request for a catalog under the specified format.",
        "nullable": true
      },
      "BrandIdSearchRequest": {
        "required": [
          "retailerIds"
        ],
        "type": "object",
        "properties": {
          "brandType": {
            "enum": [
              "uc",
              "retailer",
              "all"
            ],
            "type": "string",
            "description": "The type of brand, primarily where this brand belongs: UC, Retailer or All (both)"
          },
          "name": {
            "type": "string",
            "description": "The name of the brand(s) to be searched",
            "nullable": true
          },
          "retailerIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "IDs of the retailers we want to limit the search to"
          }
        },
        "description": "An object that represents the request of BrandIdSearch endpoint."
      },
      "BrandIdSearchResult": {
        "required": [
          "brandType",
          "id",
          "name",
          "retailerIds"
        ],
        "type": "object",
        "properties": {
          "brandType": {
            "type": "string",
            "description": "The type of the brand"
          },
          "id": {
            "type": "string",
            "description": "The brand id"
          },
          "name": {
            "type": "string",
            "description": "The name of the brand"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The retailer ids associated to the brand"
          }
        },
        "description": "An object that represents the result from a brand ID search.",
        "nullable": true
      },
      "BrandPreview": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Brand Name"
          }
        },
        "description": "Retail media brands"
      },
      "BrandPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBrandPreview"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "CatalogStatusV2": {
        "required": [
          "status",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
            "format": "date-time"
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "md5Checksum": {
            "type": "string",
            "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "An optional information message intended for developer consumption.",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "description": "An enumeration of the status of the catalog."
          }
        },
        "description": "The status of an asynchronous request to generate a catalog"
      },
      "CategoriesSearchRequestV1": {
        "type": "object",
        "properties": {
          "categoryIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Categories search category ids criteria.",
            "nullable": true
          },
          "textSubstring": {
            "type": "string",
            "description": "Categories search text substring criteria.",
            "nullable": true
          }
        },
        "description": "An object that represents the request of CategoriesSearch endpoint."
      },
      "Category202204": {
        "required": [
          "text",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category Name"
          },
          "parentId": {
            "type": "string",
            "description": "Category ParentId"
          },
          "text": {
            "type": "string",
            "description": "Category Text"
          }
        },
        "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID"
      },
      "ChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD."
          },
          "memo": {
            "type": "string",
            "description": "Memo."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD."
          }
        },
        "description": "An object that represents the available options to modify schedule of a balance."
      },
      "ChangeDatesOfBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfChangeDatesOfBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity"
      },
      "ChangeDetailsV1": {
        "type": "object",
        "properties": {
          "changeValue": {
            "type": "string",
            "description": "Change detail of a property of the insertion order.",
            "nullable": true
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of a property of the insertion order.",
            "nullable": true
          },
          "previousValue": {
            "type": "string",
            "description": "Previous value of a property of the insertion order.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Change details of a property of the balance."
      },
      "ChoiceVariableValue": {
        "required": [
          "chosenOptions"
        ],
        "type": "object",
        "properties": {
          "chosenOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The chosen options"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template choice variable (among different accepted options)",
        "nullable": true
      },
      "ColorVariableValue": {
        "type": "object",
        "properties": {
          "color": {
            "pattern": "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type": "string",
            "description": "The displayed color (HEX format)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template color variable",
        "nullable": true
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true
          }
        },
        "description": "Common problem object."
      },
      "CpcRateCardPreview": {
        "required": [
          "retailerMinimumCpcBid"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Category202204"
            },
            "description": "map of category id to category values",
            "nullable": true
          },
          "categoryMinimumCpcBids": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "map of category id to minimum cpc bids",
            "nullable": true
          },
          "retailerMinimumCpcBid": {
            "type": "number",
            "description": "retailer minimum cpc bid",
            "format": "double"
          }
        },
        "description": "Represents all minimum cpc rates for a retailer and category id"
      },
      "CpcRateCardPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCpcRateCardPreview"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "CreateBalanceV2": {
        "required": [
          "name",
          "startDate",
          "spendType"
        ],
        "type": "object",
        "properties": {
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "double"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance."
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Type of the balance spend."
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD."
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Balance"
      },
      "CreateBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreateBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity"
      },
      "Creative2": {
        "required": [
          "name",
          "status",
          "brandId",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "associatedLineItemIds",
          "updatedAt",
          "creativeFormatV2Type",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated Line Item Ids"
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64"
          },
          "creativeFormatV2Type": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "Custom",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "format": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment2"
            },
            "description": "Environment type (e.g. mobile, web, app)"
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32"
          },
          "status": {
            "enum": [
              "Ready",
              "InUse",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "format": "string"
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Template Name"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A creative entity",
        "nullable": true
      },
      "Creative2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative2"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true
      },
      "Creative2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true
      },
      "CreativeCreateModel2": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Create model of a creative"
      },
      "CreativeUpdateModel2": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Update model of a creative"
      },
      "CustomAttribute": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute."
          }
        },
        "description": "Defines a custom attribute of a product."
      },
      "DemandManagedFee": {
        "required": [
          "rate"
        ],
        "type": "object",
        "properties": {
          "rate": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "decimal fee rate between 0 and 1",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "settings for DSP fees"
      },
      "EntityResourceBrandIdSearchResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandIdSearchResult"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "description": "A domain entity exposed by the API, identified by a unique id."
      },
      "EntityResourceCategory202204": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Category202204"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "description": "A domain entity exposed by the API, identified by a unique id."
      },
      "EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceBrandIdSearchResult"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PagingOffsetLimitMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata."
      },
      "EntityResourceCollectionOutcomeCategory202204": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceCategory202204"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities."
      },
      "EntityResourceCollectionOutcomeCategory202204Metadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceCategory202204"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata."
      },
      "EntityResourceCollectionOutcomeLineItemKeywordReviewReportAndMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceLineItemKeywordReviewReport"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata."
      },
      "EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceOfRetailMediaChildAccount"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata."
      },
      "EntityResourceCollectionOutcomeOfSponsoredProductsLineItemAndMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceOfSponsoredProductsLineItem"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata."
      },
      "EntityResourceLineItemKeywordReviewReport": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LineItemKeywordReviewReport"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id."
      },
      "EntityResourceOfCatalogStatusV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CatalogStatusV2"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The Type of the resource.",
            "nullable": true
          }
        },
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true
      },
      "EntityResourceOfRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaChildAccount"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id."
      },
      "EntityResourceOfSponsoredProductsLineItem": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SponsoredProductsLineItem"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true
      },
      "EntityResourceOutcomeOfCatalogStatusV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourceOfCatalogStatusV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true
      },
      "EntityResourceOutcomeOfSponsoredProductsLineItem": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourceOfSponsoredProductsLineItem"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "EntityResourceOutcomePartnerBillingReportStatusV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourcePartnerBillingReportStatusV1"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity."
      },
      "EntityResourcePartnerBillingReportStatusV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PartnerBillingReportStatusV1"
          },
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true
      },
      "ExportReportColumn": {
        "required": [
          "name",
          "role",
          "type"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency of the column",
            "nullable": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Flag for deprecated column",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the exported column",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "description": "Duration of the column",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the exported column"
          },
          "role": {
            "enum": [
              "Dimension",
              "Property",
              "Interval",
              "Metric"
            ],
            "type": "string",
            "description": "Role of the column"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the column",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title of the exported column",
            "nullable": true
          },
          "type": {
            "enum": [
              "Boolean",
              "Number",
              "Money",
              "String",
              "Date",
              "DateTime",
              "Interval",
              "Duration"
            ],
            "type": "string",
            "description": "Type of the column"
          }
        },
        "description": "Description of a column from an async report request"
      },
      "ExportReportMetaData": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportReportColumn"
            },
            "nullable": true
          },
          "rows": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for an async report request: descriptions of the columns and number of rows returned",
        "nullable": true
      },
      "ExternalRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "description": "Paying entity name of ads for the Digital Services Act",
            "nullable": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries associated with the account",
            "nullable": true
          },
          "currencyId": {
            "type": "string",
            "description": "the currency for the account",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account",
        "nullable": true
      },
      "FilesVariableValue": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The assets representing the images to be displayed"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template file variable (one or several files), like images in a creative",
        "nullable": true
      },
      "FlightLeg": {
        "required": [
          "dayOfWeek",
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "everyday",
              "weekdays",
              "weekends"
            ],
            "type": "string",
            "description": "Enum for the days of the week."
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A leg of a flight schedule outlining which days and times the line item will run."
      },
      "FlightSchedule": {
        "type": "object",
        "properties": {
          "legs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlightLeg"
            },
            "description": "A list of flight legs on which the line item will run.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A flight schedule for a line item.",
        "nullable": true
      },
      "HyperlinkVariableValue": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to redirect to",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template hyperlink variable",
        "nullable": true
      },
      "InbotDiscussion": {
        "title": "InbotDiscussion",
        "type": "object",
        "properties": {
          "messages": {
            "title": "Messages",
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "ordered list of previous messages, alternating between user prompts and bot answers"
          }
        },
        "description": "discussion between the user and the chatbot"
      },
      "InbotDiscussionBodyModel": {
        "title": "InbotDiscussionBodyModel",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InbotDiscussionDataInstanceModel"
          }
        },
        "description": "an API recommendation message"
      },
      "InbotDiscussionDataInstanceModel": {
        "title": "InbotDiscussionDataInstanceModel",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/InbotDiscussion"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "default": "InbotDiscussion"
          }
        },
        "description": "an API recommendation request"
      },
      "InputKeywordsModel": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords to be added or removed from a line item."
      },
      "InputResourceOfPreferredLineItemCreateModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PreferredLineItemCreateModelV2"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "Data model for a Resource"
      },
      "Installment": {
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Price"
          },
          "months": {
            "type": "integer",
            "description": "The number of installments the buyer has to pay.",
            "format": "int64"
          }
        },
        "description": "Defines the installment of a product."
      },
      "KeywordDataModel": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywordsModel"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "reviewState": {
            "$ref": "#/components/schemas/ReviewStateModel"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override"
      },
      "KeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/KeywordDataModel"
            },
            "nullable": true
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords associated with a line item.",
        "nullable": true
      },
      "KeywordsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/KeywordsModel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords associated with a line item.",
        "nullable": true
      },
      "KeywordsModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/KeywordsModelResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Response object containing keywords associated with a line item."
      },
      "LineItemCappingV2": {
        "required": [
          "type",
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "enum": [
              "unknown",
              "day",
              "session"
            ],
            "type": "string",
            "description": "Line Item Capping Type Enum"
          }
        },
        "description": "Frequency Capping for a Preferred Line Item",
        "nullable": true
      },
      "LineItemKeywordReviewReport": {
        "required": [
          "accountId",
          "accountName",
          "campaignId",
          "campaignName",
          "countKeywords",
          "lineItemId",
          "lineItemName",
          "retailerId",
          "retailerName"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "External ID of the account containing the campaign containing the line item this report is for"
          },
          "accountName": {
            "type": "string",
            "description": "Name of the account containing the campaign containing the line item this report is for"
          },
          "campaignId": {
            "type": "string",
            "description": "External ID of the campaign containing the line item this report is for"
          },
          "campaignName": {
            "type": "string",
            "description": "Name of the campaign containing the line item this report is for"
          },
          "countKeywords": {
            "type": "integer",
            "description": "Number of PositiveExactMatch keywords on this line item that are in either \"InReview\" or \"Pending\" state",
            "format": "int32"
          },
          "lineItemId": {
            "type": "string",
            "description": "External ID of the line item that this report is for"
          },
          "lineItemName": {
            "type": "string",
            "description": "Name of the line item that this report is for"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer ID connected to the line item this report is for"
          },
          "retailerName": {
            "type": "string",
            "description": "Name of the retailer connected to the line item this report is for"
          }
        },
        "additionalProperties": false,
        "description": "Reports on a line item which contains one or more actionable keyword reviews",
        "nullable": true
      },
      "LineItemPageCategoryV2": {
        "required": [
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string"
          },
          "includeChildren": {
            "type": "boolean",
            "default": true
          }
        },
        "description": "Category information for a preferred line item page"
      },
      "LineItemPageV2": {
        "required": [
          "pageType"
        ],
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemPageCategoryV2"
            },
            "nullable": true
          },
          "pageType": {
            "enum": [
              "unknown",
              "search",
              "home",
              "browse",
              "checkout",
              "category",
              "productDetail",
              "confirmation",
              "merchandising",
              "deals",
              "favorites",
              "searchBar",
              "categoryMenu"
            ],
            "type": "string",
            "description": "Page Type Enum"
          },
          "searchKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "description": "Page information for a preferred line item",
        "nullable": true
      },
      "LineItemProductStatus": {
        "enum": [
          "unknown",
          "active",
          "paused"
        ],
        "type": "string",
        "description": "The status of a promoted product in the context of the line item.",
        "nullable": true
      },
      "LoadSkuOffersRequest": {
        "required": [
          "skuOfferLoads"
        ],
        "type": "object",
        "properties": {
          "skuOfferLoads": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkuOfferLoad"
            }
          }
        },
        "additionalProperties": false,
        "description": "The request passed by the caller of the Load endpoint"
      },
      "LoyaltyPoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
          },
          "pointsValue": {
            "type": "integer",
            "description": "The retailer's loyalty points in absolute value.",
            "format": "int64"
          },
          "ratio": {
            "type": "number",
            "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
            "format": "double"
          }
        },
        "description": "Defines how a client earns loyalty points after buying this product."
      },
      "ManagedServiceFee": {
        "required": [
          "onsiteDisplayEnabled",
          "onsiteSponsoredProductsEnabled",
          "rate"
        ],
        "type": "object",
        "properties": {
          "onsiteDisplayEnabled": {
            "type": "boolean",
            "description": "whether fee is enabled for display campaigns"
          },
          "onsiteSponsoredProductsEnabled": {
            "type": "boolean",
            "description": "whether fee is enabled for sponsored product campaigns"
          },
          "rate": {
            "maximum": 1,
            "minimum": 0,
            "type": "number",
            "description": "decimal fee rate between 0 and 1",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "settings for managed service fees"
      },
      "MatchTypeModel": {
        "enum": [
          "PositiveExactMatch",
          "NegativeExactMatch",
          "NegativeBroadMatch"
        ],
        "type": "string",
        "description": "The match type of a keyword."
      },
      "Message": {
        "title": "Message",
        "type": "object",
        "properties": {
          "botMessage": {
            "$ref": "#/components/schemas/BotMessage"
          },
          "userMessage": {
            "title": "Usermessage",
            "type": "string",
            "description": "user prompt",
            "nullable": true
          }
        },
        "description": "message of the discussion"
      },
      "MessageBodyModel": {
        "title": "MessageBodyModel",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MessageDataInstanceModel"
          },
          "errors": {
            "title": "Errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageError"
            },
            "nullable": true
          }
        },
        "description": "error message"
      },
      "MessageDataInstanceModel": {
        "title": "MessageDataInstanceModel",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Message"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "default": "Message",
            "nullable": true
          }
        },
        "description": "an API answer message",
        "nullable": true
      },
      "MessageError": {
        "title": "MessageError",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "type": "string",
            "description": "error code",
            "nullable": true
          },
          "instance": {
            "title": "Instance",
            "type": "string",
            "description": "specific occurrence of the problem",
            "nullable": true
          },
          "traceId": {
            "title": "Traceid",
            "type": "string",
            "description": "correlation ID, unique to each request",
            "nullable": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "error category",
            "nullable": true
          }
        },
        "description": "error message"
      },
      "Metadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request.",
        "nullable": true
      },
      "NillableDecimal": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The value. If missing or null the value is set to \"null\"",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Placeholder object for value for which \"null\" is a valid business value",
        "nullable": true
      },
      "NillableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The string's value. If missing or null the string's value is set to \"null\"",
            "nullable": true
          }
        },
        "description": "Placeholder object for string value  for which \"null\" is a valid business value",
        "nullable": true
      },
      "OfferLoad": {
        "required": [
          "availability",
          "price",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "availability": {
            "enum": [
              "OutOfStock",
              "PreOrder",
              "InStock",
              "BackOrder"
            ],
            "type": "string"
          },
          "offerType": {
            "enum": [
              "Seller",
              "Retailer"
            ],
            "type": "string",
            "default": "Seller"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sellerId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "The state of a single offer which is being added for a SKU as part of a load operation"
      },
      "OfferUpdate": {
        "required": [
          "availability",
          "price",
          "sellerId",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "availability": {
            "enum": [
              "OutOfStock",
              "PreOrder",
              "InStock",
              "BackOrder"
            ],
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sellerId": {
            "type": "string"
          },
          "skuId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "The state of a single offer after it is replaced as part of an Update operation"
      },
      "PageMetadata": {
        "required": [
          "currentPageSize",
          "currentPageIndex"
        ],
        "type": "object",
        "properties": {
          "currentPageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "currentPageSize": {
            "type": "integer",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          },
          "totalItemsAcrossAllPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Metadata related to the current request",
        "nullable": true
      },
      "PageOfBalanceHistoryChangeDataCaptureV1": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceHistoryChangeDataCaptureV1"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of items with metadata for offset and limit based paging."
      },
      "PageTypeEnvironment2": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "description": "Creative format, defining where the creative can be served",
              "format": "string"
            },
            "description": "List of environments per PageType",
            "nullable": true
          },
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals",
              "Favorites",
              "SearchBar",
              "CategoryMenu"
            ],
            "type": "string",
            "description": "Creative PageType",
            "format": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The PageType-Environment Tuples for creatives"
      },
      "PagingOffsetLimitMetadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          }
        },
        "description": "Metadata for paging data.",
        "nullable": true
      },
      "PartnerBillingReportRequestV1": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "On which accounts the report is created.",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report (ISO 8601 format, e.g. YYYY-MM-DD).",
            "format": "date"
          },
          "format": {
            "enum": [
              "json",
              "csv"
            ],
            "type": "string",
            "description": "Format type of the report.",
            "default": "json"
          },
          "retailerIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "On which retailers the report is created.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report (ISO 8601 format, e.g. YYYY-MM-DD).",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "The request object of a Partner Billing Report."
      },
      "PartnerBillingReportStatusV1": {
        "required": [
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "The date when the report request is created.",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string",
            "description": "Possible error message along with the status.",
            "nullable": true
          },
          "status": {
            "enum": [
              "pending",
              "success",
              "failed",
              "expired"
            ],
            "type": "string",
            "description": "Status of the report."
          }
        },
        "additionalProperties": false,
        "description": "Status info of a Partner Billing Report.",
        "nullable": true
      },
      "PlacementPreview": {
        "required": [
          "name",
          "retailerId",
          "pageType",
          "pageEnvironmentType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the placement"
          },
          "pageEnvironmentType": {
            "enum": [
              "Unknown",
              "Web",
              "Mobile",
              "App",
              "Lockout",
              "Mixed",
              "iOS",
              "Android"
            ],
            "type": "string",
            "description": "Page Environment"
          },
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Page Type"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id"
          }
        },
        "description": "Ad Placement information on a page"
      },
      "PlacementPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPlacementPreview"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PreferredLineItemCreateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "pacing",
          "page",
          "targetRetailerId",
          "budget"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "double"
          },
          "capping": {
            "$ref": "#/components/schemas/LineItemCappingV2"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "description": "Line Item Pacing Enum"
          },
          "page": {
            "$ref": "#/components/schemas/LineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          }
        },
        "description": "Model used to create a preferred line item"
      },
      "PreferredLineItemCreateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfPreferredLineItemCreateModelV2"
          }
        },
        "description": "Data model for a create input resource"
      },
      "PreferredLineItemUpdateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "double"
          },
          "capping": {
            "$ref": "#/components/schemas/LineItemCappingV2"
          },
          "creativeId": {
            "type": "string",
            "format": "long-id"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "default": "accelerated"
          },
          "page": {
            "$ref": "#/components/schemas/LineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          }
        },
        "description": "Model used to update a preferred line item"
      },
      "PreferredLineItemUpdateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemUpdateModelV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity"
      },
      "PreferredLineItemV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status",
          "targetRetailerId",
          "budget",
          "campaignId"
        ],
        "type": "object",
        "properties": {
          "budget": {
            "type": "number",
            "format": "double"
          },
          "budgetRemaining": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "format": "long-id"
          },
          "capping": {
            "$ref": "#/components/schemas/LineItemCappingV2"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "creativeId": {
            "type": "string",
            "description": "creative Id",
            "format": "long-id",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "nullable": true
          },
          "page": {
            "$ref": "#/components/schemas/LineItemPageV2"
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "A Retail Media Preferred Line Item used to hold bid settings for one or many promoted products on a single retailer"
      },
      "PreferredLineItemV2PagedListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a paged list of response resources"
      },
      "PreferredLineItemV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "Price": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency of the price."
          },
          "value": {
            "type": "string",
            "description": "The price represented as a number. See JSON's number specification for more details."
          }
        },
        "description": "Defines a price."
      },
      "PrivateMarketAccountFees": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The account Id",
            "nullable": true
          },
          "fees": {
            "$ref": "#/components/schemas/PrivateMarketFees"
          }
        },
        "additionalProperties": false,
        "description": "The Fees for a Specific private market account",
        "nullable": true
      },
      "PrivateMarketFees": {
        "required": [
          "demandManaged",
          "managedService"
        ],
        "type": "object",
        "properties": {
          "demandManaged": {
            "$ref": "#/components/schemas/DemandManagedFee"
          },
          "managedService": {
            "$ref": "#/components/schemas/ManagedServiceFee"
          }
        },
        "additionalProperties": false,
        "description": "fees for a private market account",
        "nullable": true
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem."
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
          },
          "stackTrace": {
            "type": "string",
            "description": "Technical information, only used in non-prod environments"
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type"
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category."
          }
        },
        "description": "Data model for common error or warning"
      },
      "Product": {
        "required": [
          "channel",
          "id",
          "imageLink",
          "link",
          "title"
        ],
        "type": "object",
        "properties": {
          "additionalImageLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional URLs of images of the item."
          },
          "adsGrouping": {
            "type": "string",
            "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
          },
          "adsLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Similar to adsGrouping, but only works on CPC."
          },
          "adsRedirect": {
            "type": "string",
            "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads."
          },
          "adult": {
            "type": "boolean",
            "description": "Set to true if the item is targeted towards adults. RECOMMENDED."
          },
          "ageGroup": {
            "type": "string",
            "description": "Target age group of the item."
          },
          "availability": {
            "type": "string",
            "description": "Availability status of the item. RECOMMENDED."
          },
          "availabilityDate": {
            "type": "string",
            "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
          },
          "badge": {
            "type": "string",
            "description": "URL of a badge image to display on the product."
          },
          "brand": {
            "type": "string",
            "description": "Brand of the item. RECOMMENDED."
          },
          "channel": {
            "enum": [
              "online"
            ],
            "type": "string",
            "description": "The item's channel (online only)."
          },
          "color": {
            "type": "string",
            "description": "Color of the item."
          },
          "condition": {
            "type": "string",
            "description": "Condition or state of the item."
          },
          "contentLanguage": {
            "type": "string",
            "description": "The two-letter ISO 639-1 language code for the item."
          },
          "costOfGoodsSold": {
            "$ref": "#/components/schemas/Price"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttribute"
            },
            "description": "A list of custom (merchant-provided) attributes. This is useful for submitting attributes not explicitly exposed by the API. Declaring attributes explicitly exposed by the API using is forbidden"
          },
          "customLabel0": {
            "type": "string",
            "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
          },
          "customLabel1": {
            "type": "string",
            "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
          },
          "customLabel2": {
            "type": "string",
            "description": "Custom label 2 for custom grouping of items in a Shopping campaign."
          },
          "customLabel3": {
            "type": "string",
            "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
          },
          "customLabel4": {
            "type": "string",
            "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
          },
          "description": {
            "type": "string",
            "description": "Description of the item. RECOMMENDED. (5000 UTF8 characters max)."
          },
          "displayAdsId": {
            "type": "string",
            "description": "An identifier for an item for dynamic remarketing campaigns."
          },
          "displayAdsLink": {
            "type": "string",
            "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
          },
          "displayAdsSimilarIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser-specified recommendations."
          },
          "displayAdsTitle": {
            "type": "string",
            "description": "Title of an item for dynamic remarketing campaigns."
          },
          "displayAdsValue": {
            "type": "number",
            "description": "Offer margin for dynamic remarketing campaigns.",
            "format": "double"
          },
          "energyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "excludedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
          },
          "expirationDate": {
            "type": "string",
            "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format."
          },
          "externalSellerId": {
            "type": "string",
            "description": "The external id of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "externalSellerName": {
            "type": "string",
            "description": "The external name of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "gender": {
            "type": "string",
            "description": "Target gender of the item."
          },
          "googleProductCategory": {
            "type": "string",
            "description": "Google's category of the item (see Google product taxonomy). RECOMMENDED."
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number (GTIN) of the item. RECOMMENDED."
          },
          "id": {
            "type": "string",
            "description": "A unique identifier for the item. Aka Product ID. Don’t use casing to make IDs unique."
          },
          "identifierExists": {
            "type": "boolean",
            "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
          },
          "imageLink": {
            "type": "string",
            "description": "URL of an image of the item. Supported formats: PNG, JPEG, GIF. (2000 UTF8 characters max). "
          },
          "includedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations."
          },
          "installment": {
            "$ref": "#/components/schemas/Installment"
          },
          "isBundle": {
            "type": "boolean",
            "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Shared identifier for all variants of the same product. RECOMMENDED. Don’t use casing to make IDs unique. (50 characters max)"
          },
          "kind": {
            "type": "string",
            "description": "Identifies what kind of resource this is."
          },
          "link": {
            "type": "string",
            "description": "URL directly linking to your item's page on your website. (1000 UTF8 characters max)."
          },
          "loyaltyPoints": {
            "$ref": "#/components/schemas/LoyaltyPoints"
          },
          "material": {
            "type": "string",
            "description": "The material of which the item is made."
          },
          "maxEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "maxHandlingTime": {
            "type": "integer",
            "description": "Maximal product handling time (in business days).",
            "format": "int64"
          },
          "minEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "minHandlingTime": {
            "type": "integer",
            "description": "Minimal product handling time (in business days).",
            "format": "int64"
          },
          "mobileLink": {
            "type": "string",
            "description": "accounts.link to a mobile-optimized version of the landing page."
          },
          "mpn": {
            "type": "string",
            "description": "Manufacturer Part Number (MPN) of the item. RECOMMENDED."
          },
          "multipack": {
            "type": "integer",
            "description": "The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.",
            "format": "int64"
          },
          "numberOfReviews": {
            "type": "integer",
            "description": "The number of customer reviews for the product",
            "format": "int32"
          },
          "offerId": {
            "type": "string",
            "description": "Not used by Criteo."
          },
          "pattern": {
            "type": "string",
            "description": "The item's pattern (e.g. polka dots)."
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "productRating": {
            "type": "string",
            "description": "The product rating for the product"
          },
          "productTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category keys of the item (formatted as in productTypes)."
          },
          "productTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Categories of the item (formatted as in products data specification)."
          },
          "promotionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The unique ID of a promotion."
          },
          "salePrice": {
            "$ref": "#/components/schemas/Price"
          },
          "salePriceEffectiveDate": {
            "type": "string",
            "description": "Date range during which the item is on sale."
          },
          "sellerId": {
            "type": "string",
            "description": "(Deprecated Field) The external ID of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "sellOnGoogleQuantity": {
            "type": "integer",
            "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
            "format": "int64"
          },
          "shipping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductShipping"
            },
            "description": "Shipping rules."
          },
          "shippingHeight": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingLabel": {
            "type": "string",
            "description": "The shipping label of the product, used to group product in account-level shipping rules."
          },
          "shippingLength": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingWeight": {
            "$ref": "#/components/schemas/ProductShippingWeight"
          },
          "shippingWidth": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Size of the item. RECOMMENDED. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value."
          },
          "sizeSystem": {
            "type": "string",
            "description": "System in which the size is specified. Recommended for apparel items."
          },
          "sizeType": {
            "type": "string",
            "description": "The cut of the item. Recommended for apparel items."
          },
          "source": {
            "type": "string",
            "description": "The source of the offer, i.e., how the offer was created."
          },
          "targetCountry": {
            "type": "string",
            "description": "The CLDR territory code for the item."
          },
          "taxCategory": {
            "type": "string",
            "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTax"
            },
            "description": "Tax information."
          },
          "title": {
            "type": "string",
            "description": "Title of the item. (500 UTF8 characters max)."
          },
          "transitTimeLabel": {
            "type": "string",
            "description": "The transit time label of the product, used to group product in account-level transit time tables."
          },
          "unitPricingBaseMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingBaseMeasure"
          },
          "unitPricingMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingMeasure"
          }
        },
        "description": "Defines a product to be inserted or updated."
      },
      "ProductButtonRequest": {
        "required": [
          "name",
          "backgroundImage",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image"
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the Product Button"
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of skus on the Product Button"
          }
        },
        "description": "The Product Button entity used for Input"
      },
      "ProductButtonRequestListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities",
        "nullable": true
      },
      "ProductButtonRequestRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "nullable": true
      },
      "ProductButtonResponse": {
        "required": [
          "name",
          "backgroundImage",
          "rank",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image"
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the Product Button"
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the Product Button",
            "format": "int32"
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of skus on the Product Button"
          }
        },
        "description": "The Product Button entity"
      },
      "ProductButtonResponseListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonResponse"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "nullable": true
      },
      "ProductMetadata": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of items available.",
            "format": "int32",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of items in the response.",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "Zero based offset of the first item in the response.",
            "format": "int32",
            "nullable": true
          },
          "responseCount": {
            "type": "integer",
            "description": "Number of items in the response.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata about the response. Used for pagination.",
        "nullable": true
      },
      "ProductRecommendation": {
        "title": "ProductRecommendation",
        "required": [
          "rationale"
        ],
        "type": "object",
        "properties": {
          "brand": {
            "title": "Brand",
            "type": "string",
            "description": "brand of the product",
            "nullable": true
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "currency of the price of the product",
            "nullable": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "description of the product",
            "nullable": true
          },
          "imageUrl": {
            "title": "Imageurl",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "url of the product image",
            "format": "uri",
            "nullable": true
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "name of the product",
            "nullable": true
          },
          "price": {
            "title": "Price",
            "type": "number",
            "description": "numerical value of the price of the product",
            "nullable": true
          },
          "rationale": {
            "title": "Rationale",
            "type": "string",
            "description": "reason for this recommendation, given by the bot"
          },
          "url": {
            "title": "Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "url of the product on the retailer website",
            "format": "uri",
            "nullable": true
          }
        },
        "description": "recommendation data for a product"
      },
      "ProductResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings."
      },
      "ProductsCustomBatchRequest": {
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsCustomBatchRequestEntry"
            },
            "description": "The request entries to be processed in the batch."
          }
        },
        "description": "Defines a batch of operations."
      },
      "ProductsCustomBatchRequestEntry": {
        "required": [
          "merchantId",
          "method"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "description": "An entry ID, unique within the batch request.",
            "format": "int64"
          },
          "feedId": {
            "type": "string",
            "description": "Not used by Criteo."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Deprecated (providing this information is no more needed, this field will be removed in next release). The itemGroupId of the product to delete. To be defined when the method is delete and the product is a variant."
          },
          "merchantId": {
            "type": "integer",
            "description": "The ID of the managing account. Criteo: the partnerId.",
            "format": "int32"
          },
          "method": {
            "enum": [
              "delete",
              "insert"
            ],
            "type": "string",
            "description": "The method of the batch entry."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "type": "string",
            "description": "The Product ID to delete. Only defined if the method is delete."
          }
        },
        "description": "A product event for a batch request."
      },
      "ProductShipping": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The CLDR territory code of the country to which an item will ship."
          },
          "locationGroupName": {
            "type": "string",
            "description": "The location where the shipping is applicable, represented by a location group name."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which a shipping rate applies."
          },
          "service": {
            "type": "string",
            "description": "A free-form description of the service class or delivery speed."
          }
        },
        "description": "Defines the shipping information of a product."
      },
      "ProductShippingDimension": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of value."
          },
          "value": {
            "type": "number",
            "description": "The dimension of the product used to calculate the shipping cost of the item.",
            "format": "double"
          }
        },
        "description": "Defines the shipping dimension of a product."
      },
      "ProductShippingWeight": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of value."
          },
          "value": {
            "type": "number",
            "description": "The weight of the product used to calculate the shipping cost of the item.",
            "format": "double"
          }
        },
        "description": "Defines the shipping weight of a product."
      },
      "ProductTax": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "The country within which the item is taxed, specified as a CLDR territory code."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
          },
          "rate": {
            "type": "number",
            "description": "The percentage of tax rate that applies to the item price.",
            "format": "double"
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which the tax rate applies."
          },
          "taxShip": {
            "type": "boolean",
            "description": "Set to true if tax is charged on shipping."
          }
        },
        "description": "Defines the tax information of a product."
      },
      "ProductUnitPricingBaseMeasure": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of the denominator."
          },
          "value": {
            "type": "integer",
            "description": "The denominator of the unit price.",
            "format": "int64"
          }
        },
        "description": "Defines a measurement."
      },
      "ProductUnitPricingMeasure": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string",
            "description": "The unit of measure."
          },
          "value": {
            "type": "number",
            "description": "The measurement of an item.",
            "format": "double"
          }
        },
        "description": "Defines a measurement."
      },
      "PromotedProduct": {
        "type": "object",
        "properties": {
          "bidOverride": {
            "type": "number",
            "description": "The bid override for the promoted product for this line item. Ignored unless adding a product.",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "A retailer defined SKU ID for the promoted product.",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/LineItemProductStatus"
          }
        },
        "additionalProperties": false,
        "description": "A promoted product.",
        "nullable": true
      },
      "PromotedProductResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PromotedProduct"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing a promoted product."
      },
      "PromotedProductResourceCollectionInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request object containing promoted products to be appended, deleted, paused or unpaused."
      },
      "PromotedProductResourceCollectionOutcome": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/ProductMetadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing promoted products."
      },
      "RecommendedCategoriesRequestV1": {
        "required": [
          "productIds"
        ],
        "type": "object",
        "properties": {
          "productIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Sku id list."
          }
        },
        "description": "An object that represents the request of RecommendCategories endpoint."
      },
      "RecommendedKeywordsRequestV1": {
        "required": [
          "productIds"
        ],
        "type": "object",
        "properties": {
          "productIds": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Product Id list that the recommended keywords generated on."
          }
        },
        "additionalProperties": false,
        "description": "Request model of RecommendedKeywords"
      },
      "RecommendedKeywordsResponseV1": {
        "required": [
          "recommendedKeywords"
        ],
        "type": "object",
        "properties": {
          "recommendedKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Recommended keywords generated by given retailer Id and sku Ids."
          }
        },
        "additionalProperties": false,
        "description": "Response model of Recommended Keywords",
        "nullable": true
      },
      "ReportDataResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "description": "Data response format",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "ReportDetailError": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "isServerRelated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "enum": [
              "UnknownError",
              "InvalidBigImageUrl",
              "InvalidProductId",
              "InvalidProductUrl",
              "InvalidSmallImageUrl",
              "JsonParsingIssue",
              "MissingID",
              "MissingImages",
              "MissingName",
              "MissingURL",
              "NonAsciiId",
              "OverlargeBigImage",
              "OverlargeID",
              "OverlargeSmallImage",
              "OverlargeURL",
              "ConfigurationError"
            ],
            "type": "string"
          }
        },
        "description": "An error on a batch operation."
      },
      "ReportDetailErrors": {
        "required": [
          "errors",
          "productId"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailError"
            }
          },
          "productId": {
            "type": "string",
            "description": "The product ID in lowercase"
          }
        },
        "description": "A list of errors on a batch operation."
      },
      "ReportDetailWarning": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "isServerRelated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "enum": [
              "OverlargeBadgeUrl",
              "InvalidBadgeUrl"
            ],
            "type": "string"
          }
        },
        "description": "A warning on a batch operation."
      },
      "ReportDetailWarnings": {
        "required": [
          "productId",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarning"
            }
          }
        },
        "description": "A list of warnings on a batch operation."
      },
      "ReportOkResponse": {
        "required": [
          "errorDetails",
          "importRequestTimestamp",
          "numberOfProductsDeleted",
          "numberOfProductsInTheBatch",
          "numberOfProductsUpserted",
          "numberOfProductsWithErrors",
          "numberOfProductsWithWarnings",
          "status",
          "warningDetails"
        ],
        "type": "object",
        "properties": {
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailErrors"
            },
            "description": "The list of errors with details."
          },
          "importRequestTimestamp": {
            "type": "string",
            "description": "The date when the original batch request was sent.",
            "format": "int64",
            "nullable": true
          },
          "numberOfProductsDeleted": {
            "type": "string",
            "description": "The number of products deleted.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsInTheBatch": {
            "type": "string",
            "description": "The number of products present in the batch.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsUpserted": {
            "type": "string",
            "description": "The number of products upserted.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsWithErrors": {
            "type": "string",
            "description": "The number of products with errors.",
            "format": "int32",
            "nullable": true
          },
          "numberOfProductsWithWarnings": {
            "type": "string",
            "description": "The number of products with Warnings.",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "ACCEPTED",
              "IN_PROGRESS",
              "VALIDATED",
              "VALIDATED_WITH_ERRORS",
              "FAILED"
            ],
            "type": "string",
            "description": "The status of the operation.\nThe operation is completed when the status is one of (VALIDATED,VALIDATED_WITH_ERRORS,FAILED)"
          },
          "warningDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarnings"
            },
            "description": "The list of Warnings with details."
          }
        },
        "description": "The report on a given operationToken is ready. The report is available for 4 days"
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReportDataResponseResource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/ExportReportMetaData"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Report response format"
      },
      "ResourceOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BalanceResponseV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "ResourceOfBrandPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeDatesOfBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ResourceOfCpcRateCardPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CpcRateCardPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfCreateBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ResourceOfCreative2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true
      },
      "ResourceOfPlacementPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PlacementPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfPreferredLineItemUpdateModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PreferredLineItemUpdateModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ResourceOfPreferredLineItemV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PreferredLineItemV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "ResourceOfProductButtonRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductButtonRequest"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "ResourceOfProductButtonResponse": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ProductButtonResponse"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "ResourceOfSellerPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SellerPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfSkuDataPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuDataPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfSkuSearchRequestPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource"
      },
      "ResourceOfUpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateBalanceModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "ResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings."
      },
      "RetailMediaContactlistAmendment": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users to add or remove, each in the schema specified"
              },
              "identifierType": {
                "enum": [
                  "Email",
                  "UserIdentifier",
                  "IdentityLink",
                  "Gum",
                  "CustomerId",
                  "PhoneNumber"
                ],
                "type": "string",
                "description": "What type of identifiers are used"
              },
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Whether to add or remove users"
              }
            },
            "description": "Attributes of retail media contact list amendment"
          },
          "type": {
            "type": "string",
            "description": "User List",
            "example": "AddRemoveContactlist"
          }
        },
        "description": "Request data of retail media contact list amendment"
      },
      "RetailMediaContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistAmendment"
          }
        },
        "description": "Request of Retail Media contactlist"
      },
      "RetailMediaContactlistOperation": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistOperationResponseAttributes"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "nullable": true,
            "example": "AddRemoveContactlistResult"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Operation on Retail Media contact list"
      },
      "RetailMediaContactlistOperationResponseAttributes": {
        "required": [
          "contactListId",
          "operation",
          "requestDate"
        ],
        "type": "object",
        "properties": {
          "contactListId": {
            "type": "integer",
            "description": "The affected user list id",
            "format": "int64"
          },
          "identifierType": {
            "type": "string",
            "description": "The schema specified for of the identifiers",
            "nullable": true
          },
          "nbInvalidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were invalid for the specified schema",
            "format": "int32",
            "nullable": true
          },
          "nbValidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were valid for the specified schema",
            "format": "int32",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "description": "The action recorded"
          },
          "requestDate": {
            "type": "string",
            "description": "When the action was recorded",
            "format": "date-time"
          },
          "sampleInvalidIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A sample of invalid identifiers if there is some",
            "nullable": true
          }
        },
        "description": "The attributes of Retail Media contact list operation"
      },
      "RetailMediaKeywordsReview": {
        "required": [
          "keywords"
        ],
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewSetState"
            },
            "description": "List of Phrase-ReviewState pairs describing keyword review updates to perform"
          }
        },
        "additionalProperties": false,
        "description": "Request object for approval of keyword reviews, containing a list of Phrase-ReviewState pairs"
      },
      "RetailMediaKeywordsReviewResult": {
        "required": [
          "keywords"
        ],
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReviewSetState"
            },
            "description": "List of Phrase-ReviewState pairs describing keyword review updates which were performed"
          }
        },
        "additionalProperties": false,
        "description": "Response object for approval of keyword reviews, containing a list of Phrase-ReviewState pairs",
        "nullable": true
      },
      "ReviewSetState": {
        "required": [
          "phrase",
          "reviewState"
        ],
        "type": "object",
        "properties": {
          "phrase": {
            "type": "string",
            "description": "Normalized key phrase for keyword review to update"
          },
          "reviewState": {
            "enum": [
              "Unknown",
              "InReview",
              "Recommended",
              "Approved",
              "AutoApproved",
              "Rejected",
              "AutoRejected"
            ],
            "type": "string",
            "description": "Keyword review state to set for a phrase"
          }
        },
        "additionalProperties": false,
        "description": "A Phrase-ReviewState pair describing an update to a keyword review"
      },
      "ReviewStateModel": {
        "enum": [
          "InReview",
          "Recommended",
          "Approved",
          "AutoApproved",
          "Rejected",
          "AutoRejected"
        ],
        "type": "string",
        "description": "The state of a keyword in the context of a line item."
      },
      "RmAlgebraNodeV1": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true
          },
          "audienceSegmentId": {
            "type": "string",
            "nullable": true
          },
          "not": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true
          }
        },
        "description": "Node in the audience algebra definition.",
        "nullable": true
      },
      "RmAudienceBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceCreateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several values."
      },
      "RmAudienceBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceDeleteEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities."
      },
      "RmAudienceBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceUpdateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities."
      },
      "RmAudienceComputeSizeEntityV1": {
        "required": [
          "channel",
          "ids"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "enum": [
              "Onsite",
              "Offsite"
            ],
            "type": "string",
            "description": "Channel to compute the sizes for."
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of ids of the segments whose size is requested."
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "RmAudienceComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceComputeSizeEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceComputeSizeEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceCreateEntityV1": {
        "required": [
          "algebra",
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "description": {
            "type": "string",
            "description": "Description of the audience"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the audience"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "RmAudienceCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceCreateEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceDeleteEntityV1": {
        "type": "object",
        "description": "Audience to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        }
      },
      "RmAudienceDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the audience",
            "nullable": true
          },
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the audience (read-only)",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
            "format": "date-time",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the audience",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the audience",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the audience",
            "nullable": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the audience",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        }
      },
      "RmAudienceEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmAudienceEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "RmAudienceEstimateSizeEntityV1": {
        "required": [
          "algebra",
          "channel",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "channel": {
            "enum": [
              "Onsite",
              "Offsite"
            ],
            "type": "string",
            "description": "Channel to estimate the size"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer id of the audience"
          }
        },
        "description": "Audience of people of interest for a marketer."
      },
      "RmAudienceEstimateSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceEstimateSizeEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceEstimateSizeEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audience ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids (linked to the result audiences)"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          }
        },
        "description": "Available filters to perform a search on audiences. If present, the filters are AND'ed together when applied."
      },
      "RmAudienceSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for the audience search response.",
        "nullable": true
      },
      "RmAudienceSegmentBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several values."
      },
      "RmAudienceSegmentBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities."
      },
      "RmAudienceSegmentBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities."
      },
      "RmAudienceSegmentComputeSizeEntityV1": {
        "required": [
          "channel",
          "ids"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "enum": [
              "Onsite",
              "Offsite"
            ],
            "type": "string",
            "description": "Channel to compute the sizes for."
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of ids of the segments whose size is requested."
          }
        },
        "description": "Segment Ids and channel whose size was requested."
      },
      "RmAudienceSegmentComputeSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentComputeSizeEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSegmentComputeSizesInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentComputeSizeEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceSegmentCreateEntityV1": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "contactList": {
            "$ref": "#/components/schemas/RmContactListCreateV1"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsCreateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "RmAudienceSegmentCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSegmentDeleteEntityV1": {
        "type": "object",
        "description": "Segment to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        }
      },
      "RmAudienceSegmentDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSegmentEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the segment",
            "nullable": true
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the segment (read-only)",
            "nullable": true
          },
          "contactList": {
            "$ref": "#/components/schemas/RmContactListV1"
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
            "format": "date-time",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the segment",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the segment",
            "nullable": true
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment",
            "nullable": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "ContactList",
              "Events"
            ],
            "type": "string",
            "description": "Type of segment (read-only)",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
            "format": "date-time",
            "nullable": true
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        }
      },
      "RmAudienceSegmentEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmAudienceSegmentEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchMetadataV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata"
      },
      "RmAudienceSegmentEstimateSizeEntityV1": {
        "required": [
          "channel",
          "events",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "channel": {
            "enum": [
              "Onsite",
              "Offsite"
            ],
            "type": "string",
            "description": "Channel to estimate the size"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsEstimationV1"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer id of the segment"
          }
        },
        "description": "Set of rules that defines specific people to target."
      },
      "RmAudienceSegmentEstimateSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentEstimateSizeEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSegmentEstimateSizeInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentEstimateSizeEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceSegmentIdEntityV1": {
        "type": "object",
        "description": "Audience Segment entity only with its ID",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        }
      },
      "RmAudienceSegmentIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmAudienceSegmentIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSegmentSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids"
          },
          "audienceSegmentTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "ContactList",
                "Events"
              ],
              "type": "string"
            },
            "description": "List of segment types"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          }
        },
        "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied."
      },
      "RmAudienceSegmentSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSegmentSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value."
      },
      "RmAudienceSegmentSearchMetadataV1": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Metadata for the audience segment search response.",
        "nullable": true
      },
      "RmAudienceSegmentSizeEntityV1": {
        "type": "object",
        "properties": {
          "relativeSize": {
            "type": "number",
            "description": "Reach in number of users relative to the total users of a retailer (e.g. 0.5523 / 55.23% users)",
            "format": "double",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Reach in absolute number of users (e.g. 150,300 users). It's not present when the user lacks permissions\r\nto view it.",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "id and size of the segment",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        }
      },
      "RmAudienceSegmentSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentSizeEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmAudienceSegmentSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSegmentSizeEstimationV1": {
        "type": "object",
        "properties": {
          "relativeSize": {
            "type": "number",
            "description": "Reach in number of users relative to the total users of a retailer (e.g. 0.5523 / 55.23% users)",
            "format": "double",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Reach in absolute number of users (e.g. 150,300 users). It's not present when the user lacks permissions\r\nto view it.",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Segment size estimation",
        "nullable": true
      },
      "RmAudienceSegmentSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentSizeEstimationV1"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "RmAudienceSegmentSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentSizeEstimationV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceSegmentUpdateEntityV1": {
        "type": "object",
        "properties": {
          "contactList": {
            "$ref": "#/components/schemas/RmContactListUpdateV1"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsUpdateV1"
          },
          "name": {
            "type": "string",
            "description": "Name of the segment"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        }
      },
      "RmAudienceSegmentUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSizeEntityV1": {
        "type": "object",
        "properties": {
          "relativeSize": {
            "type": "number",
            "description": "Reach in number of users relative to the total users of a retailer (e.g. 0.5523 / 55.23% users)",
            "format": "double",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Reach in absolute number of users (e.g. 150,300 users). It's not present when the user lacks permissions\r\nto view it.",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "id and size of the audience",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        }
      },
      "RmAudienceSizeEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSizeEntityV1Resource"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities"
      },
      "RmAudienceSizeEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSizeEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmAudienceSizeEstimationV1": {
        "type": "object",
        "properties": {
          "relativeSize": {
            "type": "number",
            "description": "Reach in number of users relative to the total users of a retailer (e.g. 0.5523 / 55.23% users)",
            "format": "double",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Reach in absolute number of users (e.g. 150,300 users). It's not present when the user lacks permissions\r\nto view it.",
            "format": "int64",
            "nullable": true
          }
        },
        "description": "Audience size estimation",
        "nullable": true
      },
      "RmAudienceSizeEstimationV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSizeEstimationV1"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true
      },
      "RmAudienceSizeEstimationV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSizeEstimationV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "RmAudienceUpdateEntityV1": {
        "type": "object",
        "properties": {
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "name": {
            "type": "string",
            "description": "Name of the audience"
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        }
      },
      "RmAudienceUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API"
      },
      "RmcaCommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "The problem's HTTP Status code.",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": "Common problem object."
      },
      "RmContactListCreateV1": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list type"
          }
        },
        "description": "Settings to target users with your contact lists."
      },
      "RmContactListStatisticsEntityV1": {
        "type": "object",
        "properties": {
          "matchRate": {
            "type": "number",
            "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
            "format": "double",
            "nullable": true
          },
          "numberOfIdentifiers": {
            "type": "integer",
            "description": "Number of identifiers in the contact list.",
            "format": "int32",
            "nullable": true
          },
          "numberOfMatches": {
            "type": "integer",
            "description": "Number of matched identifiers in the contact list.",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "Contact list statistics.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "ContactListStatistics",
          "version": "v1"
        }
      },
      "RmContactListStatisticsEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "RmContactListStatisticsEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Resource"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity"
      },
      "RmContactListUpdateV1": {
        "type": "object",
        "description": "Settings to update the contact list of the segment"
      },
      "RmContactListV1": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "Unknown",
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list identifier's type",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Is the segment read-only",
            "nullable": true
          },
          "sharingStatus": {
            "enum": [
              "Unknown",
              "NotShared",
              "SharedWithAll",
              "SharedWithDemandAccounts"
            ],
            "type": "string",
            "description": "Indicates if the contact list is shared with other accounts",
            "nullable": true
          }
        },
        "description": "Settings to target users with your contact lists.",
        "nullable": true
      },
      "RmEventsCreateV1": {
        "required": [
          "lookbackDays",
          "shopperActivity"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the categories your segment might be interested in"
          },
          "lookbackDays": {
            "enum": [
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "Number of days of the lookback windows"
          },
          "maxPrice": {
            "type": "number",
            "description": "Reach people who’ve shown interest in products with a maximum price",
            "format": "double"
          },
          "minPrice": {
            "type": "number",
            "description": "Reach people who’ve shown interest in products with a minimum price",
            "format": "double"
          },
          "shopperActivity": {
            "enum": [
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Types of shopper activity."
          }
        },
        "description": "Settings to target users based on their behavior"
      },
      "RmEventsEstimationV1": {
        "required": [
          "lookbackDays",
          "shopperActivity"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categoryIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lookbackDays": {
            "enum": [
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string"
          },
          "maxPrice": {
            "type": "number",
            "format": "double"
          },
          "minPrice": {
            "type": "number",
            "format": "double"
          },
          "shopperActivity": {
            "enum": [
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string"
          }
        },
        "description": "Settings to target users based on the shopping events"
      },
      "RmEventsUpdateV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the brands your segment might be interested in"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Choose the categories your segment might be interested in"
          },
          "lookbackDays": {
            "enum": [
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "Number of days of the lookback windows"
          },
          "maxPrice": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "minPrice": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "shopperActivity": {
            "enum": [
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Types of shopper activity."
          }
        },
        "description": "Settings to target users based on their behavior"
      },
      "RmEventsV1": {
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of brand ids",
            "nullable": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of category ids",
            "nullable": true
          },
          "lookbackDays": {
            "enum": [
              "Unknown",
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "The number of days to look back",
            "nullable": true
          },
          "maxPrice": {
            "type": "number",
            "description": "Maximum price of the products",
            "format": "double",
            "nullable": true
          },
          "minPrice": {
            "type": "number",
            "description": "Minimum price of the products",
            "format": "double",
            "nullable": true
          },
          "shopperActivity": {
            "enum": [
              "Unknown",
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Reach people who performed specific action",
            "nullable": true
          }
        },
        "description": "Settings to target users based on their behavior",
        "nullable": true
      },
      "SdkApiRestCommonProblem": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Common problem object."
      },
      "SellerCatalogRequestV2": {
        "type": "object",
        "properties": {
          "includeFields": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Description",
                "ImageUrl",
                "GlobalCategoryId",
                "RetailerName",
                "Category",
                "BrandName"
              ],
              "type": "string"
            },
            "description": "Out of the optional fields, only the ones specified will be included in the catalog generated."
          },
          "modifiedAfter": {
            "type": "string",
            "description": "Only products modified after this time will be returned.",
            "format": "date-time"
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerIdentifierV2"
            },
            "description": "A list of sellers to restrict the catalog to."
          }
        },
        "description": "Used to request a catalog of seller SKUs",
        "nullable": true
      },
      "SellerIdentifierV2": {
        "required": [
          "retailerId",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "string",
            "description": "The retailer Id that the seller operates under"
          },
          "sellerId": {
            "type": "string",
            "description": "The id for the seller based on the corresponding retailer"
          }
        },
        "description": "Identifies a Unique Seller"
      },
      "SellerPreview": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Seller Name"
          }
        },
        "description": "Retail media Seller Id and Name"
      },
      "SellerPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSellerPreview"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for response resource"
      },
      "SetBidModel": {
        "type": "object",
        "properties": {
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override"
      },
      "SetBidsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetBidModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords and their associated bid overrides"
      },
      "SetBidsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetBidsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to set bid overrides for keywords associated with a line item"
      },
      "SetBidsModelResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SetBidsModel"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords and their associated bid overrides"
      },
      "SetSkuBuyBoxWinnersRequest": {
        "required": [
          "skuBuyBoxWinners"
        ],
        "type": "object",
        "properties": {
          "skuBuyBoxWinners": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkuBuyBoxWinner"
            }
          }
        },
        "additionalProperties": false,
        "description": "The request passed by the caller of the SetBuyBoxWinners endpoint"
      },
      "SkuBuyBoxWinner": {
        "required": [
          "sellerId",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "sellerId": {
            "type": "string"
          },
          "skuId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "The new buy box winner for a SKU after it is updated as part of a SetBuyBoxWinner operation"
      },
      "SkuDataPreview": {
        "required": [
          "skuKey",
          "categoryId",
          "brandId",
          "brandName",
          "retailerId",
          "retailerName",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "brandId": {
            "type": "string",
            "description": "The global brand id associated to the product."
          },
          "brandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the global brand."
          },
          "category": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The category Id."
          },
          "description": {
            "type": "string",
            "description": "A product description.",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer."
          },
          "isBuybox": {
            "type": "boolean",
            "description": "Whether the Sku is a Buybox Winner."
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock."
          },
          "isSellerSku": {
            "type": "boolean",
            "description": "An indication of if the sku is seller sku."
          },
          "modelNumber": {
            "type": "string",
            "description": "The Model Number for the product if available.",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "nullable": true
          },
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name."
          },
          "parentId": {
            "type": "string",
            "description": "The ParentId for the product if available.",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site.",
            "format": "double"
          },
          "productPage": {
            "type": "string",
            "description": "The product page URL",
            "nullable": true
          },
          "retailerId": {
            "type": "string",
            "description": "The identifier for the retailer the product is listed by."
          },
          "retailerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "The retailer name."
          },
          "sellerId": {
            "type": "string",
            "description": "The id of the seller.",
            "nullable": true
          },
          "sellerName": {
            "type": "string",
            "description": "The name of the seller.",
            "nullable": true
          },
          "skuKey": {
            "type": "string",
            "description": "The product SKU Key."
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time"
          }
        },
        "description": "Metadata and usage info of a sku search"
      },
      "SkuDataPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuDataPreview"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "SkuOfferLoad": {
        "required": [
          "offers",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "buyBoxWinner": {
            "type": "string"
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferLoad"
            }
          },
          "skuId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "The new state of the offers for a SKU after a load operation"
      },
      "SkuSearchRequestPreview": {
        "required": [
          "queryString",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of product Id's, if not passed ignore and search by QueryString"
          },
          "productIdType": {
            "enum": [
              "skuKey",
              "gtin",
              "mpn",
              "model",
              "skuId",
              "parentId"
            ],
            "type": "string",
            "description": "Type of product Ids to search for(SkuKey, SkuId, Gtin, Mpn, Model, ParentId)",
            "default": "skuKey"
          },
          "queryString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id",
            "format": "long-id"
          },
          "sellers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of seller names and/or seller Id's"
          },
          "skuType": {
            "enum": [
              "brand",
              "seller",
              "all"
            ],
            "type": "string",
            "description": "Enum to set isSellerSku field",
            "default": "brand"
          }
        },
        "description": "A request for sku by sellers or brands."
      },
      "SkuSearchRequestPreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestPreview"
          }
        },
        "description": "Data model for an input resource"
      },
      "SponsoredProductsLineItem": {
        "required": [
          "budgetRemaining",
          "campaignId",
          "createdAt",
          "name",
          "startDate",
          "targetRetailerId",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "description": "Optional field.",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "The total budget allocated for this line item.",
            "format": "double",
            "nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "description": "The amount of the budget that remains available.",
            "format": "double",
            "nullable": true
          },
          "budgetSpent": {
            "type": "number",
            "description": "The amount of the budget that has been spent so far.",
            "format": "double",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "description": "The ID of the campaign this line item belongs to.",
            "format": "long-id"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the line item was created.",
            "format": "date-time"
          },
          "dailyPacing": {
            "type": "number",
            "description": "The daily pacing limit for budget spending.",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date and time when the line item stops running.",
            "format": "date-time",
            "nullable": true
          },
          "flightSchedule": {
            "$ref": "#/components/schemas/FlightSchedule"
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "description": "Indicates whether automatic daily pacing is enabled.",
            "nullable": true
          },
          "keywordStrategy": {
            "enum": [
              "unknown",
              "conquesting",
              "genericAndBranded",
              "genericBrandedAndConquesting"
            ],
            "type": "string",
            "description": "The keyword targeting strategy for this line item.",
            "nullable": true
          },
          "maxBid": {
            "type": "number",
            "description": "The maximum bid amount allowed for this line item.",
            "format": "double",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "description": "The monthly pacing limit for budget spending.",
            "format": "double",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the line item."
          },
          "startDate": {
            "type": "string",
            "description": "The date and time when the line item starts running.",
            "format": "date-time"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "The current status of the line item.",
            "nullable": true
          },
          "targetBid": {
            "type": "number",
            "description": "The target bid amount for the line item.",
            "format": "double",
            "nullable": true
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the line item was last updated.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Model of a retail media auction line item.",
        "nullable": true
      },
      "SponsoredProductsLineItemCreateRequestModel": {
        "required": [
          "name",
          "startDate",
          "targetRetailerId"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "description": "The bidding strategy to use for this line item.\r\nDefault value is Conversion.",
            "default": "conversion"
          },
          "budget": {
            "type": "number",
            "description": "The total budget allocated for this line item.",
            "format": "double",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "description": "The daily pacing limit for budget spending.",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The date and time when the line item should stop running.",
            "format": "date-time",
            "nullable": true
          },
          "flightSchedule": {
            "$ref": "#/components/schemas/FlightSchedule"
          },
          "isAutoDailyPacing": {
            "type": "boolean",
            "description": "Indicates whether automatic daily pacing is enabled.\r\nDefault value is false.",
            "default": false
          },
          "keywordStrategy": {
            "enum": [
              "conquesting",
              "genericAndBranded",
              "genericBrandedAndConquesting"
            ],
            "type": "string",
            "description": "The keyword targeting strategy for this line item.",
            "nullable": true
          },
          "maxBid": {
            "type": "number",
            "description": "The maximum bid amount allowed for this line item.",
            "format": "double",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "description": "The monthly pacing limit for budget spending.",
            "format": "double",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "The name of the line item."
          },
          "startDate": {
            "type": "string",
            "description": "The date and time when the line item should start running.",
            "format": "date-time"
          },
          "targetBid": {
            "type": "number",
            "description": "The target bid amount for the line item.",
            "format": "double",
            "nullable": true
          },
          "targetRetailerId": {
            "type": "string",
            "description": "The ID of the retailer to target for this line item.",
            "format": "long-id"
          }
        },
        "additionalProperties": false,
        "description": "Model to create a retail media auction line item"
      },
      "SponsoredProductsLineItemUpdateRequestModel": {
        "required": [
          "isAutoDailyPacing",
          "name",
          "startDate",
          "status",
          "targetBid"
        ],
        "type": "object",
        "properties": {
          "bidStrategy": {
            "enum": [
              "unknown",
              "conversion",
              "clicks",
              "revenue"
            ],
            "type": "string",
            "default": "conversion"
          },
          "budget": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dailyPacing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flightSchedule": {
            "$ref": "#/components/schemas/FlightSchedule"
          },
          "isAutoDailyPacing": {
            "type": "boolean"
          },
          "maxBid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "monthlyPacing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "enum": [
              "active",
              "paused",
              "draft"
            ],
            "type": "string",
            "description": "Status of a line item."
          },
          "targetBid": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "A request to update a Sponsored Products Line Item."
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "nullable": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "md5CheckSum": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "enum": [
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "nullable": true
          }
        },
        "description": "Status of an async report request",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        }
      },
      "StatusResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/StatusResponse"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true
      },
      "SyncAttributedTransactionsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "purchasedDate",
                "purchasedHour",
                "advDate",
                "advHour",
                "daysDifference",
                "campaignId",
                "campaignName",
                "lineItemId",
                "lineItemName",
                "advProductId",
                "advProductGtin",
                "advProductMpn",
                "advProductName",
                "advProductCategory",
                "purchasedProductId",
                "purchasedProductGtin",
                "purchasedProductMpn",
                "purchasedProductName",
                "purchasedProductCategory",
                "advEngagement",
                "advToPurchasedProductRelationship",
                "salesChannel",
                "retailerName",
                "pageTypeName",
                "keyword",
                "attributionWindow",
                "saleSellerId",
                "saleSellerName",
                "activitySellerId",
                "activitySellerName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to filter"
          },
          "mediaType": {
            "enum": [
              "unknown",
              "video",
              "display",
              "all"
            ],
            "type": "string",
            "description": "Filter on the type of media: unknown, display, video",
            "default": "all"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "attributedUnits",
                "attributedSales"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Attributed Transactions report body request"
      },
      "SyncAttributedTransactionsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncAttributedTransactionsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "SyncCampaignsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Campaigns report body request"
      },
      "SyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SyncCampaignsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "SyncLineItemsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to filter"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions and metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "salesChannel": {
            "enum": [
              "online",
              "offline",
              "all"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          }
        },
        "description": "Line Items report body request"
      },
      "SyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value"
      },
      "SyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SyncLineItemsReport"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value"
      },
      "TemplateVariableValue": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "choiceVariableValue": {
            "$ref": "#/components/schemas/ChoiceVariableValue"
          },
          "colorVariableValue": {
            "$ref": "#/components/schemas/ColorVariableValue"
          },
          "filesVariableValue": {
            "$ref": "#/components/schemas/FilesVariableValue"
          },
          "hyperlinkVariableValue": {
            "$ref": "#/components/schemas/HyperlinkVariableValue"
          },
          "id": {
            "type": "string",
            "description": "The id of the template variable the value is applied to"
          },
          "textVariableValue": {
            "$ref": "#/components/schemas/TextVariableValue"
          },
          "videoVariableValue": {
            "$ref": "#/components/schemas/VideoVariableValue"
          }
        },
        "additionalProperties": false,
        "description": "A value for a variable in a creative template."
      },
      "TextVariableValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The displayed text",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template text variable",
        "nullable": true
      },
      "UpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true
          }
        },
        "description": "An object that represents the available options to set when updating a Retail Media Balance."
      },
      "UpdateBalanceModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfUpdateBalanceModelV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity"
      },
      "UpdateOffersRequest": {
        "required": [
          "offerUpdates"
        ],
        "type": "object",
        "properties": {
          "offerUpdates": {
            "maxItems": 5000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfferUpdate"
            }
          }
        },
        "additionalProperties": false,
        "description": "The request passed by the caller of the Update endpoint"
      },
      "ValueResourceAccountFeesSearchRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AccountFeesSearchRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceAccountFeesUpdateRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AccountFeesUpdateRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceAccountFeesUpdateResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AccountFeesUpdateResult"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceAsyncJobResponse": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AsyncJobResponse"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceBrandIdSearchRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandIdSearchRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "description": "A value resource exposed by the API."
      },
      "ValueResourceCategoriesSearchRequestV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CategoriesSearchRequestV1"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "description": "A value resource exposed by the API."
      },
      "ValueResourceCollectionOutcomePrivateMarketAccountFeesAndMetadata": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourcePrivateMarketAccountFees"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects and metadata."
      },
      "ValueResourceInputAccountFeesSearchRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceAccountFeesSearchRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputAccountFeesUpdateRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceAccountFeesUpdateRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputBrandIdSearchRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceBrandIdSearchRequest"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputCategoriesSearchRequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceCategoriesSearchRequestV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputLoadSkuOffersRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceLoadSkuOffersRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputOfBrandCatalogRequestV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfBrandCatalogRequestV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "nullable": true
      },
      "ValueResourceInputOfSellerCatalogRequestV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfSellerCatalogRequestV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "nullable": true
      },
      "ValueResourceInputOfSponsoredProductsLineItemCreateRequestModel": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfSponsoredProductsLineItemCreateRequestModel"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputOfSponsoredProductsLineItemUpdateRequestModel": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfSponsoredProductsLineItemUpdateRequestModel"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputPartnerBillingReportRequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourcePartnerBillingReportRequestV1"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputRecommendedCategoriesRequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceRecommendedCategoriesRequestV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputRecommendedKeywordsRequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceRecommendedKeywordsRequestV1"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputRetailMediaKeywordsReview": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceRetailMediaKeywordsReview"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputSetSkuBuyBoxWinnersRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceSetSkuBuyBoxWinnersRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceInputUpdateOffersRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceUpdateOffersRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects."
      },
      "ValueResourceLoadSkuOffersRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/LoadSkuOffersRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceOfBrandCatalogRequestV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandCatalogRequestV2"
          },
          "type": {
            "type": "string",
            "description": "The Type of the resource."
          }
        },
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceOfSellerCatalogRequestV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SellerCatalogRequestV2"
          },
          "type": {
            "type": "string",
            "description": "The Type of the resource."
          }
        },
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceOfSponsoredProductsLineItemCreateRequestModel": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SponsoredProductsLineItemCreateRequestModel"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceOfSponsoredProductsLineItemUpdateRequestModel": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SponsoredProductsLineItemUpdateRequestModel"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceOutcomeAccountFeesUpdateResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceAccountFeesUpdateResult"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object."
      },
      "ValueResourceOutcomeAsyncJobResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceAsyncJobResponse"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object."
      },
      "ValueResourceOutcomeRecommendedKeywordsResponseV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceRecommendedKeywordsResponseV1"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object."
      },
      "ValueResourceOutcomeRetailMediaKeywordsReviewResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceRetailMediaKeywordsReviewResult"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object."
      },
      "ValueResourcePartnerBillingReportRequestV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PartnerBillingReportRequestV1"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourcePrivateMarketAccountFees": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PrivateMarketAccountFees"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceRecommendedCategoriesRequestV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RecommendedCategoriesRequestV1"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "description": "A value resource exposed by the API."
      },
      "ValueResourceRecommendedKeywordsRequestV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RecommendedKeywordsRequestV1"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceRecommendedKeywordsResponseV1": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RecommendedKeywordsResponseV1"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceRetailMediaKeywordsReview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaKeywordsReview"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceRetailMediaKeywordsReviewResult": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RetailMediaKeywordsReviewResult"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true
      },
      "ValueResourceSetSkuBuyBoxWinnersRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SetSkuBuyBoxWinnersRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "ValueResourceUpdateOffersRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateOffersRequest"
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API."
      },
      "VideoVariableValue": {
        "required": [
          "url",
          "width",
          "height",
          "duration"
        ],
        "type": "object",
        "properties": {
          "duration": {
            "minLength": 1,
            "type": "string",
            "description": "The video's duration"
          },
          "height": {
            "type": "integer",
            "description": "The video's height",
            "format": "int32"
          },
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "The vast video url"
          },
          "width": {
            "type": "integer",
            "description": "The video's width",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template video variable",
        "nullable": true
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "tags": [
    {
      "name": "Accounts"
    },
    {
      "name": "Analytics"
    },
    {
      "name": "Audience"
    },
    {
      "name": "Balance"
    },
    {
      "name": "Billing"
    },
    {
      "name": "Campaign"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "Gateway"
    },
    {
      "name": "OnSiteRecommendation"
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}