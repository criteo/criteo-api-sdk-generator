{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - RetailMedia",
    "version": "Preview"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/preview/retail-media/accounts/{accountId}/grant-consent": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "",
        "description": "Grant consent to a business application on behalf of a Private Market demand account",
        "operationId": "GrantConsent",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The demand account ID on which to grant consent",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantConsentInput"
              }
            }
          },
          "x-bodyName": "grantConsentInput"
        },
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/preview/retail-media/audience-segments/{audience-segment-id}/contact-list/add-remove": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove identifiers to or from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "updateContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailMediaContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailMediaContactlistOperation"
                },
                "example": {
                  "type": "AddRemoveContactlistResult",
                  "data": {
                    "contactListId": 568708742535471104,
                    "operation": "add",
                    "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                    "identifierType": "madid",
                    "nbValidIdentifiers": 7343,
                    "nbInvalidIdentifiers": 13,
                    "sampleInvalidIdentifiers": [
                      "InvalidIdentifier"
                    ]
                  },
                  "errors": [
                    {
                      "traceId": "667ac683ac797284.667ac683ac797284<:667ac683ac797284",
                      "type": "availability",
                      "code": "internal-error",
                      "instance": "",
                      "title": "Internal error"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers'"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [ ]
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/audience-segments/{audience-segment-id}/contact-list/clear": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete all identifiers from a retail-media contact list audience-segment, with external audience segment id.",
        "operationId": "DeleteContactListIdentifiers",
        "parameters": [
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "The id of the contact list audience-segment to amend, we only accept external Id here",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The Contact List identifiers were deleted",
            "content": {
              "application/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "667ac683ac797284.667ac683ac797284<:667ac683ac797284",
                      "type": "availability",
                      "code": "internal-error",
                      "instance": "",
                      "title": "Internal error"
                    }
                  ],
                  "warnings": [ ]
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/chatbot-catalogs/{catalogid}/product-recommendations": {
      "post": {
        "tags": [
          "OnSiteRecommendation"
        ],
        "description": "Ask a chatbot for a product recommendation",
        "operationId": "chatbotProductRecommendations",
        "parameters": [
          {
            "name": "catalogid",
            "in": "path",
            "description": "the identifier of the catalog to query",
            "required": true,
            "style": "simple",
            "schema": {
              "title": "catalogid",
              "type": "integer",
              "description": "the identifier of the catalog to query"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InbotDiscussionBodyModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageBodyModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/preview/retail-media/catalog/products/batch": {
      "post": {
        "tags": [
          "Catalog"
        ],
        "description": "Used to publish a batch of operations to insert, update and deletes products.\n The batch is processed asynchronously.The response provides an operationToken which can be used to track\n the status of the report of the operation.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductsCustomBatchRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "202": {
            "description": "Batch accepted. The status of the operation can be tracked using the report endpoint and the operationToken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAcceptedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"required-field\"),(type=\"validation\", code=\"json-format\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "413": {
            "description": "Request too large. By default, payload up to 16 MB is rejected.",
            "content": {
              "application/json": { }
            }
          },
          "429": {
            "description": "Too Many Requests. Allowed error types and errors: [(type=\"availability\", code=\"too-many-requests\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalog/products/batch/report/{operation-token}": {
      "get": {
        "tags": [
          "Catalog"
        ],
        "description": "Get the report of an asynchronous batch operation previously requested",
        "parameters": [
          {
            "name": "operation-token",
            "in": "path",
            "description": "The token returned by the batch endpoint.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-token-is-malformed\"),(type=\"validation\", code=\"catalog-operation-report-is-expired\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Allowed error types and errors: [(type=\"authentication\", code=\"not-authenticated\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Allowed error types and errors: [(type=\"authorization\", code=\"not-authorized\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found. Allowed error types and errors: [(type=\"validation\", code=\"catalog-operation-not-found\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": { }
            }
          },
          "500": {
            "description": "Internal Server Error. Allowed error types and errors: [(type=\"availability\", code=\"internal-error\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable. Allowed error types and errors: [(type=\"availability\", code=\"service-unavailable\")]",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/account-management/accounts/{accountId}/private-market-child-accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "description": "Gets page of private market child accounts that are associated with the given account",
        "operationId": "ExternalApiAccounts_GetApiExternalV1AccountPrivateMarketChildAccountsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection of accounts. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of accounts to be returned. The default is 25.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments": {
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Updates the properties of all segments with a valid configuration, and returns the full segments. For those that cannot be updated, one or multiple errors are returned.",
        "operationId": "bulkUpdateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment Update request",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkUpdateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/create": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Creates all segments with a valid configuration, and returns the full segments. For those that cannot be created, one or multiple errors are returned.",
        "operationId": "bulkCreateAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment creation parameter",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkCreateInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/delete": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Delete the segments associated to the given audience IDs.",
        "operationId": "bulkDeleteAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Segment delete request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentBulkDeleteInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of segments that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudienceSegments",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Segment search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSegmentSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audience-segments/{audience-segment-id}/contact-list": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Returns the statistics of a contact list segment.",
        "operationId": "getAudienceSegmentContactListStatistics",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "audience-segment-id",
            "in": "path",
            "description": "Segment Id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/audiences/search": {
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Returns a list of audiences that match the provided filters. If present, the filters are AND'ed together when applied.",
        "operationId": "searchAudiences",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "Account Id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned. The default is 50 and the maximum is 100.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset into the collection. The default is 0.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "requestBody": {
          "description": "Audience search filters.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RmAudienceSearchInputV1"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success or partial success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailerId}/cpc-min-bids": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get overall and individual minimum bid amount for given retailer id and sku id list.",
        "operationId": "GetCpcMinBidsBySkuIdsV1",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "Retailer Id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Cpc minimum bid amount request object.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputCpcMinBidsRequest"
              }
            }
          },
          "x-bodyName": "cpcMinBidsRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeCpcMinBidsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch keywords associated with the specified line item",
        "operationId": "FetchKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordsModelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/add-remove": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Add or Remove keywords from the line item in bulk",
        "operationId": "AddRemoveKeywords",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveKeywordsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{id}/keywords/set-bid": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Set bid overrides for associated keywords to the given line item in bulk",
        "operationId": "SetKeywordBids",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetBidsModelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieve a page of promoted products for a line item",
        "operationId": "FetchPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first item to fetch. Defaults to zero.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum page size to fetch. Defaults to 500.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A comma separated list of attribute names from the response model to compute and return.\r\n            Valid values are `status` and `bidOverride` in any order. Defaults to `status`.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promoted products associated with the line item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotedProductResourceCollectionOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/append": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append a collection of promoted products to a line item",
        "operationId": "AppendPromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products appended to the line item"
          },
          "200": {
            "description": "Promoted products appended to the line item with warnings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/delete": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Remove a collection of promoted products from a line item",
        "operationId": "DeletePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products removed from the line item"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/pause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Pause a collection of promoted products associated with a line item",
        "operationId": "PausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/products/unpause": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Un-pause a collection of promoted products associated with a line item",
        "operationId": "UnpausePromotedProducts",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "ID of the line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request body whose {data} contains an array of promoted products.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotedProductResourceCollectionInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Promoted products un-paused"
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Invalid external line item ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResourceOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/brand-catalog-export": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "Catalog_PostApiExternalV2AccountBrandCatalogExportByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfBrandCatalogRequestV2"
              }
            }
          },
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{accountId}/seller-catalog-export": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a request for a Catalog available to the indicated account.",
        "operationId": "Catalog_PostApiExternalV2AccountSellerCatalogExportByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "The account to request the catalog for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonApiRequestOfSellerCatalogRequestV2"
              }
            }
          },
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Catalog request successfully created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-retrieval": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuRetrievalApi_PostApiV1ExternalCatalogsSkuRetrieval",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The list of SKU keys to retrieve sku information",
          "content": {
            "application/json": {
              "schema": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "type": "string",
                  "x-nullable": false
                },
                "x-nullable": false
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuKeys"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, retailer and sellers/brands.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearch",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1000.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestPreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku-search/accounts/{account-id}/retailers/{retailer-id}": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text, account and retailer with an option to filter by brands id's.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearchAccountIdAndRetailerId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The client id/retailer id for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero.",
            "style": "form",
            "schema": {
              "maximum": 1500.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestSlimPreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuSlimDataPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/sku/search/retailers/{retailer-id}": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to search skus by text for a retailer with an option to filter by brands id's.",
        "operationId": "SkuSearchApi_PostApiV1ExternalCatalogsSkuSearchRetailerByRetailerId",
        "parameters": [
          {
            "name": "X-Origin-Account",
            "in": "header",
            "description": "The account id of the initiator of the call.",
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The client id/retailer id for which skus should be searched for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The start position in the overall list of matches. Must be zero or greater.",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return with each call. Must be greater than zero and less than 1500. 10,000 records deep is the max limit.",
            "style": "form",
            "schema": {
              "maximum": 1500.0,
              "minimum": 1.0,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SkuSearchRequestSlimV2PreviewRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "skuRequest"
        },
        "responses": {
          "200": {
            "description": "Skus found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuSlimDataV2ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/catalogs/{catalogId}/status": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Check the status of a catalog request.",
        "operationId": "Catalog_GetApiExternalV2CatalogStatusByCatalogId",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "description": "A catalog ID returned from an account catalog request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog request found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatalogStatusV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/cpc-rates": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the minimum cpc bid for the retailer, and optionally the categories under the retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerCategoryCpcRatesByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "The fields in the response that is to be included",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "bids found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CpcRateCardPreviewResponse"
                }
              }
            }
          },
          "403": {
            "description": "forbidden",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailer-id}/placements": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets all placement information for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerPlacementsByRetailerId",
        "parameters": [
          {
            "name": "retailer-id",
            "in": "path",
            "description": "The retailer id for which placements should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "placements records.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlacementPreviewListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailerId}/brands": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the brands for the given retailer",
        "operationId": "RetailerApi_GetApiV1ExternalRetailerBrandsByRetailerId",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which brands should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "sku-stock-type-filter",
            "in": "query",
            "description": "Filter to narrow down brands [first-party|third-party|first-and-third-party]. Defaults to first-and-third-party",
            "style": "form",
            "schema": {
              "enum": [
                "first-party",
                "third-party",
                "first-and-third-party"
              ],
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "brand-type",
            "in": "query",
            "description": " Filter to narrow down brands [all|uc|retailer]. Defaults to uc",
            "style": "form",
            "schema": {
              "enum": [
                "all",
                "uc",
                "retailer"
              ],
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Brands found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandPreviewListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/retailers/{retailerId}/sellers/{seller}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Endpoint to get market place seller id and name",
        "operationId": "SellerApi_GetApiV1ExternalRetailerByRetailerIdSellerBySeller",
        "parameters": [
          {
            "name": "retailerId",
            "in": "path",
            "description": "The retailer id for which seller should be fetched.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "seller",
            "in": "path",
            "description": "The seller id or seller name which should be validated.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Seller found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerPreviewResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Create a creative for an account",
        "operationId": "PostApiV2ExternalAccountCreativesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to create a creative for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeCreateModel2"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "201": {
            "description": "Creatives created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Get account creatives",
        "operationId": "PostApiV2ExternalAccountCreativesSearchByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-ids",
            "in": "query",
            "description": "Creatives to filter by",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2ListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/creatives/{creative-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the specified creative",
        "operationId": "GetApiV2ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id to retrieve creatives for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to get",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Creatives found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a creative",
        "operationId": "PutApiV2ExternalAccountByAccountId}Creatives{creativeId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "External account id containing the creative",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creative-id",
            "in": "path",
            "description": "Creative to update",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The creative to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreativeUpdateModel2"
              }
            }
          },
          "x-bodyName": "creative"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creative2Response"
                }
              }
            }
          },
          "204": {
            "description": "Creative updated"
          }
        }
      }
    },
    "/preview/retail-media/reports/accounts": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Accounts Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncAccountsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncAccountsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncAccountsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncAccountsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncAccountsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Return an asynchronous Campaigns Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/fillrate": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Fill Rate Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncFillRateReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncFillRateReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncFillRateReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncFillRateReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncFillRateReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns an asynchronous Line Items Report\nThis endpoint is subject to specific rate limits.",
        "operationId": "GenerateAsyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/attributed-transactions": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Attributed Transactions Report",
        "operationId": "GenerateSyncAttributedTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncAttributedTransactionsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/campaigns": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Campaigns Report",
        "operationId": "GenerateSyncCampaignsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncCampaignsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/sync/line-items": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns a synchronous Line Items Report",
        "operationId": "GenerateSyncLineItemsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SyncLineItemsReportRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/{reportId}/output": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the output of an async report",
        "operationId": "GetAsyncExportOutput",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/reports/{reportId}/status": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "Returns the status of an async report",
        "operationId": "GetAsyncExportStatus",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "description": "The ID of the report to retrieve",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportOutcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/sellers/search": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "description": "Get the sellers mapped to provided accounts",
        "operationId": "SearchSellers",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputOfSellerSearch"
              }
            }
          },
          "x-bodyName": "searchDetails"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceCollectionOutcomeOfSellerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/balances/{balanceId}/history": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets the balance's historical change data.",
        "operationId": "GetBalanceHistory",
        "parameters": [
          {
            "name": "balanceId",
            "in": "path",
            "description": "Balance id.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) starting offset in the collection.",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of elements to be returned.",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "limitToChangeTypes",
            "in": "query",
            "description": "Comma separated change types string that will be queried.",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOfBalanceHistoryChangeDataCaptureV1"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{externalLineItemId}/keywords/recommended": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Retrieves a collection of recommended keywords for a line item",
        "operationId": "GetRecommendedKeywords",
        "parameters": [
          {
            "name": "externalLineItemId",
            "in": "path",
            "description": "The external line item identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValueResourceOutcomeOfRecommendedKeywordsResult"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/billing/partner-report": {
      "post": {
        "tags": [
          "Billing"
        ],
        "description": "Create a Partner Billing Report request.",
        "requestBody": {
          "description": "Partner Billing Report request object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputPartnerBillingReportRequestV1"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/billing/partner-report/{requestId}/output": {
      "get": {
        "tags": [
          "Billing"
        ],
        "description": "Get the output of an existing Partner Billing Report.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The id of a Partner Billing Report request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/csv": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/billing/partner-report/{requestId}/status": {
      "get": {
        "tags": [
          "Billing"
        ],
        "description": "Get the status of an existing Partner Billing Report.",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The id of a Partner Billing Report request.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceOutcomePartnerBillingReportStatusV1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Outcome"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Gets page of balance objects for the given account id",
        "operationId": "GetApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to get balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResourceCollectionOutcomeOfBalanceResponseV2"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Create balance for the given account id",
        "operationId": "PostApiV2ExternalAccountBalancesByAccountId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account to create balances for",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to set when creating a Retail Media Balance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "createBalance"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances/{balance-id}": {
      "get": {
        "tags": [
          "Balance"
        ],
        "description": "Get a balance for the given account id and balance id",
        "operationId": "GetApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Balance"
        ],
        "description": "Modify a balance for the given account id",
        "operationId": "PatchApiV2ExternalAccountByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalanceModelV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "updateBalanceModel"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/accounts/{account-id}/balances/{balance-id}/change-dates": {
      "post": {
        "tags": [
          "Balance"
        ],
        "description": "Change dates of a balance for the given account id",
        "operationId": "PostApiV2ExternalAccountChangeDatesByAccountId}Balances{balanceId",
        "parameters": [
          {
            "name": "account-id",
            "in": "path",
            "description": "The account of the balance",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "balance-id",
            "in": "path",
            "description": "The balance to change the dates",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "An object that represents the available options to modify schedule of a balance.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDatesOfBalanceV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "changeDatesOfBalance"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponseV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/campaigns/{campaign-id}/preferred-line-items": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets page of preferred line item objects for the given campaign id",
        "operationId": "GetApiV2ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "limitToId",
            "in": "query",
            "description": "The ids that you would like to limit your result set to",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-nullable": false
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The 0 indexed page index you would like to receive given the page size",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items you would like to receive in this request",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2PagedListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2PagedListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Creates a new preferred line item with the specified settings",
        "operationId": "LineItemsApi_PostApi202110ExternalCampaignPreferredLineItemsByCampaignId",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "The given campaign id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemCreateModelV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/bid-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Fetch all bid multipliers for a given line item",
        "operationId": "GetApiV2ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "External LineItemId for bid multiplier retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "BidMultipliers Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonApiSingleResponseOfLineItemBidMultipliersV2"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the bid multipliers for a given line item",
        "operationId": "PutApiV2ExternalLineItemBidMultipliersByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "External LineItemId for bid multiplier retrieval",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "New Bid Multipliers to be set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemBidMultipliersV2Request"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "BidMultipliers Updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemBidMultipliersV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get all the product buttons associated with a line item",
        "operationId": "ProductButtons_GetApi202210ExternalLineItemProductButtonsByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/create": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Append new product buttons to a line item",
        "operationId": "ProductButtons_PostApi202210ExternalLineItemProductButtonsCreateByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "List of product buttons to append to the specified line item",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonListRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "productButtons"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/line-items/{line-item-id}/product-buttons/{product-button-id}": {
      "delete": {
        "tags": [
          "Campaign"
        ],
        "description": "Delete a product button",
        "operationId": "ProductButtons_DeleteApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get a single product button",
        "operationId": "ProductButtons_GetApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Update a product button",
        "operationId": "ProductButtons_PutApi202210ExternalLineItemProductButtonsByLineItemIdProductButtonId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "Long external id of the associated line item",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          },
          {
            "name": "product-button-id",
            "in": "path",
            "description": "Sequential id of the product button",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "Details of the updated product button",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductButtonRequest"
              }
            }
          },
          "x-nullable": false,
          "x-bodyName": "productButton"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductButtonListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/preferred-line-items/{line-item-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Gets the preferred line item for the given line item id",
        "operationId": "GetApiV2ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign"
        ],
        "description": "Updates the preferred line item for the given line item id",
        "operationId": "LineItemsApi_PutApi202110ExternalPreferredLineItemByLineItemId",
        "parameters": [
          {
            "name": "line-item-id",
            "in": "path",
            "description": "The given line item id",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            },
            "x-nullable": false
          }
        ],
        "requestBody": {
          "description": "The line item settings to create a line item with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreferredLineItemUpdateModelV2Request"
              }
            }
          },
          "required": true,
          "x-nullable": false,
          "x-bodyName": "lineItem"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreferredLineItemV2Response"
                }
              }
            }
          }
        }
      }
    },
    "/preview/retail-media/brands/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for brands given a retailer ID and search term.",
        "operationId": "SearchBrandsByNameAsyncV1",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset of paginated results",
            "style": "form",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "the number of brands to return",
            "style": "form",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "requestBody": {
          "description": "BrandIdSearchRequest which contains the request parameters",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputBrandIdSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputBrandIdSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputBrandIdSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValueResourceInputBrandIdSearchRequest"
              }
            }
          },
          "x-bodyName": "brandIdSearchRequest"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GrantConsentInput": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GrantConsentModelValueResource"
          }
        },
        "description": "An object that encapsulates GrantConsentModel",
        "x-used-in-request": true
      },
      "GrantConsentModelValueResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/GrantConsentModel"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "GrantConsentModel": {
        "required": [
          "callbackUrl",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "callbackUrl": {
            "type": "string"
          },
          "callbackState": {
            "type": "string"
          }
        },
        "description": "An object that represents the required (ClientId and CallbackUrl) and optional (CallbackState) parameters when granting consents on behalf of a Private Market demand account",
        "x-used-in-request": true
      },
      "RetailMediaContactlistOperation": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistOperationResponseAttributes"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "nullable": true,
            "example": "AddRemoveContactlistResult",
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Operation on Retail Media contact list",
        "x-used-in-response": true
      },
      "ErrorCodeResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Definition of the error code",
        "x-used-in-response": true
      },
      "RetailMediaContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RetailMediaContactlistAmendment"
          }
        },
        "description": "Request of Retail Media contactlist",
        "x-used-in-request": true
      },
      "RetailMediaContactlistOperationResponseAttributes": {
        "required": [
          "contactListId",
          "operation",
          "requestDate"
        ],
        "type": "object",
        "properties": {
          "contactListId": {
            "type": "integer",
            "description": "The affected user list id",
            "format": "int64"
          },
          "operation": {
            "type": "string",
            "description": "The action recorded"
          },
          "requestDate": {
            "type": "string",
            "description": "When the action was recorded",
            "format": "date-time"
          },
          "identifierType": {
            "type": "string",
            "description": "The schema specified for of the identifiers",
            "nullable": true,
            "x-optional-in-response": true
          },
          "nbInvalidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were invalid for the specified schema",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "nbValidIdentifiers": {
            "type": "integer",
            "description": "How many identifiers were valid for the specified schema",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sampleInvalidIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A sample of invalid identifiers if there is some",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "The attributes of Retail Media contact list operation",
        "x-used-in-response": true
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Definition of an audience error",
        "x-used-in-response": true
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Definition of the warning",
        "x-used-in-response": true
      },
      "RetailMediaContactlistAmendment": {
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "User List",
            "example": "AddRemoveContactlist"
          },
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Whether to add or remove users"
              },
              "identifierType": {
                "enum": [
                  "Email",
                  "UserIdentifier",
                  "IdentityLink",
                  "Gum",
                  "CustomerId",
                  "PhoneNumber"
                ],
                "type": "string",
                "description": "What type of identifiers are used"
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users to add or remove, each in the schema specified"
              }
            },
            "description": "Attributes of retail media contact list amendment"
          }
        },
        "description": "Request data of retail media contact list amendment",
        "x-used-in-request": true
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-response": true
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Used for the /me endpoint. Contains information about the currently authenticated application that we accept to give to our clients",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "MessageBodyModel": {
        "title": "MessageBodyModel",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MessageDataInstanceModel"
          },
          "errors": {
            "title": "Errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageError"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "error message",
        "x-used-in-response": true
      },
      "InbotDiscussionBodyModel": {
        "title": "InbotDiscussionBodyModel",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InbotDiscussionDataInstanceModel"
          }
        },
        "description": "an API recommendation message",
        "x-used-in-request": true
      },
      "MessageDataInstanceModel": {
        "title": "MessageDataInstanceModel",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "Message",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "description": "an API answer message",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "MessageError": {
        "title": "MessageError",
        "type": "object",
        "properties": {
          "traceId": {
            "title": "Traceid",
            "type": "string",
            "description": "correlation ID, unique to each request",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "error category",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "title": "Code",
            "type": "string",
            "description": "error code",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "title": "Instance",
            "type": "string",
            "description": "specific occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "error message",
        "x-used-in-response": true
      },
      "InbotDiscussionDataInstanceModel": {
        "title": "InbotDiscussionDataInstanceModel",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string",
            "default": "InbotDiscussion"
          },
          "attributes": {
            "$ref": "#/components/schemas/InbotDiscussion"
          }
        },
        "description": "an API recommendation request",
        "x-used-in-request": true
      },
      "Message": {
        "title": "Message",
        "type": "object",
        "properties": {
          "userMessage": {
            "title": "Usermessage",
            "type": "string",
            "description": "user prompt",
            "nullable": true,
            "x-optional-in-response": true
          },
          "botMessage": {
            "$ref": "#/components/schemas/BotMessage"
          }
        },
        "description": "message of the discussion",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "InbotDiscussion": {
        "title": "InbotDiscussion",
        "type": "object",
        "properties": {
          "messages": {
            "title": "Messages",
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "description": "ordered list of previous messages, alternating between user prompts and bot answers"
          }
        },
        "description": "discussion between the user and the chatbot",
        "x-used-in-request": true
      },
      "BotMessage": {
        "title": "BotMessage",
        "type": "object",
        "properties": {
          "opening": {
            "title": "Opening",
            "type": "string",
            "description": "opening comment from the bot, introducing the list of recommended products if relevant.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "productRecos": {
            "title": "Productrecos",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRecommendation"
            },
            "description": "list of recommended products",
            "nullable": true,
            "x-optional-in-response": true
          },
          "closing": {
            "title": "Closing",
            "type": "string",
            "description": "closing remark from the bot",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "bot structured answer to the user prompt",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ProductRecommendation": {
        "title": "ProductRecommendation",
        "required": [
          "rationale"
        ],
        "type": "object",
        "properties": {
          "rationale": {
            "title": "Rationale",
            "type": "string",
            "description": "reason for this recommendation, given by the bot"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "name of the product",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "description of the product",
            "nullable": true,
            "x-optional-in-response": true
          },
          "imageUrl": {
            "title": "Imageurl",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "url of the product image",
            "format": "uri",
            "nullable": true,
            "x-optional-in-response": true
          },
          "url": {
            "title": "Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "url of the product on the retailer website",
            "format": "uri",
            "nullable": true,
            "x-optional-in-response": true
          },
          "brand": {
            "title": "Brand",
            "type": "string",
            "description": "brand of the product",
            "nullable": true,
            "x-optional-in-response": true
          },
          "price": {
            "title": "Price",
            "type": "number",
            "description": "numerical value of the price of the product",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currency": {
            "title": "Currency",
            "type": "string",
            "description": "currency of the price of the product",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "recommendation data for a product",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "BatchAcceptedResponse": {
        "required": [
          "operationToken"
        ],
        "type": "object",
        "properties": {
          "operationToken": {
            "type": "string"
          }
        },
        "description": "A batch was accepted. The report can be accessed using the reporting endpoint.",
        "x-used-in-response": true
      },
      "FailResponse": {
        "required": [
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterError"
            },
            "description": "List of errors"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImporterWarning"
            },
            "description": "List of warnings"
          }
        },
        "description": "Error server response.",
        "x-used-in-response": true
      },
      "ReportOkResponse": {
        "required": [
          "errorDetails",
          "importRequestTimestamp",
          "numberOfProductsDeleted",
          "numberOfProductsInTheBatch",
          "numberOfProductsUpserted",
          "numberOfProductsWithErrors",
          "numberOfProductsWithWarnings",
          "status",
          "warningDetails"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "ACCEPTED",
              "IN_PROGRESS",
              "VALIDATED",
              "VALIDATED_WITH_ERRORS",
              "FAILED"
            ],
            "type": "string",
            "description": "The status of the operation.\nThe operation is completed when the status is one of (VALIDATED,VALIDATED_WITH_ERRORS,FAILED)"
          },
          "importRequestTimestamp": {
            "type": "string",
            "description": "The date when the original batch request was sent.",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "numberOfProductsInTheBatch": {
            "type": "string",
            "description": "The number of products present in the batch.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "numberOfProductsUpserted": {
            "type": "string",
            "description": "The number of products upserted.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "numberOfProductsDeleted": {
            "type": "string",
            "description": "The number of products deleted.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "numberOfProductsWithErrors": {
            "type": "string",
            "description": "The number of products with errors.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailErrors"
            },
            "description": "The list of errors with details."
          },
          "numberOfProductsWithWarnings": {
            "type": "string",
            "description": "The number of products with Warnings.",
            "format": "int32",
            "nullable": true,
            "x-nullable": true
          },
          "warningDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarnings"
            },
            "description": "The list of Warnings with details."
          }
        },
        "description": "The report on a given operationToken is ready. The report is available for 4 days",
        "x-used-in-response": true
      },
      "ProductsCustomBatchRequest": {
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductsCustomBatchRequestEntry"
            },
            "description": "The request entries to be processed in the batch."
          }
        },
        "description": "Defines a batch of operations.",
        "x-used-in-request": true
      },
      "ProductImporterError": {
        "required": [
          "code",
          "detail",
          "instance",
          "title",
          "traceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The MACHINE-READABLE correlation ID provided by the gateway"
          },
          "type": {
            "type": "string",
            "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
          },
          "code": {
            "type": "string",
            "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
          },
          "instance": {
            "type": "string",
            "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
          },
          "title": {
            "type": "string",
            "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
          }
        },
        "description": "Error descriptor.",
        "x-used-in-response": true
      },
      "ProductImporterWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "title",
          "traceId",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The MACHINE-READABLE correlation ID provided by the gateway"
          },
          "type": {
            "type": "string",
            "description": "A MACHINE-READABLE code specifying error category. This information is used on client side to focus on certain type of error, to either retry some processing or display only certain type of errors."
          },
          "code": {
            "type": "string",
            "description": "A MACHINE-READABLE error code string in kebab-case. Unique across Criteo"
          },
          "instance": {
            "type": "string",
            "description": "A MACHINE-READABLE URI reference that identifies the specific occurrence of the problem. This could be useful when we want to the return the API Endpoint identifying the exact resource related to the error."
          },
          "title": {
            "type": "string",
            "description": "A short, HUMAN-READABLE summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization."
          },
          "detail": {
            "type": "string",
            "description": "A HUMAN-READABLE detailed explanation specific to this occurrence of the problem. This should not be more that 1 paragraph"
          }
        },
        "description": "Warning descriptor.",
        "x-used-in-response": true
      },
      "ReportDetailErrors": {
        "required": [
          "errors",
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product ID in lowercase"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailError"
            }
          }
        },
        "description": "A list of errors on a batch operation.",
        "x-used-in-response": true
      },
      "ReportDetailWarnings": {
        "required": [
          "productId",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportDetailWarning"
            }
          }
        },
        "description": "A list of warnings on a batch operation.",
        "x-used-in-response": true
      },
      "ProductsCustomBatchRequestEntry": {
        "required": [
          "merchantId",
          "method"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "description": "An entry ID, unique within the batch request.",
            "format": "int64"
          },
          "merchantId": {
            "type": "integer",
            "description": "The ID of the managing account. Criteo: the partnerId.",
            "format": "int32"
          },
          "method": {
            "enum": [
              "delete",
              "insert"
            ],
            "type": "string",
            "description": "The method of the batch entry."
          },
          "productId": {
            "type": "string",
            "description": "The Product ID to delete. Only defined if the method is delete."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Deprecated (providing this information is no more needed, this field will be removed in next release). The itemGroupId of the product to delete. To be defined when the method is delete and the product is a variant."
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "feedId": {
            "type": "string",
            "description": "Not used by Criteo."
          }
        },
        "description": "A product event for a batch request.",
        "x-used-in-request": true
      },
      "ReportDetailError": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "UnknownError",
              "InvalidBigImageUrl",
              "InvalidProductId",
              "InvalidProductUrl",
              "InvalidSmallImageUrl",
              "JsonParsingIssue",
              "MissingID",
              "MissingImages",
              "MissingName",
              "MissingURL",
              "NonAsciiId",
              "OverlargeBigImage",
              "OverlargeID",
              "OverlargeSmallImage",
              "OverlargeURL",
              "ConfigurationError"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isServerRelated": {
            "type": "boolean"
          }
        },
        "description": "An error on a batch operation.",
        "x-used-in-response": true
      },
      "ReportDetailWarning": {
        "required": [
          "isServerRelated",
          "message",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "OverlargeBadgeUrl",
              "InvalidBadgeUrl"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "isServerRelated": {
            "type": "boolean"
          }
        },
        "description": "A warning on a batch operation.",
        "x-used-in-response": true
      },
      "Product": {
        "required": [
          "channel",
          "id",
          "imageLink",
          "link",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the item. Aka Product ID. Don’t use casing to make IDs unique."
          },
          "offerId": {
            "type": "string",
            "description": "Not used by Criteo."
          },
          "title": {
            "type": "string",
            "description": "Title of the item. (500 UTF8 characters max)."
          },
          "description": {
            "type": "string",
            "description": "Description of the item. RECOMMENDED. (5000 UTF8 characters max)."
          },
          "link": {
            "type": "string",
            "description": "URL directly linking to your item's page on your website. (1000 UTF8 characters max)."
          },
          "imageLink": {
            "type": "string",
            "description": "URL of an image of the item. Supported formats: PNG, JPEG, GIF. (2000 UTF8 characters max). "
          },
          "additionalImageLinks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional URLs of images of the item."
          },
          "contentLanguage": {
            "type": "string",
            "description": "The two-letter ISO 639-1 language code for the item."
          },
          "targetCountry": {
            "type": "string",
            "description": "The CLDR territory code for the item."
          },
          "channel": {
            "enum": [
              "online"
            ],
            "type": "string",
            "description": "The item's channel (online only)."
          },
          "expirationDate": {
            "type": "string",
            "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format."
          },
          "adult": {
            "type": "boolean",
            "description": "Set to true if the item is targeted towards adults. RECOMMENDED."
          },
          "kind": {
            "type": "string",
            "description": "Identifies what kind of resource this is."
          },
          "brand": {
            "type": "string",
            "description": "Brand of the item. RECOMMENDED."
          },
          "color": {
            "type": "string",
            "description": "Color of the item."
          },
          "googleProductCategory": {
            "type": "string",
            "description": "Google's category of the item (see Google product taxonomy). RECOMMENDED."
          },
          "gtin": {
            "type": "string",
            "description": "Global Trade Item Number (GTIN) of the item. RECOMMENDED."
          },
          "itemGroupId": {
            "type": "string",
            "description": "Shared identifier for all variants of the same product. RECOMMENDED. Don’t use casing to make IDs unique. (50 characters max)"
          },
          "material": {
            "type": "string",
            "description": "The material of which the item is made."
          },
          "mpn": {
            "type": "string",
            "description": "Manufacturer Part Number (MPN) of the item. RECOMMENDED."
          },
          "pattern": {
            "type": "string",
            "description": "The item's pattern (e.g. polka dots)."
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "salePrice": {
            "$ref": "#/components/schemas/Price"
          },
          "salePriceEffectiveDate": {
            "type": "string",
            "description": "Date range during which the item is on sale."
          },
          "shipping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductShipping"
            },
            "description": "Shipping rules."
          },
          "shippingWeight": {
            "$ref": "#/components/schemas/ProductShippingWeight"
          },
          "sizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Size of the item. RECOMMENDED. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value."
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTax"
            },
            "description": "Tax information."
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttribute"
            },
            "description": "A list of custom (merchant-provided) attributes. This is useful for submitting attributes not explicitly exposed by the API. Declaring attributes explicitly exposed by the API using is forbidden"
          },
          "identifierExists": {
            "type": "boolean",
            "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
          },
          "installment": {
            "$ref": "#/components/schemas/Installment"
          },
          "loyaltyPoints": {
            "$ref": "#/components/schemas/LoyaltyPoints"
          },
          "multipack": {
            "type": "integer",
            "description": "The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.",
            "format": "int64"
          },
          "customLabel0": {
            "type": "string",
            "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
          },
          "customLabel1": {
            "type": "string",
            "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
          },
          "customLabel2": {
            "type": "string",
            "description": "Custom label 2 for custom grouping of items in a Shopping campaign."
          },
          "customLabel3": {
            "type": "string",
            "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
          },
          "customLabel4": {
            "type": "string",
            "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
          },
          "isBundle": {
            "type": "boolean",
            "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
          },
          "mobileLink": {
            "type": "string",
            "description": "accounts.link to a mobile-optimized version of the landing page."
          },
          "availabilityDate": {
            "type": "string",
            "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
          },
          "shippingLabel": {
            "type": "string",
            "description": "The shipping label of the product, used to group product in account-level shipping rules."
          },
          "unitPricingMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingMeasure"
          },
          "unitPricingBaseMeasure": {
            "$ref": "#/components/schemas/ProductUnitPricingBaseMeasure"
          },
          "shippingLength": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingWidth": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "shippingHeight": {
            "$ref": "#/components/schemas/ProductShippingDimension"
          },
          "displayAdsId": {
            "type": "string",
            "description": "An identifier for an item for dynamic remarketing campaigns."
          },
          "displayAdsSimilarIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser-specified recommendations."
          },
          "displayAdsTitle": {
            "type": "string",
            "description": "Title of an item for dynamic remarketing campaigns."
          },
          "displayAdsLink": {
            "type": "string",
            "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
          },
          "displayAdsValue": {
            "type": "number",
            "description": "Offer margin for dynamic remarketing campaigns.",
            "format": "double"
          },
          "sellOnGoogleQuantity": {
            "type": "integer",
            "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
            "format": "int64"
          },
          "promotionIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The unique ID of a promotion."
          },
          "maxHandlingTime": {
            "type": "integer",
            "description": "Maximal product handling time (in business days).",
            "format": "int64"
          },
          "minHandlingTime": {
            "type": "integer",
            "description": "Minimal product handling time (in business days).",
            "format": "int64"
          },
          "costOfGoodsSold": {
            "$ref": "#/components/schemas/Price"
          },
          "source": {
            "type": "string",
            "description": "The source of the offer, i.e., how the offer was created."
          },
          "includedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations."
          },
          "excludedDestinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
          },
          "adsGrouping": {
            "type": "string",
            "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise."
          },
          "adsLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Similar to adsGrouping, but only works on CPC."
          },
          "adsRedirect": {
            "type": "string",
            "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads."
          },
          "productTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Categories of the item (formatted as in products data specification)."
          },
          "productTypeKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Category keys of the item (formatted as in productTypes)."
          },
          "ageGroup": {
            "type": "string",
            "description": "Target age group of the item."
          },
          "availability": {
            "type": "string",
            "description": "Availability status of the item. RECOMMENDED."
          },
          "condition": {
            "type": "string",
            "description": "Condition or state of the item."
          },
          "gender": {
            "type": "string",
            "description": "Target gender of the item."
          },
          "sizeSystem": {
            "type": "string",
            "description": "System in which the size is specified. Recommended for apparel items."
          },
          "sizeType": {
            "type": "string",
            "description": "The cut of the item. Recommended for apparel items."
          },
          "energyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "minEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "maxEnergyEfficiencyClass": {
            "type": "string",
            "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
          },
          "taxCategory": {
            "type": "string",
            "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
          },
          "transitTimeLabel": {
            "type": "string",
            "description": "The transit time label of the product, used to group product in account-level transit time tables."
          },
          "sellerId": {
            "type": "string",
            "description": "(Deprecated Field) The external ID of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "externalSellerId": {
            "type": "string",
            "description": "The external id of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "externalSellerName": {
            "type": "string",
            "description": "The external name of the seller (case sensitive and 50 UTF8 characters max). This information is required by the Criteo Offsite Ads."
          },
          "numberOfReviews": {
            "type": "integer",
            "description": "The number of customer reviews for the product",
            "format": "int32"
          },
          "productRating": {
            "type": "string",
            "description": "The product rating for the product"
          },
          "badge": {
            "type": "string",
            "description": "URL of a badge image to display on the product."
          }
        },
        "description": "Defines a product to be inserted or updated.",
        "x-used-in-request": true
      },
      "Price": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "The currency of the price."
          },
          "value": {
            "type": "string",
            "description": "The price represented as a number. See JSON's number specification for more details."
          }
        },
        "description": "Defines a price.",
        "x-used-in-request": true
      },
      "ProductShippingWeight": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The weight of the product used to calculate the shipping cost of the item.",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "The unit of value."
          }
        },
        "description": "Defines the shipping weight of a product.",
        "x-used-in-request": true
      },
      "Installment": {
        "type": "object",
        "properties": {
          "months": {
            "type": "integer",
            "description": "The number of installments the buyer has to pay.",
            "format": "int64"
          },
          "amount": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "description": "Defines the installment of a product.",
        "x-used-in-request": true
      },
      "LoyaltyPoints": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
          },
          "pointsValue": {
            "type": "integer",
            "description": "The retailer's loyalty points in absolute value.",
            "format": "int64"
          },
          "ratio": {
            "type": "number",
            "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
            "format": "double"
          }
        },
        "description": "Defines how a client earns loyalty points after buying this product.",
        "x-used-in-request": true
      },
      "ProductUnitPricingMeasure": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The measurement of an item.",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "The unit of measure."
          }
        },
        "description": "Defines a measurement.",
        "x-used-in-request": true
      },
      "ProductUnitPricingBaseMeasure": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "The denominator of the unit price.",
            "format": "int64"
          },
          "unit": {
            "type": "string",
            "description": "The unit of the denominator."
          }
        },
        "description": "Defines a measurement.",
        "x-used-in-request": true
      },
      "ProductShippingDimension": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "The dimension of the product used to calculate the shipping cost of the item.",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "description": "The unit of value."
          }
        },
        "description": "Defines the shipping dimension of a product.",
        "x-used-in-request": true
      },
      "ProductShipping": {
        "type": "object",
        "properties": {
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "country": {
            "type": "string",
            "description": "The CLDR territory code of the country to which an item will ship."
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which a shipping rate applies."
          },
          "service": {
            "type": "string",
            "description": "A free-form description of the service class or delivery speed."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "locationGroupName": {
            "type": "string",
            "description": "The location where the shipping is applicable, represented by a location group name."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
          }
        },
        "description": "Defines the shipping information of a product.",
        "x-used-in-request": true
      },
      "ProductTax": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "number",
            "description": "The percentage of tax rate that applies to the item price.",
            "format": "double"
          },
          "country": {
            "type": "string",
            "description": "The country within which the item is taxed, specified as a CLDR territory code."
          },
          "region": {
            "type": "string",
            "description": "The geographic region to which the tax rate applies."
          },
          "taxShip": {
            "type": "boolean",
            "description": "Set to true if tax is charged on shipping."
          },
          "locationId": {
            "type": "integer",
            "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
            "format": "int64"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
          }
        },
        "description": "Defines the tax information of a product.",
        "x-used-in-request": true
      },
      "CustomAttribute": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute."
          }
        },
        "description": "Defines a custom attribute of a product.",
        "x-used-in-request": true
      },
      "EntityResourceCollectionOutcomeOfRetailMediaChildAccountAndMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceOfRetailMediaChildAccount"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata.",
        "x-used-in-response": true
      },
      "Metadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Metadata related to the current request.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "EntityResourceOfRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalRetailMediaChildAccount"
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "x-used-in-response": true
      },
      "SdkApiRestCommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "description": "",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "ExternalRetailMediaChildAccount": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "account name",
            "nullable": true,
            "x-optional-in-response": true
          },
          "companyName": {
            "type": "string",
            "description": "Paying entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "onBehalfCompanyName": {
            "type": "string",
            "description": "On behalf entity name of ads for the Digital Services Act",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Supply",
              "Demand"
            ],
            "type": "string",
            "description": "Type for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "subType": {
            "enum": [
              "Unknown",
              "Brand",
              "Seller"
            ],
            "type": "string",
            "description": "subtype for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "countryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries associated with the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currencyId": {
            "type": "string",
            "description": "the currency for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "timeZone": {
            "type": "string",
            "description": "the timezone for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The details for a newly created account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "x-used-in-response": true
      },
      "RmAudienceSegmentIdEntityV1ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities",
        "x-used-in-response": true
      },
      "RmAudienceSegmentEntityV1RmAudienceSegmentSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchMetadataV1"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata",
        "x-used-in-response": true
      },
      "RmContactListStatisticsEntityV1Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1Resource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-used-in-response": true
      },
      "RmAudienceEntityV1RmAudienceSearchMetadataV1ListResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/RmAudienceSearchMetadataV1"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceEntityV1Resource"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata",
        "x-used-in-response": true
      },
      "RmAudienceSegmentBulkUpdateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentBulkCreateInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several values.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentBulkDeleteInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1Resource"
            }
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for several entities.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "RmAudienceSearchInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1Resource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceSegmentIdEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentIdEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceSegmentSearchMetadataV1": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Metadata for the audience segment search response.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmContactListStatisticsEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmContactListStatisticsEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSearchMetadataV1": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of items",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "Max item of the current page",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "Number of item to skip",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Metadata for the audience search response.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-response": true
      },
      "RmAudienceSegmentUpdateEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentUpdateEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "RmAudienceSegmentCreateEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentCreateEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSegmentDeleteEntityV1Resource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentDeleteEntityV1"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSegmentSearchEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSearchEntityV1Resource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RmAudienceSearchEntityV1"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "RmAudienceSegmentEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "Name of the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "description": "Description of the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Unknown",
              "ContactList",
              "Events"
            ],
            "type": "string",
            "description": "Type of segment (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment creation (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of segment update (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the segment",
            "nullable": true,
            "x-optional-in-response": true
          },
          "contactList": {
            "$ref": "#/components/schemas/RmContactListV1"
          },
          "events": {
            "$ref": "#/components/schemas/RmEventsV1"
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the segment (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentIdEntityV1": {
        "type": "object",
        "description": "Audience Segment entity only with its ID",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmContactListStatisticsEntityV1": {
        "type": "object",
        "properties": {
          "numberOfIdentifiers": {
            "type": "integer",
            "description": "Number of identifiers in the contact list.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "numberOfMatches": {
            "type": "integer",
            "description": "Number of matched identifiers in the contact list.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "matchRate": {
            "type": "number",
            "description": "Percentage of matched identifiers in the contact list.\r\nCan differ from matches/identifiers depending on the contact list type.",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Contact list statistics.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "ContactListStatistics",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceEntityV1": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account associated to the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "Name of the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "description": "Description of the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdById": {
            "type": "string",
            "description": "User that created the audience",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience creation (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "updatedAt": {
            "type": "string",
            "description": "ISO-8601 timestamp in UTC of audience update (read-only)",
            "format": "date-time",
            "nullable": true,
            "x-optional-in-response": true
          },
          "channels": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Onsite",
                "Offsite"
              ],
              "type": "string"
            },
            "description": "Channels associated to the audience (read-only)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "algebra": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          }
        },
        "description": "Audience of people of interest for a marketer.",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudience",
          "version": "v1"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAudienceSegmentUpdateEntityV1": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "description": {
            "$ref": "#/components/schemas/NillableString"
          },
          "contactList": {
            "$ref": "#/components/schemas/RmContactListUpdateV1"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-request": true
      },
      "RmAudienceSegmentCreateEntityV1": {
        "required": [
          "name",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the segment"
          },
          "description": {
            "type": "string",
            "description": "Description of the segment"
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer  associated to the segment"
          },
          "contactList": {
            "$ref": "#/components/schemas/RmContactListCreateV1"
          }
        },
        "description": "Set of rules that defines specific people to target.",
        "x-used-in-request": true
      },
      "RmAudienceSegmentDeleteEntityV1": {
        "type": "object",
        "description": "Segment to delete",
        "x-criteo-canonical": {
          "infoType": "entity",
          "name": "RetailMediaAudienceSegment",
          "version": "v1"
        },
        "x-used-in-request": true
      },
      "RmAudienceSegmentSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          },
          "audienceSegmentTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "ContactList",
                "Events"
              ],
              "type": "string"
            },
            "description": "List of segment types"
          }
        },
        "description": "Available filters to perform a search on audience segments. If present, the filters are AND'ed together when applied.",
        "x-used-in-request": true
      },
      "RmAudienceSearchEntityV1": {
        "type": "object",
        "properties": {
          "audienceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of audience ids"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of retailer ids"
          },
          "audienceSegmentIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of segment ids (linked to the result audiences)"
          }
        },
        "description": "Available filters to perform a search on audiences. If present, the filters are AND'ed together when applied.",
        "x-used-in-request": true
      },
      "RmContactListV1": {
        "type": "object",
        "properties": {
          "isReadOnly": {
            "type": "boolean",
            "description": "Is the segment read-only",
            "nullable": true,
            "x-optional-in-response": true
          },
          "identifierType": {
            "enum": [
              "Unknown",
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list identifier's type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sharingStatus": {
            "enum": [
              "Unknown",
              "NotShared",
              "SharedWithAll",
              "SharedWithDemandAccounts"
            ],
            "type": "string",
            "description": "Indicates if the contact list is shared with other accounts",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Settings to target users with your contact lists.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmEventsV1": {
        "type": "object",
        "properties": {
          "shopperActivity": {
            "enum": [
              "Unknown",
              "View",
              "Buy",
              "AddToCart"
            ],
            "type": "string",
            "description": "Reach people who performed specific action",
            "nullable": true,
            "x-optional-in-response": true
          },
          "lookbackDays": {
            "enum": [
              "Unknown",
              "Last7Days",
              "Last14Days",
              "Last30Days",
              "Last45Days",
              "Last60Days",
              "Last90Days",
              "Last120Days",
              "Last150Days",
              "Last180Days"
            ],
            "type": "string",
            "description": "The number of days to look back",
            "nullable": true,
            "x-optional-in-response": true
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of category ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of brand ids",
            "nullable": true,
            "x-optional-in-response": true
          },
          "minPrice": {
            "type": "number",
            "description": "Minimum price of the products",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          },
          "maxPrice": {
            "type": "number",
            "description": "Maximum price of the products",
            "format": "double",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Settings to target users based on their behavior",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmAlgebraNodeV1": {
        "type": "object",
        "properties": {
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmAlgebraNodeV1"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "not": {
            "$ref": "#/components/schemas/RmAlgebraNodeV1"
          },
          "audienceSegmentId": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Node in the audience algebra definition.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "NillableString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The string's value. If missing or null the string's value is set to \"null\"",
            "nullable": true
          }
        },
        "description": "Placeholder object for string value  for which \"null\" is a valid business value",
        "nullable": true,
        "x-used-in-request": true
      },
      "RmContactListUpdateV1": {
        "type": "object",
        "description": "Settings to update the contact list of the segment",
        "x-used-in-request": true
      },
      "RmContactListCreateV1": {
        "type": "object",
        "properties": {
          "identifierType": {
            "enum": [
              "Email",
              "UserIdentifier",
              "IdentityLink",
              "CustomerId"
            ],
            "type": "string",
            "description": "Indicates contact list type"
          }
        },
        "description": "Settings to target users with your contact lists.",
        "x-used-in-request": true
      },
      "ValueResourceOutcomeCpcMinBidsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceCpcMinBidsResponse"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value object.",
        "x-used-in-response": true
      },
      "ValueResourceInputCpcMinBidsRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceCpcMinBidsRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceCpcMinBidsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/CpcMinBidsResponse"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceCpcMinBidsRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/CpcMinBidsRequest"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "CpcMinBidsResponse": {
        "required": [
          "overallMinBid",
          "skuMinBids"
        ],
        "type": "object",
        "properties": {
          "overallMinBid": {
            "type": "number",
            "description": "Overall minimum bid amount for the given list of sku ids.",
            "format": "double"
          },
          "skuMinBids": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SkuMinBid"
            },
            "description": "Minimum bid amounts for each of the given list of sku ids."
          }
        },
        "additionalProperties": false,
        "description": "Cpc Min Bids response object.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "CpcMinBidsRequest": {
        "required": [
          "skuIds"
        ],
        "type": "object",
        "properties": {
          "skuIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Sku id list for which minimum bid amounts are requested."
          }
        },
        "additionalProperties": false,
        "description": "Cpc Min Bids request object.",
        "x-used-in-request": true
      },
      "SkuMinBid": {
        "required": [
          "minBid",
          "skuId"
        ],
        "type": "object",
        "properties": {
          "skuId": {
            "type": "string",
            "description": "Sku id."
          },
          "minBid": {
            "type": "number",
            "description": "Minimum bid amount value.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "An object represents the minimum bid amount value of a sku.",
        "x-used-in-response": true
      },
      "KeywordsModelResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "data": {
            "$ref": "#/components/schemas/KeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Response object containing keywords associated with a line item.",
        "x-used-in-response": true
      },
      "ResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "PromotedProductResourceCollectionOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "meta": {
            "$ref": "#/components/schemas/ProductMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing promoted products.",
        "x-used-in-response": true
      },
      "ProductResourceOutcome": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RmcaCommonProblem"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Outcome object containing errors and warnings.",
        "x-used-in-response": true
      },
      "AddRemoveKeywordsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to add or remove keywords from a line item",
        "x-used-in-request": true
      },
      "SetBidsModelRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SetBidsModelResource"
          }
        },
        "additionalProperties": false,
        "description": "Request object to set bid overrides for keywords associated with a line item",
        "x-used-in-request": true
      },
      "PromotedProductResourceCollectionInput": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotedProductResource"
            }
          }
        },
        "additionalProperties": false,
        "description": "Request object containing promoted products to be appended, deleted, paused or unpaused.",
        "x-used-in-request": true
      },
      "KeywordsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/KeywordsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "RmcaCommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true,
            "x-optional-in-response": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true,
            "x-optional-in-response": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "type": "integer",
            "description": "The problem's HTTP Status code.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": { },
        "description": "Common problem object.",
        "x-used-in-response": true
      },
      "ProductMetadata": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Zero based offset of the first item in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "limit": {
            "type": "integer",
            "description": "Maximum number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "count": {
            "type": "integer",
            "description": "Total number of items available.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "responseCount": {
            "type": "integer",
            "description": "Number of items in the response.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Metadata about the response. Used for pagination.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PromotedProductResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PromotedProduct"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing a promoted product.",
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "AddRemoveKeywordsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/AddRemoveKeywordsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "SetBidsModelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SetBidsModel"
          }
        },
        "additionalProperties": false,
        "description": "Resource object containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "KeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/KeywordDataModel"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "rank": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords associated with a line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PromotedProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A retailer defined SKU ID for the promoted product.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "bidOverride": {
            "type": "number",
            "description": "The bid override for the promoted product for this line item. Ignored unless adding a product.",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "status": {
            "$ref": "#/components/schemas/LineItemProductStatus"
          }
        },
        "additionalProperties": false,
        "description": "A promoted product.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "AddRemoveKeywordsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddRemoveKeywordModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords to be added or removed from a line item",
        "x-used-in-request": true
      },
      "SetBidsModel": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetBidModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Data model containing keywords and their associated bid overrides",
        "x-used-in-request": true
      },
      "KeywordDataModel": {
        "type": "object",
        "properties": {
          "reviewState": {
            "$ref": "#/components/schemas/ReviewStateModel"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywordsModel"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override"
      },
      "LineItemProductStatus": {
        "enum": [
          "unknown",
          "active",
          "paused"
        ],
        "type": "string",
        "description": "The status of a promoted product in the context of the line item.",
        "nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true,
        "x-optional-in-response": true
      },
      "AddRemoveKeywordModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchTypeModel"
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": "A single keyword to be added or removed",
        "x-used-in-request": true
      },
      "SetBidModel": {
        "type": "object",
        "properties": {
          "phrase": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bid": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A single keyword and associated bid override",
        "x-used-in-request": true
      },
      "ReviewStateModel": {
        "enum": [
          "InReview",
          "Recommended",
          "Approved",
          "AutoApproved",
          "Rejected",
          "AutoRejected"
        ],
        "type": "string",
        "description": "The state of a keyword in the context of a line item."
      },
      "MatchTypeModel": {
        "enum": [
          "PositiveExactMatch",
          "NegativeExactMatch",
          "NegativeBroadMatch"
        ],
        "type": "string",
        "description": "The match type of a keyword.",
        "x-used-in-request": true
      },
      "InputKeywordsModel": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The keywords to be added or removed from a line item."
      },
      "CatalogStatusV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCatalogStatusV2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true
      },
      "SkuDataPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuDataPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SkuSlimDataPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuSlimDataPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SkuSlimDataV2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfSkuSlimDataV2"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CpcRateCardPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCpcRateCardPreview"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "PlacementPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPlacementPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "BrandPreviewListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBrandPreview"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SellerPreviewResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSellerPreview"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for response resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "JsonApiRequestOfBrandCatalogRequestV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfBrandCatalogRequestV2AndBrandCatalogRequestV2"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true
      },
      "JsonApiRequestOfSellerCatalogRequestV2": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithoutIdOfSellerCatalogRequestV2AndSellerCatalogRequestV2"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and Attributes properties",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true
      },
      "SkuSearchRequestPreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestPreview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "SkuSearchRequestSlimPreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestSlimPreview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "SkuSearchRequestSlimV2PreviewRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfSkuSearchRequestSlimV2Preview"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfCatalogStatusV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CatalogStatusV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true
      },
      "ResourceOfSkuDataPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SkuDataPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "Technical information, only used in non-prod environments",
            "x-nullable": false
          }
        },
        "description": "Data model for common error or warning",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfSkuSlimDataPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSlimDataPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfSkuSlimDataV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSlimDataV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfCpcRateCardPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CpcRateCardPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfPlacementPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PlacementPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfBrandPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BrandPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfSellerPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SellerPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "JsonApiBodyWithoutIdOfBrandCatalogRequestV2AndBrandCatalogRequestV2": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/BrandCatalogRequestV2"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "JsonApiBodyWithoutIdOfSellerCatalogRequestV2AndSellerCatalogRequestV2": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/SellerCatalogRequestV2"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with Type, and\r\nAttributes properties",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfSkuSearchRequestPreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestPreview"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfSkuSearchRequestSlimPreview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestSlimPreview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfSkuSearchRequestSlimV2Preview": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/SkuSearchRequestSlimV2Preview"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "CatalogStatusV2": {
        "required": [
          "status",
          "createdAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "unknown",
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "description": "An enumeration of the status of the catalog."
          },
          "rowCount": {
            "type": "integer",
            "description": "An indication of the number of products contained in this catalog. Available when\r\nthis catalog reaches a success status.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "description": "The size of this catalog in bytes. Available when this catalog reaches a success status.",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "md5Checksum": {
            "type": "string",
            "description": "An MD5 checksum of the catalog for use in confirming complete and uncorrupted retrieval.\r\nAvailable when this catalog reaches a success status.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "description": "The time this catalog was created. Represented as a UTC ISO8601 string.",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "description": "An optional information message intended for developer consumption.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "The status of an asynchronous request to generate a catalog",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SkuDataPreview": {
        "required": [
          "skuKey",
          "categoryId",
          "brandId",
          "brandName",
          "retailerId",
          "retailerName",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "skuKey": {
            "type": "string",
            "description": "The product SKU Key.",
            "x-nullable": false
          },
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "description": {
            "type": "string",
            "description": "A product description.",
            "nullable": true,
            "x-nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "The category Id.",
            "x-nullable": false
          },
          "category": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "nullable": true,
            "x-nullable": true
          },
          "isSellerSku": {
            "type": "boolean",
            "description": "An indication of if the sku is seller sku.",
            "x-nullable": false
          },
          "isBuybox": {
            "type": "boolean",
            "description": "Whether the Sku is a Buybox Winner.",
            "x-nullable": false
          },
          "sellerId": {
            "type": "string",
            "description": "The id of the seller.",
            "nullable": true,
            "x-nullable": true
          },
          "sellerName": {
            "type": "string",
            "description": "The name of the seller.",
            "nullable": true,
            "x-nullable": true
          },
          "brandId": {
            "type": "string",
            "description": "The global brand id associated to the product.",
            "x-nullable": false
          },
          "brandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the global brand.",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "The identifier for the retailer the product is listed by.",
            "x-nullable": false
          },
          "retailerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "The retailer name.",
            "x-nullable": false
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site.",
            "format": "double",
            "x-nullable": false
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "nullable": true,
            "x-nullable": true
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "nullable": true,
            "x-nullable": true
          },
          "modelNumber": {
            "type": "string",
            "description": "The Model Number for the product if available.",
            "nullable": true,
            "x-nullable": true
          },
          "parentId": {
            "type": "string",
            "description": "The ParentId for the product if available.",
            "nullable": true,
            "x-nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "productPage": {
            "type": "string",
            "description": "The product page URL",
            "nullable": true,
            "x-nullable": true
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Metadata and usage info of a sku search",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SkuSlimDataPreview": {
        "required": [
          "categoryId",
          "globalBrandId",
          "globalBrandName",
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "categoryId": {
            "type": "string",
            "description": "The category Id.",
            "x-nullable": false
          },
          "globalCategoryId": {
            "type": "string",
            "description": "The global category Id.",
            "x-nullable": false
          },
          "category": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "x-nullable": false
          },
          "globalBrandId": {
            "type": "string",
            "description": "The global brand id associated to the product.",
            "x-nullable": false
          },
          "globalBrandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the global brand.",
            "x-nullable": false
          },
          "retailerBrandId": {
            "type": "string",
            "description": "The retailer brand id associated to the product.",
            "x-nullable": false
          },
          "retailerBrandName": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the retailer brand.",
            "x-nullable": false
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site. Can be omitted in certain circumstances",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "x-nullable": false
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "x-nullable": false
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Slim  version of Sku Data model",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SkuSlimDataV2": {
        "required": [
          "price",
          "isInStock",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "A short product name.",
            "x-nullable": false
          },
          "description": {
            "type": "string",
            "description": "A short description of the product.",
            "nullable": true,
            "x-nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "brand": {
            "$ref": "#/components/schemas/Brand"
          },
          "price": {
            "type": "number",
            "description": "The price of the product on the retailer site. Can be omitted in certain circumstances",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          },
          "isInStock": {
            "type": "boolean",
            "description": "An indication of if the retailer currently has the product in stock.",
            "x-nullable": false
          },
          "gtin": {
            "type": "string",
            "description": "A GTIN identifier for the product if available. Covers variations such as EANs and UPCs.",
            "nullable": true,
            "x-nullable": true
          },
          "mpn": {
            "type": "string",
            "description": "The MPN for the product if available.",
            "nullable": true,
            "x-nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "An http image resource provided by the retailer.",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "The last time this product was updated in the Retail Media Catalog. Represented as a UTC ISO8601 string.",
            "format": "date-time",
            "x-nullable": false
          }
        },
        "description": "Slim  version of Sku Data model",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CpcRateCardPreview": {
        "required": [
          "retailerMinimumCpcBid"
        ],
        "type": "object",
        "properties": {
          "retailerMinimumCpcBid": {
            "type": "number",
            "description": "retailer minimum cpc bid",
            "format": "double",
            "x-nullable": false
          },
          "categoryMinimumCpcBids": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "x-nullable": false
            },
            "description": "map of category id to minimum cpc bids",
            "nullable": true,
            "x-nullable": true
          },
          "categories": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Category202204"
            },
            "description": "map of category id to category values",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Represents all minimum cpc rates for a retailer and category id",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "PlacementPreview": {
        "required": [
          "name",
          "retailerId",
          "pageType",
          "pageEnvironmentType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the placement",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id",
            "x-nullable": false
          },
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals"
            ],
            "type": "string",
            "description": "Page Type",
            "x-nullable": false
          },
          "pageEnvironmentType": {
            "enum": [
              "Unknown",
              "Web",
              "Mobile",
              "App",
              "Lockout",
              "Mixed",
              "iOS",
              "Android"
            ],
            "type": "string",
            "description": "Page Environment",
            "x-nullable": false
          }
        },
        "description": "Ad Placement information on a page",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "BrandPreview": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Brand Name",
            "x-nullable": false
          }
        },
        "description": "Retail media brands",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "SellerPreview": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Seller Name",
            "x-nullable": false
          }
        },
        "description": "Retail media Seller Id and Name",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "BrandCatalogRequestV2": {
        "type": "object",
        "properties": {
          "brandIdFilter": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The brand ids to filter the catalog by.",
              "format": "long-id"
            },
            "description": "The brand ids to filter the catalog by."
          },
          "retailerIdFilter": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The retailer ids to filter the catalog by."
          },
          "modifiedAfter": {
            "type": "string",
            "description": "Only products modified after this time will be returned.",
            "format": "date-time"
          },
          "includeFields": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Description",
                "ImageUrl",
                "GlobalCategoryId",
                "RetailerName",
                "Category",
                "BrandName"
              ],
              "type": "string"
            },
            "description": "Out of the optional fields, only the ones specified will be included in the catalog generated."
          }
        },
        "description": "A request for a catalog under the specified format.",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true
      },
      "SellerCatalogRequestV2": {
        "type": "object",
        "properties": {
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SellerIdentifierV2"
            },
            "description": "A list of sellers to restrict the catalog to."
          },
          "modifiedAfter": {
            "type": "string",
            "description": "Only products modified after this time will be returned.",
            "format": "date-time"
          },
          "includeFields": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Description",
                "ImageUrl",
                "GlobalCategoryId",
                "RetailerName",
                "Category",
                "BrandName"
              ],
              "type": "string"
            },
            "description": "Out of the optional fields, only the ones specified will be included in the catalog generated."
          }
        },
        "description": "Used to request a catalog of seller SKUs",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true
      },
      "SkuSearchRequestPreview": {
        "required": [
          "queryString",
          "retailerId"
        ],
        "type": "object",
        "properties": {
          "queryString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "retailerId": {
            "type": "string",
            "description": "Retailer Id",
            "format": "long-id",
            "x-nullable": false
          },
          "sellers": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A list of seller names and/or seller Id's",
            "x-nullable": false
          },
          "brandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's",
            "x-nullable": false
          },
          "skuType": {
            "enum": [
              "brand",
              "seller",
              "all"
            ],
            "type": "string",
            "description": "Enum to set isSellerSku field",
            "default": "brand",
            "x-nullable": false
          },
          "productIdType": {
            "enum": [
              "skuKey",
              "gtin",
              "mpn",
              "model",
              "skuId",
              "parentId"
            ],
            "type": "string",
            "description": "Type of product Ids to search for(SkuKey, SkuId, Gtin, Mpn, Model, ParentId)",
            "default": "skuKey",
            "x-nullable": false
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "A list of product Id's, if not passed ignore and search by QueryString",
            "x-nullable": false
          }
        },
        "description": "A request for sku by sellers or brands.",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "SkuSearchRequestSlimPreview": {
        "required": [
          "searchString",
          "limitResultsToSkusWithBrandIds"
        ],
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "limitResultsToSkusWithBrandIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's to limit the search results to",
            "x-nullable": false
          }
        },
        "description": "A request for sku by search text and brand ids.",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "SkuSearchRequestSlimV2Preview": {
        "required": [
          "searchString"
        ],
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "description": "Query string to search for across SKU's properties (gtin, mpn, feed ID, Title, and Description)",
            "x-nullable": false
          },
          "brandId": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "long-id"
            },
            "description": "A list of brand Id's to limit the search results to",
            "x-nullable": false
          }
        },
        "description": "A request for sku by search text and brand ids.",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "Category": {
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "description": "The full category breadcrumb in the retailers catalog.",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Retailer Category.",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string",
            "description": "The name of the brand.",
            "x-nullable": false
          }
        },
        "description": "Brand of the product.",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "Category202204": {
        "required": [
          "text",
          "name",
          "parentId"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Category Text",
            "x-nullable": false
          },
          "name": {
            "type": "string",
            "description": "Category Name",
            "x-nullable": false
          },
          "parentId": {
            "type": "string",
            "description": "Category ParentId",
            "x-nullable": false
          }
        },
        "description": "List of retailer's categories, including the full hierarchy of categories and their parent category ID",
        "x-nullable": false
      },
      "SellerIdentifierV2": {
        "required": [
          "retailerId",
          "sellerId"
        ],
        "type": "object",
        "properties": {
          "retailerId": {
            "type": "string",
            "description": "The retailer Id that the seller operates under"
          },
          "sellerId": {
            "type": "string",
            "description": "The id for the seller based on the corresponding retailer"
          }
        },
        "description": "Identifies a Unique Seller",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "Creative2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreative2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "nullable": true,
        "x-used-in-response": true
      },
      "Creative2ListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfCreative2"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities.",
        "nullable": true,
        "x-used-in-response": true
      },
      "CreativeCreateModel2": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64",
            "nullable": true
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Create model of a creative",
        "x-used-in-request": true
      },
      "CreativeUpdateModel2": {
        "required": [
          "name",
          "retailerId",
          "templateId",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the creative"
          },
          "brandId": {
            "type": "integer",
            "description": "The brand associated to the creative",
            "format": "int64"
          },
          "retailerId": {
            "type": "integer",
            "description": "The retailer associated to the creative",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "The creative template used for this creative",
            "format": "int32"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          }
        },
        "additionalProperties": false,
        "description": "Update model of a creative",
        "x-used-in-request": true
      },
      "ResourceOfCreative2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/Creative2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A class that represents a domain entity exposed by an API.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TemplateVariableValue": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the template variable the value is applied to"
          },
          "textVariableValue": {
            "$ref": "#/components/schemas/TextVariableValue"
          },
          "choiceVariableValue": {
            "$ref": "#/components/schemas/ChoiceVariableValue"
          },
          "colorVariableValue": {
            "$ref": "#/components/schemas/ColorVariableValue"
          },
          "filesVariableValue": {
            "$ref": "#/components/schemas/FilesVariableValue"
          },
          "hyperlinkVariableValue": {
            "$ref": "#/components/schemas/HyperlinkVariableValue"
          },
          "videoVariableValue": {
            "$ref": "#/components/schemas/VideoVariableValue"
          }
        },
        "additionalProperties": false,
        "description": "A value for a variable in a creative template.",
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "Creative2": {
        "required": [
          "name",
          "status",
          "brandId",
          "retailerId",
          "templateId",
          "templateName",
          "formatId",
          "associatedLineItemIds",
          "updatedAt",
          "creativeFormatV2Type",
          "environments",
          "templateVariableValues"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name"
          },
          "status": {
            "enum": [
              "Ready",
              "InUse",
              "Archived",
              "Deleted"
            ],
            "type": "string",
            "description": "Creative Status",
            "format": "string"
          },
          "brandId": {
            "type": "integer",
            "description": "Brand Id",
            "format": "int64"
          },
          "retailerId": {
            "type": "integer",
            "description": "Retailer Id",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "Template Id",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "Template Name"
          },
          "formatId": {
            "type": "integer",
            "description": "Format Id",
            "format": "int32"
          },
          "associatedLineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Associated Line Item Ids"
          },
          "updatedAt": {
            "type": "string",
            "description": "Updated at time",
            "format": "date-time"
          },
          "creativeFormatV2Type": {
            "enum": [
              "Unknown",
              "FlagShip",
              "Showcase",
              "SponsoredProducts",
              "Butterfly",
              "BundleBoost",
              "IAB",
              "Custom",
              "DisplayPanel",
              "DigitalShelfTalker"
            ],
            "type": "string",
            "description": "Creative format type",
            "format": "string"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTypeEnvironment2"
            },
            "description": "Environment type (e.g. mobile, web, app)"
          },
          "templateVariableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateVariableValue"
            },
            "description": "The template chosen values"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A creative entity",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "TextVariableValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The displayed text",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template text variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ChoiceVariableValue": {
        "required": [
          "chosenOptions"
        ],
        "type": "object",
        "properties": {
          "chosenOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The chosen options"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template choice variable (among different accepted options)",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ColorVariableValue": {
        "type": "object",
        "properties": {
          "color": {
            "pattern": "^#(([0-9a-fA-F]{2}){3}|([0-9a-fA-F]){3})$",
            "type": "string",
            "description": "The displayed color (HEX format)",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template color variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "FilesVariableValue": {
        "required": [
          "assetIds"
        ],
        "type": "object",
        "properties": {
          "assetIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The assets representing the images to be displayed"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template file variable (one or several files), like images in a creative",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "HyperlinkVariableValue": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The url to redirect to",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A value of a template hyperlink variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "VideoVariableValue": {
        "required": [
          "url",
          "width",
          "height",
          "duration"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "The vast video url"
          },
          "width": {
            "type": "integer",
            "description": "The video's width",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "The video's height",
            "format": "int32"
          },
          "duration": {
            "minLength": 1,
            "type": "string",
            "description": "The video's duration"
          }
        },
        "additionalProperties": false,
        "description": "A value of a template video variable",
        "nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PageTypeEnvironment2": {
        "type": "object",
        "properties": {
          "pageType": {
            "enum": [
              "Unknown",
              "Search",
              "Home",
              "Browse",
              "Checkout",
              "Category",
              "ProductDetail",
              "Confirmation",
              "Merchandising",
              "Deals",
              "Favorites",
              "SearchBar",
              "CategoryMenu"
            ],
            "type": "string",
            "description": "Creative PageType",
            "format": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "environments": {
            "type": "array",
            "items": {
              "enum": [
                "Web",
                "Mobile",
                "App",
                "Lockout",
                "Mixed",
                "iOS",
                "Android"
              ],
              "type": "string",
              "description": "Creative format, defining where the creative can be served",
              "format": "string"
            },
            "description": "List of environments per PageType",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The PageType-Environment Tuples for creatives",
        "x-used-in-response": true
      },
      "AsyncReportResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StatusResponseResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "Async Report response format",
        "x-used-in-response": true
      },
      "ReportOutcome": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/ExportReportMetaData"
          },
          "data": {
            "$ref": "#/components/schemas/ReportDataResponseResource"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "Report response format",
        "x-used-in-response": true
      },
      "AsyncAccountsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncAccountsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncFillRateReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncFillRateReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AsyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "SyncAttributedTransactionsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "SyncCampaignsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncCampaignsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "SyncLineItemsReportRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SyncLineItemsReportResource"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single value",
        "x-used-in-request": true
      },
      "StatusResponseResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/StatusResponse"
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExportReportMetaData": {
        "type": "object",
        "properties": {
          "columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExportReportColumn"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "rows": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Metadata for an async report request: descriptions of the columns and number of rows returned",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ReportDataResponseResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "description": "Data response format",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "AsyncAccountsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncAccountsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncCampaignsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncFillRateReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncFillRateReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "AsyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AsyncLineItemsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "SyncAttributedTransactionsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncAttributedTransactionsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "SyncCampaignsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncCampaignsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "SyncLineItemsReportResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/SyncLineItemsReport"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single value",
        "x-used-in-request": true
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "pending",
              "success",
              "failure",
              "expired"
            ],
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "fileSizeBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "md5CheckSum": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "expiresAt": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Status of an async report request",
        "nullable": true,
        "x-criteo-canonical": {
          "infoType": "entity"
        },
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExportReportColumn": {
        "required": [
          "name",
          "role",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the exported column"
          },
          "title": {
            "type": "string",
            "description": "Title of the exported column",
            "nullable": true,
            "x-optional-in-response": true
          },
          "description": {
            "type": "string",
            "description": "Description of the exported column",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "enum": [
              "Boolean",
              "Number",
              "Money",
              "String",
              "Date",
              "DateTime",
              "Interval",
              "Duration"
            ],
            "type": "string",
            "description": "Type of the column"
          },
          "role": {
            "enum": [
              "Dimension",
              "Property",
              "Interval",
              "Metric"
            ],
            "type": "string",
            "description": "Role of the column"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the column",
            "nullable": true,
            "x-optional-in-response": true
          },
          "duration": {
            "type": "string",
            "description": "Duration of the column",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currency": {
            "type": "string",
            "description": "Currency of the column",
            "nullable": true,
            "x-optional-in-response": true
          },
          "deprecated": {
            "type": "boolean",
            "description": "Flag for deprecated column",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Description of a column from an async report request",
        "x-used-in-response": true
      },
      "AsyncAccountsReport": {
        "required": [
          "accountIds",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account Ids to report on"
          },
          "aggregationLevel": {
            "enum": [
              "campaign",
              "lineItem"
            ],
            "type": "string",
            "description": "Level of aggregation, if no dimensions/metrics are provided, falls back to campaign aggregationLevel",
            "default": "campaign"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Accounts report body request",
        "x-used-in-request": true
      },
      "AsyncCampaignsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to report on"
          },
          "id": {
            "type": "string",
            "description": "Campaign id to report on"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Campaigns report body request",
        "x-used-in-request": true
      },
      "AsyncFillRateReport": {
        "required": [
          "dimensions",
          "endDate",
          "metrics",
          "startDate",
          "supplyAccountIds"
        ],
        "type": "object",
        "properties": {
          "supplyAccountIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Supply account ids to report on"
          },
          "dimensions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "date",
                "retailerId",
                "retailerName",
                "placementId",
                "placementName",
                "pageTypeName",
                "environment",
                "servedCategory",
                "retailerCategoryId",
                "retailerCategoryName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "minItems": 1,
            "type": "array",
            "items": {
              "enum": [
                "pageViews",
                "availablePlacements",
                "unfilledPlacements",
                "fillRate",
                "placementImpressions",
                "productImpressions",
                "impressions",
                "placementClicks",
                "productClicks",
                "clicks",
                "placementImpressionsCTR",
                "productImpressionsCTR",
                "cpm",
                "cpc",
                "placementImpressionsRevenue",
                "productClicksRevenue",
                "revenue",
                "workingMedia",
                "netRevenue",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async FillRate report body request",
        "x-used-in-request": true
      },
      "AsyncLineItemsReport": {
        "required": [
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to report on"
          },
          "id": {
            "type": "string",
            "description": "Line Item id to report on"
          },
          "searchTermTypes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "searched",
                "entered"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term type: unknown, searched, entered"
          },
          "searchTermTargetings": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "automatic",
                "manual"
              ],
              "type": "string"
            },
            "description": "Filter on the type of search term targeting: unknown, automatic, manual"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "format": {
            "enum": [
              "json",
              "json-compact",
              "json-newline",
              "csv"
            ],
            "type": "string",
            "description": "Format of the output",
            "default": "json-compact"
          },
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "keyword",
              "productCategory",
              "product",
              "attributedTransactions",
              "environment",
              "servedCategory",
              "capout"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb",
                "keyword",
                "searchTerm",
                "searchTermType",
                "searchTermTargeting",
                "creativeId",
                "creativeName",
                "creativeTypeId",
                "creativeTypeName",
                "creativeTemplateId",
                "creativeTemplateName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "videoViews",
                "videosStarted",
                "videosPlayedTo25",
                "videosPlayedTo50",
                "videosPlayedTo75",
                "videosPlayedTo100",
                "videoPlayingRate",
                "videoCompletionRate",
                "videoImpressions",
                "videoMuted",
                "videoUnmuted",
                "videoPaused",
                "videoResumed",
                "videoAvgInteractionRate",
                "videoViewability",
                "videoStartingRate",
                "videoCPC",
                "videoCPCV",
                "newToBrandAttributedSales",
                "newToBrandAttributedSalesRate",
                "newToBrandAttributedUnits",
                "newToBrandAttributedUnitsRate",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Async Line Items report body request",
        "x-used-in-request": true
      },
      "SyncAttributedTransactionsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line item ids to filter"
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "purchasedDate",
                "purchasedHour",
                "advDate",
                "advHour",
                "daysDifference",
                "campaignId",
                "campaignName",
                "lineItemId",
                "lineItemName",
                "advProductId",
                "advProductGtin",
                "advProductMpn",
                "advProductName",
                "advProductCategory",
                "purchasedProductId",
                "purchasedProductGtin",
                "purchasedProductMpn",
                "purchasedProductName",
                "purchasedProductCategory",
                "advEngagement",
                "advToPurchasedProductRelationship",
                "salesChannel",
                "retailerName",
                "pageTypeName",
                "keyword",
                "attributionWindow",
                "saleSellerId",
                "saleSellerName",
                "activitySellerId",
                "activitySellerName"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "attributedUnits",
                "attributedSales"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Attributed Transactions report body request",
        "x-used-in-request": true
      },
      "SyncCampaignsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Campaigns report body request",
        "x-used-in-request": true
      },
      "SyncLineItemsReport": {
        "required": [
          "accountId",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "reportType": {
            "enum": [
              "summary",
              "pageType",
              "productCategory",
              "product",
              "environment",
              "servedCategory"
            ],
            "type": "string",
            "description": "Type of report, if no dimensions/metrics are provided, falls back to summary reportType",
            "default": "summary"
          },
          "lineItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Line Item ids to filter"
          },
          "campaignIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter"
          },
          "accountId": {
            "type": "string",
            "description": "Account id to report on"
          },
          "clickAttributionWindow": {
            "enum": [
              "none",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "Click attribution window",
            "default": "none"
          },
          "viewAttributionWindow": {
            "enum": [
              "none",
              "1D",
              "7D",
              "14D",
              "30D"
            ],
            "type": "string",
            "description": "View attribution window",
            "default": "none"
          },
          "campaignType": {
            "enum": [
              "all",
              "sponsoredProducts",
              "onSiteDisplays"
            ],
            "type": "string",
            "description": "Filter the type of campaigns to report on: sponsoredProducts or onSiteDisplays",
            "default": "all"
          },
          "salesChannel": {
            "enum": [
              "all",
              "offline",
              "online"
            ],
            "type": "string",
            "description": "Filter on specific sales channel: offline or online",
            "default": "all"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "enum": [
                "date",
                "hour",
                "accountId",
                "accountName",
                "campaignId",
                "campaignName",
                "campaignTypeName",
                "lineItemId",
                "lineItemName",
                "retailerId",
                "retailerName",
                "brandId",
                "brandName",
                "advProductCategory",
                "advProductId",
                "advProductName",
                "salesChannel",
                "environment",
                "pageTypeName",
                "pageCategory",
                "servedCategory",
                "taxonomyBreadcrumb"
              ],
              "type": "string"
            },
            "description": "List of dimensions to report on"
          },
          "metrics": {
            "type": "array",
            "items": {
              "enum": [
                "impressions",
                "clicks",
                "spend",
                "attributedSales",
                "attributedUnits",
                "attributedOrders",
                "assistedSales",
                "assistedUnits",
                "ctr",
                "cpc",
                "cpo",
                "cpm",
                "roas",
                "uniqueVisitors",
                "frequency"
              ],
              "type": "string"
            },
            "description": "List of metrics to report on"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "timezone": {
            "type": "string",
            "description": "Time zone : see criteo developer portal for supported time zones",
            "default": "UTC"
          }
        },
        "description": "Line Items report body request",
        "x-used-in-request": true
      },
      "ValueResourceCollectionOutcomeOfSellerSearchResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResourceOfSellerSearchResult"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several value objects.",
        "x-used-in-response": true
      },
      "Outcome": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "The outcome of an API call.",
        "x-used-in-response": true
      },
      "PageOfBalanceHistoryChangeDataCaptureV1": {
        "required": [
          "data",
          "meta"
        ],
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceHistoryChangeDataCaptureV1"
            }
          }
        },
        "additionalProperties": false,
        "description": "A wrapper class to return a single page of items with metadata for offset and limit based paging.",
        "x-used-in-response": true
      },
      "ValueResourceOutcomeOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfRecommendedKeywordsResult"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "x-used-in-response": true
      },
      "ValueResourceInputOfSellerSearch": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceOfSellerSearch"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "ValueResourceOfSellerSearchResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SellerSearchResult"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-response": true
      },
      "BalanceHistoryChangeDataCaptureV1": {
        "required": [
          "changeDetails",
          "changeType",
          "dateOfModification",
          "modifiedByUser"
        ],
        "type": "object",
        "properties": {
          "dateOfModification": {
            "type": "string",
            "description": "Date when data change has occured.",
            "format": "date-time"
          },
          "modifiedByUser": {
            "type": "string",
            "description": "Username who modified the insertion order."
          },
          "changeType": {
            "enum": [
              "BalanceCreated",
              "BalanceAdded",
              "BalanceRemoved",
              "BalanceUncapped",
              "BalanceCapped",
              "EndDate",
              "StartDate",
              "BalanceName",
              "PoNumber",
              "ValueAdd",
              "Unknown"
            ],
            "type": "string",
            "description": "Represent the type of change states of the history."
          },
          "changeDetails": {
            "$ref": "#/components/schemas/ChangeDetailsV1"
          },
          "memo": {
            "type": "string",
            "description": "Memo associate with the insertion order modification.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Data model represents the data change capture of balance history.",
        "x-used-in-response": true
      },
      "ValueResourceOfRecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RecommendedKeywordsResult"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single value.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourceOfSellerSearch": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/SellerSearch"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "SellerSearchResult": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "the id for the account",
            "nullable": true,
            "x-optional-in-response": true
          },
          "sellers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RetailMediaSeller"
            },
            "description": "the details for mapped sellers for the account",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "holds an AccountId and the mapped seller information for that account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ChangeDetailsV1": {
        "type": "object",
        "properties": {
          "previousValue": {
            "type": "string",
            "description": "Previous value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "currentValue": {
            "type": "string",
            "description": "Current value of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "changeValue": {
            "type": "string",
            "description": "Change detail of a property of the insertion order.",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Change details of a property of the balance.",
        "x-used-in-response": true
      },
      "RecommendedKeywordsResult": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Keywords"
            },
            "description": "Dictionary of keywords to their keyword models",
            "nullable": true,
            "x-optional-in-response": true
          },
          "recommendedKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Collection of recommended keywords",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "Response model for recommended keywords",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "SellerSearch": {
        "required": [
          "accountIds"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "maxItems": 25,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of accounts to return seller information for. max length of 25"
          },
          "includeDetails": {
            "type": "boolean",
            "description": "whether to include additional fields beyond the sellerId and retailerId in the response.\r\nMay improve performance when set to false.",
            "default": false
          }
        },
        "additionalProperties": false,
        "description": "request body for the seller search endpoint",
        "x-used-in-request": true
      },
      "RetailMediaSeller": {
        "type": "object",
        "properties": {
          "sellerId": {
            "type": "string",
            "description": "the seller id",
            "nullable": true,
            "x-optional-in-response": true
          },
          "retailerId": {
            "type": "integer",
            "description": "the retailer id",
            "format": "int32",
            "nullable": true,
            "x-optional-in-response": true
          },
          "name": {
            "type": "string",
            "description": "seller name",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "used to define the exact seller linked with an account",
        "x-used-in-response": true
      },
      "Keywords": {
        "type": "object",
        "properties": {
          "reviewState": {
            "enum": [
              "InReview",
              "Recommended",
              "Approved",
              "AutoApproved",
              "Rejected",
              "AutoRejected",
              "Unkown"
            ],
            "type": "string",
            "description": "Review status of the keyword"
          },
          "matchType": {
            "enum": [
              "PositiveExactMatch",
              "NegativeExactMatch",
              "NegativeBroadMatch",
              "Unknown"
            ],
            "type": "string",
            "description": "The matching algorthim to be use when comparing this keyword with the shopper search phrase"
          },
          "bid": {
            "type": "number",
            "description": "The bid to use when a positive keyword matches the shopper search phrase",
            "format": "double",
            "nullable": true
          },
          "inputKeywords": {
            "$ref": "#/components/schemas/InputKeywords"
          },
          "createdAt": {
            "type": "string",
            "description": "The time at which this keyword was created in UTC",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "The time at which the keyword was last modified in UTC",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Data associated with a normalized keyword phrase"
      },
      "InputKeywords": {
        "type": "object",
        "properties": {
          "negativeBroad": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative broad phrased",
            "nullable": true
          },
          "negativeExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied negative exact phrase",
            "nullable": true
          },
          "positiveExact": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The collection of supplied positive exact phrases",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Keywords submitted by the user binned by type after some cleanup has been performed"
      },
      "EntityResourceOutcomePartnerBillingReportStatusV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EntityResourcePartnerBillingReportStatusV1"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for a single entity.",
        "x-used-in-response": true
      },
      "ValueResourceInputPartnerBillingReportRequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourcePartnerBillingReportRequestV1"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "EntityResourcePartnerBillingReportStatusV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PartnerBillingReportStatusV1"
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ValueResourcePartnerBillingReportRequestV1": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PartnerBillingReportRequestV1"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "PartnerBillingReportStatusV1": {
        "required": [
          "createdAt",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Pending",
              "Success",
              "Failed",
              "Expired"
            ],
            "type": "string",
            "description": "Status of the report."
          },
          "errorMessage": {
            "type": "string",
            "description": "Possible error message along with the status.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date when the report request is created.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Status info of a Partner Billing Report.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "PartnerBillingReportRequestV1": {
        "required": [
          "endDate",
          "format",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "accountIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "On which accounts the report is created.",
            "nullable": true
          },
          "retailerIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "On which retailers the report is created.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report (ISO 8601 format, e.g. YYYY-MM-DD).",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report (ISO 8601 format, e.g. YYYY-MM-DD).",
            "format": "date"
          },
          "format": {
            "enum": [
              "json",
              "csv"
            ],
            "type": "string",
            "description": "Format type of the report."
          }
        },
        "additionalProperties": false,
        "description": "The request object of a Partner Billing Report.",
        "x-used-in-request": true
      },
      "PagedResourceCollectionOutcomeOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-used-in-response": true
      },
      "BalanceResponseV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfBalanceResponseV2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true
      },
      "PreferredLineItemV2PagedListResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PageMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a paged list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "PreferredLineItemV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemV2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "JsonApiSingleResponseOfLineItemBidMultipliersV2": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersV2AndLineItemBidMultipliersV2"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonError"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonWarning"
            },
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A JSON:API wrapper class to add one JSON:API <typeparamref name=\"T\" /> within a data property",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "LineItemBidMultipliersV2Response": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliersV2"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "description": "A top-level object that encapsulates a Criteo API response for a single entity",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true
      },
      "ProductButtonListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonResponse"
            },
            "x-nullable": false
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "readOnly": true,
            "x-nullable": false
          }
        },
        "description": "Data model for a list of response resources",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CreateBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfCreateBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "UpdateBalanceModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfUpdateBalanceModelV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "ChangeDatesOfBalanceV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfChangeDatesOfBalanceV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "x-used-in-request": true
      },
      "PreferredLineItemCreateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InputResourceOfPreferredLineItemCreateModelV2"
          }
        },
        "description": "Data model for a create input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "LineItemBidMultipliersV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfLineItemBidMultipliersV2"
          }
        },
        "description": "A top-level object that encapsulates a Criteo API request for a single entity",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true
      },
      "ProductButtonListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
            },
            "x-nullable": false
          }
        },
        "description": "Data model for a list of input resources",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ProductButtonRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfProductButtonRequest"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "PreferredLineItemUpdateModelV2Request": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ResourceOfPreferredLineItemUpdateModelV2"
          }
        },
        "description": "Data model for an input resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "PageMetadata": {
        "required": [
          "currentPageSize",
          "currentPageIndex"
        ],
        "type": "object",
        "properties": {
          "totalItemsAcrossAllPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "currentPageSize": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "currentPageIndex": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          },
          "totalPages": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true,
            "x-nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Metadata related to the current request",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfBalanceResponseV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/BalanceResponseV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ResourceOfPreferredLineItemV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemV2"
          }
        },
        "description": "Data model for a Resource",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true
      },
      "JsonApiBodyWithIdOfInt64AndLineItemBidMultipliersV2AndLineItemBidMultipliersV2": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalLineItemBidMultipliersV2"
          }
        },
        "description": "A JSON:API wrapper class to format a <typeparamref name=\"TAttributes\" /> with external Id, Type, and\r\nAttributes properties",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CommonError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "x-nullable": false
          }
        },
        "description": "A JSON:API Common error structure",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CommonWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "x-nullable": false
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error.",
            "x-nullable": false
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kabab-case.",
            "x-nullable": false
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem.",
            "x-nullable": false
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type.",
            "x-nullable": false
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem.",
            "x-nullable": false
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "x-nullable": false
            },
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "x-nullable": false
          },
          "stackTrace": {
            "type": "string",
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "x-nullable": false
          }
        },
        "description": "A JSON:API Base common warning",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfLineItemBidMultipliersV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalLineItemBidMultipliersV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-request": true,
        "x-used-in-response": true
      },
      "ResourceOfProductButtonResponse": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalProductButtonResponse"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "x-optional-in-response": true
          }
        },
        "description": "Data model for an output resource",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ResourceOfCreateBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/CreateBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfUpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/UpdateBalanceModelV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "ResourceOfChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ChangeDatesOfBalanceV2"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "A class that represents a domain entity exposed by an API",
        "x-used-in-request": true
      },
      "InputResourceOfPreferredLineItemCreateModelV2": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "x-nullable": false
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemCreateModelV2"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfProductButtonRequest": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ExternalProductButtonRequest"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ResourceOfPreferredLineItemUpdateModelV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity"
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/ExternalPreferredLineItemUpdateModelV2"
          }
        },
        "description": "Data model for a Resource",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "BalanceResponseV2": {
        "required": [
          "name",
          "startDate",
          "balanceType",
          "spendType",
          "privateMarketBillingType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "x-nullable": false
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true,
            "x-nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true,
            "x-nullable": true
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "spent": {
            "type": "number",
            "description": "Amount of spent funds of the balance.",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "remaining": {
            "type": "number",
            "description": "Amount of remaining funds of the balance.",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "x-nullable": false
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true,
            "x-nullable": true
          },
          "status": {
            "enum": [
              "unknown",
              "scheduled",
              "active",
              "ended"
            ],
            "type": "string",
            "description": "Status of the balance.",
            "x-nullable": false
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time of the balance.",
            "format": "date-time",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "description": "Update time of the balance.",
            "format": "date-time",
            "x-nullable": false
          },
          "balanceType": {
            "enum": [
              "unknown",
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Type of the balance.",
            "x-nullable": false
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Spend Type of the balance.",
            "x-nullable": false
          },
          "privateMarketBillingType": {
            "enum": [
              "notApplicable",
              "billByRetailer",
              "billByCriteo",
              "unknown"
            ],
            "type": "string",
            "description": "Billing type for Private Market of the balance.",
            "x-nullable": false
          }
        },
        "description": "A Retail Media Balance used to determine the funds available for any or all campaigns in an account",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "ExternalPreferredLineItemV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status",
          "targetRetailerId",
          "campaignId",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum",
            "x-nullable": false
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "nullable": true,
            "x-nullable": true
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "budget": {
            "type": "number",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "campaignId": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "budgetSpent": {
            "type": "number",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "budgetRemaining": {
            "type": "number",
            "format": "decimal",
            "nullable": true,
            "x-nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "x-nullable": false
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "x-nullable": false
          },
          "creativeId": {
            "type": "string",
            "description": "External creative Id",
            "format": "long-id",
            "nullable": true,
            "x-nullable": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "A Retail Media Preferred Line Item used to hold bid settings for one or many promoted products on a single retailer",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "ExternalLineItemBidMultipliersV2": {
        "type": "object",
        "properties": {
          "search": {
            "type": "number",
            "description": "Search Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "home": {
            "type": "number",
            "description": "Home Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "category": {
            "type": "number",
            "description": "Categories Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "productDetail": {
            "type": "number",
            "description": "ProductDetail Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "confirmation": {
            "type": "number",
            "description": "Confirmation Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "merchandising": {
            "type": "number",
            "description": "Merchandising Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "deals": {
            "type": "number",
            "description": "Deals Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "checkout": {
            "type": "number",
            "description": "Checkout Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "favorites": {
            "type": "number",
            "description": "Favorites Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "searchBar": {
            "type": "number",
            "description": "SearchBar Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "categoryMenu": {
            "type": "number",
            "description": "CategoryMenu Page Type Bid Multiplier",
            "format": "decimal",
            "nullable": true,
            "x-optional-in-response": true
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "The Bid Multiplier Entity of a LineItem",
        "nullable": true,
        "x-nullable": true,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalProductButtonResponse": {
        "required": [
          "name",
          "backgroundImage",
          "rank",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Product Button",
            "x-nullable": false
          },
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image",
            "x-nullable": false
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the Product Button",
            "format": "int32",
            "x-nullable": false
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32",
            "x-nullable": false
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "List of skus on the Product Button",
            "x-nullable": false
          }
        },
        "description": "The Product Button entity used for output",
        "x-nullable": false,
        "x-used-in-response": true
      },
      "CreateBalanceV2": {
        "required": [
          "name",
          "startDate",
          "spendType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "x-nullable": false
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true,
            "x-nullable": true
          },
          "deposited": {
            "type": "number",
            "description": "Amount of billable funds allotted to the balance.",
            "format": "decimal"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "x-nullable": false
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "format": "date",
            "nullable": true,
            "x-nullable": true
          },
          "spendType": {
            "enum": [
              "Onsite",
              "Offsite",
              "OffsiteAwareness"
            ],
            "type": "string",
            "description": "Type of the balance spend.",
            "x-nullable": false
          },
          "memo": {
            "type": "string",
            "description": "Memo",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "An object that represents the available options to set when creating a Retail Media Balance",
        "x-used-in-request": true
      },
      "UpdateBalanceModelV2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the balance.",
            "nullable": true,
            "x-nullable": true
          },
          "poNumber": {
            "type": "string",
            "description": "Purchase Order number.",
            "nullable": true,
            "x-nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true,
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true,
            "x-nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "An object that represents the available options to set when updating a Retail Media Balance.",
        "x-used-in-request": true
      },
      "ChangeDatesOfBalanceV2": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "Start date of the balance in the format YYYY-MM-DD.",
            "nullable": true,
            "x-nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "End date of the balance in the format YYYY-MM-DD.",
            "nullable": true,
            "x-nullable": true
          },
          "memo": {
            "type": "string",
            "description": "Memo.",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "An object that represents the available options to modify schedule of a balance.",
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemCreateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "pacing",
          "page",
          "targetRetailerId",
          "budget"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum",
            "x-nullable": false
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "description": "Line Item Pacing Enum",
            "x-nullable": false
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "targetRetailerId": {
            "type": "string",
            "format": "long-id",
            "x-nullable": false
          },
          "budget": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Model used to create a preferred line item",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ExternalProductButtonRequest": {
        "required": [
          "name",
          "backgroundImage",
          "isMandatory",
          "skus"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Product Button",
            "x-nullable": false
          },
          "backgroundImage": {
            "type": "string",
            "description": "URL of the background image",
            "x-nullable": false
          },
          "isMandatory": {
            "type": "integer",
            "description": "If the Product Button is Mandatory",
            "format": "int32",
            "x-nullable": false
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "description": "List of skus on the Product Button",
            "x-nullable": false
          }
        },
        "description": "The Product Button entity used for input",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ExternalPreferredLineItemUpdateModelV2": {
        "required": [
          "name",
          "startDate",
          "endDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "x-nullable": false
          },
          "startDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "description": "Represents the Date as a year, month, and day in the format YYYY-MM-DD",
            "format": "date"
          },
          "status": {
            "enum": [
              "unknown",
              "active",
              "scheduled",
              "draft",
              "paused",
              "budgetHit",
              "ended",
              "archived",
              "noFunds"
            ],
            "type": "string",
            "description": "Line Item Status Enum",
            "x-nullable": false
          },
          "pacing": {
            "enum": [
              "unknown",
              "standard",
              "accelerated"
            ],
            "type": "string",
            "default": "accelerated",
            "x-nullable": false
          },
          "capping": {
            "$ref": "#/components/schemas/ExternalLineItemCappingV2"
          },
          "page": {
            "$ref": "#/components/schemas/ExternalLineItemPageV2"
          },
          "budget": {
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          "creativeId": {
            "type": "string",
            "format": "long-id",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "Model used to update a preferred line item",
        "x-nullable": false,
        "x-used-in-request": true
      },
      "ExternalLineItemCappingV2": {
        "required": [
          "type",
          "count"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "unknown",
              "day",
              "session"
            ],
            "type": "string",
            "description": "Line Item Capping Type Enum",
            "x-nullable": false
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "x-nullable": false
          }
        },
        "description": "Frequency Capping for a Preferred Line Item",
        "x-nullable": false,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPageV2": {
        "required": [
          "pageType"
        ],
        "type": "object",
        "properties": {
          "pageType": {
            "enum": [
              "unknown",
              "search",
              "home",
              "browse",
              "checkout",
              "category",
              "productDetail",
              "confirmation",
              "merchandising",
              "deals",
              "favorites",
              "searchBar",
              "categoryMenu"
            ],
            "type": "string",
            "description": "Page Type Enum",
            "x-nullable": false
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalLineItemPageCategoryV2"
            },
            "nullable": true,
            "x-nullable": true
          },
          "searchKeywords": {
            "type": "array",
            "items": {
              "type": "string",
              "x-nullable": false
            },
            "x-nullable": false
          }
        },
        "description": "Page information for a preferred line item",
        "x-nullable": false,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "ExternalLineItemPageCategoryV2": {
        "required": [
          "categoryId"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "x-nullable": false
          },
          "includeChildren": {
            "type": "boolean",
            "default": true,
            "x-nullable": false
          }
        },
        "description": "Category information for a preferred line item page",
        "x-nullable": false,
        "x-used-in-response": true,
        "x-used-in-request": true
      },
      "EntityResourceCollectionOutcomeBrandIdSearchResultPagingOffsetLimitMetadata": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/PagingOffsetLimitMetadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityResourceBrandIdSearchResult"
            },
            "nullable": true,
            "x-optional-in-response": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Warnings that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SdkApiRestCommonProblem"
            },
            "description": "Errors that occured during this call.",
            "nullable": true,
            "readOnly": true,
            "x-optional-in-response": true
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API response for several entities and metadata.",
        "x-used-in-response": true
      },
      "ValueResourceInputBrandIdSearchRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValueResourceBrandIdSearchRequest"
          }
        },
        "additionalProperties": false,
        "description": "A top-level object that encapsulates a Criteo API request for a single value objects.",
        "x-used-in-request": true
      },
      "PagingOffsetLimitMetadata": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "x-optional-in-response": true
          },
          "offset": {
            "type": "integer",
            "description": "The (zero-based) starting offset in the collection.",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "The number of elements to be returned.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Metadata for paging data.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "EntityResourceBrandIdSearchResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of the entity.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true,
            "x-optional-in-response": true
          },
          "attributes": {
            "$ref": "#/components/schemas/BrandIdSearchResult"
          }
        },
        "additionalProperties": false,
        "description": "A domain entity exposed by the API, identified by a unique id.",
        "x-used-in-response": true
      },
      "ValueResourceBrandIdSearchRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/BrandIdSearchRequest"
          }
        },
        "additionalProperties": false,
        "description": "A value resource exposed by the API.",
        "x-used-in-request": true
      },
      "BrandIdSearchResult": {
        "required": [
          "brandType",
          "id",
          "name",
          "retailerIds"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The brand id"
          },
          "name": {
            "type": "string",
            "description": "The name of the brand"
          },
          "brandType": {
            "type": "string",
            "description": "The type of the brand"
          },
          "retailerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The retailer ids associated to the brand"
          }
        },
        "additionalProperties": false,
        "description": "An object that represents the result from a brand ID search.",
        "nullable": true,
        "x-used-in-response": true,
        "x-optional-in-response": true
      },
      "BrandIdSearchRequest": {
        "required": [
          "retailerIds"
        ],
        "type": "object",
        "properties": {
          "retailerIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "IDs of the retailers we want to limit the search to"
          },
          "name": {
            "type": "string",
            "description": "The name of the brand(s) to be searched",
            "nullable": true
          },
          "brandType": {
            "enum": [
              "uc",
              "retailer",
              "all"
            ],
            "type": "string",
            "description": "The type of brand, primarily where this brand belongs: UC, Retailer or All (both)"
          }
        },
        "additionalProperties": false,
        "description": "An object that represents the request of BrandIdSearch endpoint.",
        "x-used-in-request": true
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}