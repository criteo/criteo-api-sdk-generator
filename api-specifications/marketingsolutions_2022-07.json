{
    "openapi": "3.0.1",
    "info": {
        "title": "Criteo API",
        "description": "Criteo publicly exposed API",
        "version": "2022-07"
    },
    "servers": [
        {
            "url": "https://api.criteo.com"
        }
    ],
    "paths": {
        "/2022-07/audiences": {
            "get": {
                "tags": [
                    "Audience"
                ],
                "description": "Get a list of all the audiences for the user or for the given advertiser_id",
                "operationId": "getAudiences",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "query",
                        "description": "The advertiser id to get all the audiences for.\nMandatory for internal users. For external users,\n           if you don't provide it, we will take into account the advertisers from your portfolio",
                        "schema": {
                            "type": "string",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list was retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAudiencesResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "AudienceContactlist",
                                            "id": "1",
                                            "attributes": {
                                                "advertiserId": "18",
                                                "name": "Audience name",
                                                "description": "Audience",
                                                "created": "2018-12-10T10:00:50.0000000+00:00",
                                                "updated": "2018-12-10T10:17:15.0000000+00:00",
                                                "nbLines": 100,
                                                "nbLinesEmail": 10,
                                                "nbMatchesEmail": 10
                                            }
                                        }
                                    ],
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Audience"
                ],
                "description": "Create an Audience for an Advertiser",
                "operationId": "createAudience",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewAudienceRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "The audience was created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "id": "1",
                                        "type": "Audience"
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/audiences/{audience-id}/contactlist": {
            "delete": {
                "tags": [
                    "Audience"
                ],
                "description": "delete all identifiers from an Audience",
                "operationId": "deleteIdentifiers",
                "responses": {
                    "200": {
                        "description": "The contactlist was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAudienceContactListResponse"
                                },
                                "example": {
                                    "data": {
                                        "id": "1",
                                        "type": "AudienceContactlist"
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Add/remove users to or from an audience",
                "operationId": "modifyAudienceUsers",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactlistAmendmentRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "Summary of created request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ModifyAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "type": "ContactlistAmendment",
                                        "attributes": {
                                            "contactListId": "12",
                                            "operation": "add",
                                            "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                                            "identifierType": "madid",
                                            "nbValidIdentifiers": 7343,
                                            "nbInvalidIdentifiers": 13,
                                            "sampleInvalidIdentifiers": [
                                                "InvalidIdentifier"
                                            ]
                                        }
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Audience 123 not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "audience-id",
                    "in": "path",
                    "description": "The id of the audience to amend",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "int32"
                    }
                }
            ]
        },
        "/2022-07/audiences/{audience-id}": {
            "delete": {
                "tags": [
                    "Audience"
                ],
                "description": "Delete an audience by id",
                "operationId": "removeAudience",
                "responses": {
                    "200": {
                        "description": "The audience was deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "id": "1",
                                        "type": "Audience"
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Audience"
                ],
                "description": "Update user audience specified by the audience id",
                "operationId": "modifyAudience",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplaceAudienceRequest"
                            }
                        }
                    },
                    "required": true,
                    "x-bodyName": "body"
                },
                "responses": {
                    "200": {
                        "description": "The audience was updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReplaceAudienceResponse"
                                },
                                "example": {
                                    "data": {
                                        "id": "1",
                                        "type": "AudienceContactlist",
                                        "attributes": {
                                            "name": "example audience",
                                            "description": "example audience description"
                                        }
                                    },
                                    "errors": [],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorCodeResponse"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "validation",
                                            "code": "audience-invalid",
                                            "instance": "/audience/314159",
                                            "title": "Audience is invalid",
                                            "detail": "Audience is not found, please choose a valid audience"
                                        }
                                    ],
                                    "warnings": [
                                        {
                                            "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                                            "type": "deprecation",
                                            "code": "deprecated-field",
                                            "instance": "/audiences/314195",
                                            "title": "'nbValidIds' is deprecated",
                                            "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "audience-id",
                    "in": "path",
                    "description": "The id of the audience to amend",
                    "required": true,
                    "schema": {
                        "type": "string",
                        "format": "int32"
                    }
                }
            ]
        },
        "/me": {
            "get": {
                "tags": [
                    "Gateway"
                ],
                "description": "Get information about the currently logged application",
                "operationId": "GetCurrentApplication",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/{adSetId}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the data for the specified ad set",
                "operationId": "GetAdSet",
                "parameters": [
                    {
                        "name": "adSetId",
                        "in": "path",
                        "description": "Id of the ad set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data for the ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseReadAdSet"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/search": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Search for ad sets",
                "operationId": "SearchAdSets",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestAdSetSearch"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "data for the ad sets",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesReadAdSet"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets": {
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch a list of AdSets.",
                "operationId": "PatchAdSets",
                "requestBody": {
                    "description": "List of adsets to patch.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsPatchAdSet"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of patched adSets.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseAdSetId"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/start": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Start the specified list of ad sets",
                "operationId": "StartAdSets",
                "requestBody": {
                    "description": "All the ad sets to start",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of ad sets that have been started and errors / warnings by ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/stop": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Stop the specified list of ad sets",
                "operationId": "StopAdSets",
                "requestBody": {
                    "description": "All the ad sets to stop",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestsAdSetId"
                            }
                        }
                    },
                    "x-bodyName": "adSets"
                },
                "responses": {
                    "200": {
                        "description": "List of ad sets that have been stopped and errors / warnings by ad set",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsesAdSetId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/campaigns/{campaign-id}": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the data for the specified campaign",
                "operationId": "GetCampaign",
                "parameters": [
                    {
                        "name": "campaign-id",
                        "in": "path",
                        "description": "Id of the campaign",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "data for the campaign",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/campaigns/search": {
            "post": {
                "tags": [
                    "Campaign"
                ],
                "description": "Search for campaigns",
                "operationId": "SearchCampaigns",
                "requestBody": {
                    "description": "filters on campaigns",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CampaignSearchRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "data for the campaigns",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CampaignListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/campaigns": {
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch a list of Campaigns.",
                "operationId": "PatchCampaigns",
                "requestBody": {
                    "description": "List of campaigns to patch.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCampaignListRequest"
                            }
                        }
                    },
                    "x-bodyName": "request"
                },
                "responses": {
                    "200": {
                        "description": "List of patched campaigns.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/{ad-set-id}/display-multipliers": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Display Multipliers for all valid Categories associated to an Ad Set",
                "operationId": "GetDisplayMultipliers",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Display Multipliers for all valid Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch Display Multipliers for one or more Categories in a single request. Partial success policy is followed.",
                "operationId": "PatchDisplayMultipliers",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
                            }
                        }
                    },
                    "x-bodyName": "displayMultipliersToUpdate"
                },
                "responses": {
                    "200": {
                        "description": "List of updated Display Multipliers for given Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/2022-07/marketing-solutions/ad-sets/{ad-set-id}/category-bids": {
            "get": {
                "tags": [
                    "Campaign"
                ],
                "description": "Get the Category Bids for all valid Categories associated to an Ad Set",
                "operationId": "GetCategoryBidList",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Category Bids for all valid Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Campaign"
                ],
                "description": "Patch Category Bids for one or more Categories in a single request. Partial success policy is followed.",
                "operationId": "PatchCategoryBidList",
                "parameters": [
                    {
                        "name": "ad-set-id",
                        "in": "path",
                        "description": "Id of the Ad Set",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
                            }
                        }
                    },
                    "x-bodyName": "categoryBidsToUpdate"
                },
                "responses": {
                    "200": {
                        "description": "List of updated Category Bids for given Categories associated to an Ad Set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "401": {
                        "description": "The API client is not properly authenticated.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    },
                    "403": {
                        "description": "The API client is not authorized to access this resource or the resource does not exist.",
                        "content": {
                            "text/plain": {},
                            "application/json": {},
                            "text/json": {}
                        }
                    }
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Creates a token based either on supplied client credentials or on single use authorization code",
                "description": "Creates a token when the supplied client credentials are valid",
                "operationId": "GetToken",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "grant_type",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "type": "string"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "redirect_uri": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    },
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessTokenModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthErrorModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/statistics/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
                "operationId": "GetAdsetReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
                            }
                        }
                    },
                    "x-bodyName": "reportQuery"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/transactions/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Transactions endpoint provides transactions id related data.",
                "operationId": "GetTransactionsReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/log-level/advertisers/{advertiser-id}/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "This Statistics endpoint provides publisher data.",
                "operationId": "GetTransparencyReport",
                "parameters": [
                    {
                        "name": "advertiser-id",
                        "in": "path",
                        "description": "The advertiser id to fetch the transparency data.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransparencyQueryMessage"
                            }
                        }
                    },
                    "x-bodyName": "queryMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "TransparencyReport",
                                            "attributes": {
                                                "advertiserId": "123",
                                                "tokenValidUntil": "2021-01-31T00:00:00.0000000+00:00",
                                                "files": [
                                                    {
                                                        "fileName": "report.csv",
                                                        "url": "https://www.example.com/transparency"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransparencyReportDataMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/placements/report": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "description": "Your ads are placed in different domains (publishers) and environments (websites and apps). Thanks to the placements endpoint, you can analyse the performances for each publisher, comparing displays, clicks and sales generated.",
                "operationId": "GetPlacementsReport",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
                            }
                        }
                    },
                    "x-bodyName": "dataMessage"
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "validation",
                                            "code": "required-field",
                                            "instance": "/report",
                                            "title": "Start date and end date are required."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "traceId": "00000000-0000-0000-d390-b9c1a03a6663",
                                            "traceIdentifier": "1234e1717d88aa8a",
                                            "type": "access-control",
                                            "code": "insufficient-advertiser-permission",
                                            "instance": "/report",
                                            "title": "Insufficient advertiser permission.",
                                            "detail": "You do not have the rights to report on this advertiser."
                                        }
                                    ]
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/2022-07/advertisers/me": {
            "get": {
                "tags": [
                    "Advertiser"
                ],
                "description": "Fetch the portfolio of Advertisers for this account",
                "operationId": "ApiPortfolioGet",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                },
                                "example": {
                                    "data": [
                                        {
                                            "type": "advertiser",
                                            "id": "13",
                                            "attributes": {
                                                "advertiserName": "ClientName1"
                                            }
                                        },
                                        {
                                            "type": "advertiser",
                                            "id": "1352",
                                            "attributes": {
                                                "advertiserName": "ClientName2"
                                            }
                                        },
                                        {
                                            "type": "advertiser",
                                            "id": "73550",
                                            "attributes": {
                                                "advertiserName": "ClientName3"
                                            }
                                        }
                                    ],
                                    "errors": [],
                                    "warnings": []
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPortfolioResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GetAudiencesResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Audience"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Body of the GET audience operation"
            },
            "ErrorCodeResponse": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Definition of the error code"
            },
            "NewAudienceResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/BasicAudienceDefinition"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Response of a newly created audience"
            },
            "DeleteAudienceContactListResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/BasicAudienceDefinition"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Response of a contactlist deletion"
            },
            "ModifyAudienceResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactlistOperation"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Parameters to modify an audience"
            },
            "DeleteAudienceResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/BasicAudienceDefinition"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Response of an audience deletion"
            },
            "ReplaceAudienceResponse": {
                "required": [
                    "data",
                    "errors",
                    "warnings"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/BasicAudienceDefinition"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceError"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudienceWarning"
                        }
                    }
                },
                "description": "Response of an audience replacement"
            },
            "NewAudienceRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/NewAudience"
                    }
                },
                "description": "Body of creation of a new audience"
            },
            "ContactlistAmendmentRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ContactlistAmendment"
                    }
                },
                "description": "Request for a contactlist amendment"
            },
            "ReplaceAudienceRequest": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReplaceAudience"
                    }
                },
                "description": "Request to replace an audience"
            },
            "Audience": {
                "required": [
                    "attributes",
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "Audience"
                    },
                    "id": {
                        "type": "string",
                        "description": "id of the Audience",
                        "example": "314159"
                    },
                    "attributes": {
                        "required": [
                            "created",
                            "description",
                            "name",
                            "updated"
                        ],
                        "type": "object",
                        "properties": {
                            "advertiserId": {
                                "type": "string",
                                "description": "The advertiser id that owns this Audience",
                                "format": "int32"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the Audience"
                            },
                            "description": {
                                "type": "string",
                                "description": "The string description of the Audience"
                            },
                            "created": {
                                "type": "string",
                                "description": "Date and time ISO 8601 formatted string",
                                "format": "date-time"
                            },
                            "updated": {
                                "type": "string",
                                "description": "Date and time ISO 8601 formatted string",
                                "format": "date-time"
                            },
                            "nbLines": {
                                "type": "integer",
                                "description": "The number of line in the audience available once processed"
                            },
                            "nbLinesEmail": {
                                "type": "integer",
                                "description": "The number of email line in the audience available once processed"
                            },
                            "nbMatchesEmail": {
                                "type": "integer",
                                "description": "The number of email matches in the audience available once processed"
                            }
                        }
                    }
                },
                "description": "Definition of an audience and all its information"
            },
            "AudienceError": {
                "required": [
                    "code",
                    "instance",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error"
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
                    }
                },
                "description": "Definition of an audience error"
            },
            "AudienceWarning": {
                "required": [
                    "code",
                    "detail",
                    "instance",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem."
                    },
                    "type": {
                        "enum": [
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "(REQUIRED) The classification of the error"
                    },
                    "code": {
                        "type": "string",
                        "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
                    },
                    "instance": {
                        "type": "string",
                        "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "(RECOMMENDED) A short, human-readable summary of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology"
                    }
                },
                "description": "Definition of the warning"
            },
            "BasicAudienceDefinition": {
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "the id of the entity type"
                    },
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceNameDescription"
                    }
                },
                "description": "Common definition of an audience"
            },
            "ContactlistOperation": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type"
                    },
                    "attributes": {
                        "required": [
                            "operation"
                        ],
                        "type": "object",
                        "properties": {
                            "contactListId": {
                                "type": "string",
                                "description": "the affected user list id",
                                "format": "int32"
                            },
                            "operation": {
                                "type": "string",
                                "description": "The action recorded"
                            },
                            "requestDate": {
                                "type": "string",
                                "description": "When the action was recorded",
                                "format": "date-time"
                            },
                            "identifierType": {
                                "type": "string",
                                "description": "The schema specified for of the identifiers"
                            },
                            "nbValidIdentifiers": {
                                "type": "integer",
                                "description": "How many identifiers were valid for the specified schema"
                            },
                            "nbInvalidIdentifiers": {
                                "type": "integer",
                                "description": "How many identifiers were invalid for the specified schema"
                            },
                            "sampleInvalidIdentifiers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "A sample of invalid identifiers if there is some"
                            }
                        },
                        "description": "the contactlist operation attributes"
                    }
                },
                "description": "Response definition of a contactlist operation"
            },
            "NewAudience": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "Audience"
                    },
                    "attributes": {
                        "required": [
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "advertiserId": {
                                "type": "string",
                                "description": "The advertiser id to create the audience for"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the new audience"
                            },
                            "description": {
                                "type": "string",
                                "description": "The description of the audience"
                            }
                        }
                    }
                },
                "description": "Body for the creation of a new audience (name, advertiserId, etc)"
            },
            "ContactlistAmendment": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "User List",
                        "example": "ContactlistAmendment"
                    },
                    "attributes": {
                        "required": [
                            "identifiers",
                            "operation"
                        ],
                        "type": "object",
                        "properties": {
                            "operation": {
                                "enum": [
                                    "add",
                                    "remove"
                                ],
                                "type": "string",
                                "description": "Operation to add or remove users"
                            },
                            "identifierType": {
                                "enum": [
                                    "email",
                                    "madid",
                                    "identityLink",
                                    "gum"
                                ],
                                "type": "string",
                                "description": "What type of identifiers are used"
                            },
                            "identifiers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "The users tos add or remove, each in the schema specified"
                            },
                            "gumCallerId": {
                                "type": "integer",
                                "description": "The Gum caller id of the advertiser patching identifiers of type Gum"
                            },
                            "internalIdentifiers": {
                                "type": "boolean",
                                "description": "The flag to indicate if identifiers are external or internal"
                            }
                        },
                        "description": "the name of the entity type"
                    }
                },
                "description": "Parameters for the amendment of a contactlist"
            },
            "ReplaceAudience": {
                "required": [
                    "attributes",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "the name of the entity type",
                        "example": "Audience"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/AudienceNameDescription"
                    }
                },
                "description": "Parameters required to replace an audience"
            },
            "AudienceNameDescription": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name to designate the audience by"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the audience"
                    }
                },
                "description": "Description of an audience with name and detailed description"
            },
            "ApplicationSummaryModelResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ApplicationSummaryModelResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonProblem"
                        },
                        "readOnly": true
                    }
                },
                "description": "Response of ApplicationSummaryModel"
            },
            "ApplicationSummaryModelResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ApplicationSummaryModel"
                    }
                },
                "description": "A class that represents a ValueType in a guild compliant way"
            },
            "CommonProblem": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string",
                        "description": "The request correlation ID this problem comes from."
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "The problem's category."
                    },
                    "code": {
                        "type": "string",
                        "description": "A machine-readable  error code, expressed as a string value."
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI that identifies the specific occurrence of the problem."
                    },
                    "title": {
                        "type": "string",
                        "description": "A short human-readable description of the problem type"
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem"
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)"
                    },
                    "stackTrace": {
                        "type": "string"
                    }
                },
                "description": "Common problem object. Can be specialized as needed."
            },
            "ApplicationSummaryModel": {
                "type": "object",
                "properties": {
                    "applicationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    },
                    "criteoService": {
                        "type": "string"
                    }
                },
                "description": "Model of ApplicationSummary"
            },
            "ResponseReadAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReadModelReadAdSet"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "ResponsesReadAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadModelReadAdSet"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "ResponseAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ReadModelAdSetId"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "ResponsesAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadModelAdSetId"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "CampaignResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CampaignReadResource"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "output resource"
            },
            "CampaignListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CampaignReadResource"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "PatchResultCampaignListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchResultCampaignReadResource"
                        },
                        "readOnly": true
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "List of output resources"
            },
            "AdSetDisplayMultiplierListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdSetDisplayMultiplierResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "PatchAdSetDisplayMultiplierResultListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "AdSetCategoryBidListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdSetCategoryBidResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "PatchAdSetCategoryBidResultListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetCategoryBidResultResource"
                        }
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProblemDetails"
                        },
                        "readOnly": true
                    }
                },
                "description": "Data model for a list of response resources"
            },
            "RequestAdSetSearch": {
                "type": "object",
                "properties": {
                    "filters": {
                        "$ref": "#/components/schemas/AdSetSearchFilter"
                    }
                },
                "description": "request payload of the search endpoint"
            },
            "RequestsPatchAdSet": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WriteModelPatchAdSet"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "RequestsAdSetId": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WriteModelAdSetId"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "CampaignSearchRequest": {
                "type": "object",
                "properties": {
                    "filters": {
                        "$ref": "#/components/schemas/CampaignSearchFilters"
                    }
                },
                "description": "request payload of the search endpoint"
            },
            "PatchCampaignListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchCampaignWriteResource"
                        }
                    }
                },
                "description": "List of input resources"
            },
            "PatchAdSetDisplayMultiplierListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResource"
                        }
                    }
                },
                "description": "Data model for a list of input resources"
            },
            "PatchAdSetCategoryBidListRequest": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchAdSetCategoryBidResource"
                        }
                    }
                },
                "description": "Data model for a list of input resources"
            },
            "ReadModelReadAdSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "ReadAdSet"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/ReadAdSet"
                    }
                },
                "description": "read model data for resources"
            },
            "ProblemDetails": {
                "type": "object",
                "properties": {
                    "traceIdentifier": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "unknown",
                            "access-control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "stackTrace": {
                        "type": "string"
                    }
                },
                "description": "Data model for common error or warning"
            },
            "ReadModelAdSetId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AdSetId"
                    }
                },
                "description": "read model data for resources"
            },
            "CampaignReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Campaign"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/Campaign"
                    }
                },
                "description": "read model data for resources"
            },
            "PatchResultCampaignReadResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Campaign"
                    }
                },
                "description": "read model data for resources"
            },
            "AdSetDisplayMultiplierResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetDisplayMultiplier"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetDisplayMultiplierResultResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "AdSetCategoryBidResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AdSetCategoryBid"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetCategoryBidResultResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "AdSetSearchFilter": {
                "type": "object",
                "properties": {
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "filter on ad set ids"
            },
            "WriteModelPatchAdSet": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "PatchAdSet"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSet"
                    }
                },
                "description": "write model data for resources"
            },
            "WriteModelAdSetId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetId"
                    }
                },
                "description": "write model data for resources"
            },
            "CampaignSearchFilters": {
                "type": "object",
                "properties": {
                    "campaignIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Campaign ids to filter on"
                    },
                    "advertiserIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Advertiser ids to which campaigns are linked to"
                    }
                },
                "description": "filters on campaign"
            },
            "PatchCampaignWriteResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "Campaign"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PatchCampaign"
                    }
                },
                "description": "write model data for resources"
            },
            "PatchAdSetDisplayMultiplierResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSetDisplayMultiplier"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetDisplayMultiplier"
                    }
                },
                "description": "Data model for a Resource"
            },
            "PatchAdSetCategoryBidResource": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/PatchAdSetCategoryBid"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the entity"
                    },
                    "type": {
                        "type": "string",
                        "description": "Canonical type name of the entity",
                        "example": "AdSetCategoryBid"
                    }
                },
                "description": "Data model for a Resource"
            },
            "ReadAdSet": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ad set"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser id of the campaign this ad set belongs to"
                    },
                    "datasetId": {
                        "type": "string",
                        "description": "Dataset id of this ad set"
                    },
                    "campaignId": {
                        "type": "string",
                        "description": "Campaign id this ad set belongs to"
                    },
                    "destinationEnvironment": {
                        "enum": [
                            "undefined",
                            "web",
                            "app"
                        ],
                        "type": "string",
                        "description": "The environment that an ad click will lead a user to"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/ReadAdSetSchedule"
                    },
                    "bidding": {
                        "$ref": "#/components/schemas/ReadAdSetBidding"
                    },
                    "targeting": {
                        "$ref": "#/components/schemas/AdSetTargeting"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/ReadAdSetBudget"
                    },
                    "mediaType": {
                        "enum": [
                            "display",
                            "video"
                        ],
                        "type": "string",
                        "description": "Media type for the ad set"
                    }
                },
                "description": "ad set read model"
            },
            "Campaign": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the campaign"
                    },
                    "advertiserId": {
                        "type": "string",
                        "description": "Advertiser id of the campaign"
                    },
                    "objective": {
                        "type": "string",
                        "description": "Campaign's marketing objective"
                    },
                    "spendLimit": {
                        "$ref": "#/components/schemas/CampaignSpendLimit"
                    }
                },
                "description": "campaign read model"
            },
            "AdSetDisplayMultiplier": {
                "type": "object",
                "properties": {
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the Category to which the given for which the Display Multiplier has been applied."
                    },
                    "displayMultiplier": {
                        "type": "number",
                        "description": "The Display Multiplier applied to the given Category associated to an Ad Set.",
                        "format": "double"
                    }
                },
                "description": "Display Multiplier information about a Category for a given Ad Set."
            },
            "AdSetCategoryBid": {
                "type": "object",
                "properties": {
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the Category to which the Category Bid has been applied."
                    },
                    "bidAmount": {
                        "type": "number",
                        "description": "The Bid amount applied to the given Category associated to an Ad Set.",
                        "format": "double"
                    }
                },
                "description": "Category Bid information about a Category for a given Ad Set."
            },
            "PatchAdSet": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ad set"
                    },
                    "scheduling": {
                        "$ref": "#/components/schemas/PatchAdSetScheduling"
                    },
                    "bidding": {
                        "$ref": "#/components/schemas/PatchAdSetBidding"
                    },
                    "targeting": {
                        "$ref": "#/components/schemas/AdSetTargeting"
                    },
                    "budget": {
                        "$ref": "#/components/schemas/PatchAdSetBudget"
                    }
                },
                "description": "ad set patch model"
            },
            "PatchCampaign": {
                "type": "object",
                "properties": {
                    "spendLimit": {
                        "$ref": "#/components/schemas/PatchCampaignSpendLimit"
                    }
                },
                "description": "campaign patch model"
            },
            "PatchAdSetDisplayMultiplier": {
                "type": "object",
                "properties": {
                    "displayMultiplier": {
                        "type": "number",
                        "description": "Any positive decimal value. To remove the impact of the Display Multiplier set it to 1. At most 4 decimals are supported. Additional decimals are rounded.",
                        "format": "double"
                    }
                },
                "description": "Display Multiplier to update for a given combination of Ad Set and Category."
            },
            "PatchAdSetCategoryBid": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "type": "number",
                        "description": "positive decimal value match bid constraints. At most 4 decimals are supported. Additional decimals are rounded.",
                        "format": "double"
                    }
                },
                "description": "Category Bid to update for a given combination of Ad Set and Category."
            },
            "ReadAdSetSchedule": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "activationStatus": {
                        "enum": [
                            "on",
                            "off"
                        ],
                        "type": "string",
                        "description": "Activation status of the ad set, i.e. whether the consumer wants it to deliver"
                    },
                    "deliveryStatus": {
                        "enum": [
                            "draft",
                            "inactive",
                            "live",
                            "notLive",
                            "pausing",
                            "paused",
                            "scheduled",
                            "ended",
                            "notDelivering",
                            "archived"
                        ],
                        "type": "string",
                        "description": "Delivery status of the delivery of the ad set, i.e. whether the ad set is delivering"
                    }
                },
                "description": "ad set schedule read model"
            },
            "ReadAdSetBidding": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    },
                    "bidStrategy": {
                        "enum": [
                            "actions",
                            "clicks",
                            "conversions",
                            "displays",
                            "installs",
                            "revenue",
                            "storeConversions",
                            "value",
                            "viewedImpressions",
                            "Visits",
                            "completedVideoViews"
                        ],
                        "type": "string",
                        "description": "The intended optimization for the Ad Set"
                    },
                    "costController": {
                        "enum": [
                            "COS",
                            "CPC",
                            "CPI",
                            "CPM",
                            "CPO",
                            "CPSV",
                            "CPV",
                            "dailyBudget"
                        ],
                        "type": "string",
                        "description": "How is spend controlled"
                    }
                },
                "description": "ad set bidding read model"
            },
            "AdSetTargeting": {
                "type": "object",
                "properties": {
                    "deliveryLimitations": {
                        "$ref": "#/components/schemas/AdSetDeliveryLimitations"
                    },
                    "geoLocation": {
                        "$ref": "#/components/schemas/AdSetGeoLocation"
                    },
                    "frequencyCapping": {
                        "$ref": "#/components/schemas/AdSetFrequencyCapping"
                    }
                },
                "description": "ad set targeting model"
            },
            "ReadAdSetBudget": {
                "type": "object",
                "properties": {
                    "budgetStrategy": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your budget is capped or not"
                    },
                    "budgetRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the budget renewal"
                    },
                    "budgetDeliverySmoothing": {
                        "enum": [
                            "accelerated",
                            "standard"
                        ],
                        "type": "string",
                        "description": "The pace at which the budget can be spent"
                    },
                    "budgetDeliveryWeek": {
                        "enum": [
                            "undefined",
                            "mondayToSunday",
                            "tuesdayToMonday",
                            "wednesdayToTuesday",
                            "thursdayToWednesday",
                            "fridayToThursday",
                            "saturdayToFriday",
                            "sundayToSaturday"
                        ],
                        "type": "string",
                        "description": "The delivery week for the budget"
                    },
                    "budgetAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set budget read model"
            },
            "CampaignSpendLimit": {
                "type": "object",
                "properties": {
                    "spendLimitType": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your spend limit is capped or not"
                    },
                    "spendLimitRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the spend limit renewal"
                    },
                    "spendLimitAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "campaign spend limit model"
            },
            "PatchAdSetScheduling": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/NillableDateTime"
                    }
                },
                "description": "ad set schedule patch model"
            },
            "PatchAdSetBidding": {
                "type": "object",
                "properties": {
                    "bidAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set bidding patch model"
            },
            "PatchAdSetBudget": {
                "type": "object",
                "properties": {
                    "budgetStrategy": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your budget is capped or not"
                    },
                    "budgetRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the budget renewal"
                    },
                    "budgetDeliverySmoothing": {
                        "enum": [
                            "accelerated",
                            "standard"
                        ],
                        "type": "string",
                        "description": "The pace at which the budget can be spent"
                    },
                    "budgetDeliveryWeek": {
                        "enum": [
                            "undefined",
                            "mondayToSunday",
                            "tuesdayToMonday",
                            "wednesdayToTuesday",
                            "thursdayToWednesday",
                            "fridayToThursday",
                            "saturdayToFriday",
                            "sundayToSaturday"
                        ],
                        "type": "string",
                        "description": "The delivery week for the budget"
                    },
                    "budgetAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "ad set budget patch model"
            },
            "PatchCampaignSpendLimit": {
                "type": "object",
                "properties": {
                    "spendLimitType": {
                        "enum": [
                            "capped",
                            "uncapped"
                        ],
                        "type": "string",
                        "description": "Whether your spend limit is capped or not"
                    },
                    "spendLimitRenewal": {
                        "enum": [
                            "undefined",
                            "daily",
                            "monthly",
                            "lifetime"
                        ],
                        "type": "string",
                        "description": "The pace of the spend limit renewal"
                    },
                    "spendLimitAmount": {
                        "$ref": "#/components/schemas/NillableDecimal"
                    }
                },
                "description": "campaign spend limit model"
            },
            "NillableDateTime": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "format": "date-time",
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "NillableDecimal": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double",
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "AdSetDeliveryLimitations": {
                "type": "object",
                "properties": {
                    "environments": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "web",
                                "inApp"
                            ],
                            "type": "string"
                        },
                        "description": "List of environments which the ad set should target"
                    },
                    "devices": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "other",
                                "desktop",
                                "mobile",
                                "tablet"
                            ],
                            "type": "string"
                        },
                        "description": "List of devices which the ad set should target"
                    },
                    "operatingSystems": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "android",
                                "ios",
                                "unknown"
                            ],
                            "type": "string"
                        },
                        "description": "List of operating systems which the ad set should target"
                    }
                },
                "description": "ad set delivery limitations model"
            },
            "AdSetGeoLocation": {
                "type": "object",
                "properties": {
                    "countries": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    },
                    "subdivisions": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    },
                    "zipCodes": {
                        "$ref": "#/components/schemas/NillableAdSetTargetingRule"
                    }
                },
                "description": "ad set geolocation model"
            },
            "AdSetFrequencyCapping": {
                "type": "object",
                "properties": {
                    "frequency": {
                        "enum": [
                            "hourly",
                            "daily",
                            "lifetime",
                            "advanced"
                        ],
                        "type": "string",
                        "description": "Period on which impression limitation is calculated"
                    },
                    "maximumImpressions": {
                        "type": "integer",
                        "description": "Maximum impressions for the specified period",
                        "format": "int32"
                    }
                },
                "description": "ad set frequency capping model"
            },
            "NillableAdSetTargetingRule": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdSetTargetingRule"
                            }
                        ],
                        "x-nullable": true
                    }
                },
                "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
            },
            "AdSetTargetingRule": {
                "type": "object",
                "properties": {
                    "operand": {
                        "enum": [
                            "undefined",
                            "in",
                            "notIn"
                        ],
                        "type": "string",
                        "description": "Operand which states how the values should be applied"
                    },
                    "values": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values to apply"
                    }
                },
                "description": "ad set targeting rule model"
            },
            "AccessTokenModel": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "description": "The access token issued by the authorization server."
                    },
                    "token_type": {
                        "type": "string",
                        "description": "The type of the token issued."
                    },
                    "refresh_token": {
                        "type": "string",
                        "description": "The refresh token issued by the authorization server.",
                        "x-nullable": true
                    },
                    "expires_in": {
                        "type": "integer",
                        "description": "The lifetime in seconds of the access token.For example, the value \"3600\" denotes that the access token will expire in one hour from the time the response was generated. If omitted, the authorization server SHOULD provide the expiration time via other means or document the default value.",
                        "format": "int32"
                    }
                },
                "description": "Access Token to be used with other services"
            },
            "OAuthErrorModel": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "error_description": {
                        "type": "string"
                    },
                    "error_uri": {
                        "type": "string"
                    }
                }
            },
            "ErrorMessage": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "traceIdentifier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "instance": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "detail": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "description": "This is the message defining an error"
            },
            "TransparencyReportDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransparencyReportEntityMessage"
                        }
                    }
                },
                "description": "This is the message defining the response for Transparency report"
            },
            "StatisticsReportQueryMessage": {
                "required": [
                    "dimensions",
                    "metrics",
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
                    },
                    "adSetIds": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets ids. If empty, all the adSets will be fetched"
                    },
                    "adSetNames": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets names. If empty, all the adSets will be fetched"
                    },
                    "adSetStatus": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of adSets status. If empty, all the adSets will be fetched"
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AdsetId",
                                "Adset",
                                "AdvertiserId",
                                "Advertiser",
                                "CategoryId",
                                "Category",
                                "Hour",
                                "Day",
                                "Week",
                                "Month",
                                "Year",
                                "Os",
                                "Device",
                                "CampaignId",
                                "Campaign",
                                "AdId",
                                "Ad",
                                "CouponId",
                                "Coupon",
                                "MarketingObjectiveId",
                                "MarketingObjective",
                                "ChannelId",
                                "Channel"
                            ],
                            "type": "string"
                        },
                        "description": "The dimensions for the report."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Adset report",
                "example": {
                    "advertiserIds": "123,456,789",
                    "adSetIds": [
                        "12345",
                        "54321"
                    ],
                    "adSetNames": [
                        "myAdSet1",
                        "myAdSet2"
                    ],
                    "adSetStatus": [
                        "Active"
                    ],
                    "dimensions": [
                        "CampaignId",
                        "Campaign",
                        "AdsetId",
                        "Adset",
                        "AdvertiserId",
                        "Advertiser",
                        "AdId",
                        "Ad",
                        "CouponId",
                        "Coupon",
                        "CategoryId",
                        "Category",
                        "Hour",
                        "Day",
                        "Week",
                        "Month",
                        "Year",
                        "Os",
                        "Device"
                    ],
                    "metrics": [
                        "Clicks",
                        "Displays",
                        "Cpc",
                        "Visits"
                    ],
                    "currency": "EUR",
                    "format": "csv",
                    "timezone": "Europe/Paris",
                    "startDate": "2021-12-29T00:00:00.0000000+01:00",
                    "endDate": "2022-01-01T00:00:00.0000000+01:00"
                }
            },
            "TransactionsReportQueryDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionsReportQueryEntityMessage"
                        }
                    }
                },
                "description": "Contains queries for Transactions report",
                "example": {
                    "data": [
                        {
                            "type": "TransactionsReport",
                            "attributes": {
                                "advertiserIds": "123,456,789",
                                "eventType": "display",
                                "currency": "EUR",
                                "format": "csv",
                                "timezone": "Europe/Paris",
                                "startDate": "2021-12-29T00:00:00.0000000+01:00",
                                "endDate": "2021-12-29T00:00:00.0000000+01:00"
                            }
                        }
                    ]
                }
            },
            "TransparencyQueryMessage": {
                "required": [
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "shouldDisplayProductIds": {
                        "type": "boolean",
                        "description": "Specify if the product ids are displayed in the report.",
                        "default": false
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Transparency report",
                "example": {
                    "shouldDisplayProductIds": false,
                    "startDate": "2021-12-29T00:00:00.0000000+01:00",
                    "endDate": "2022-01-01T00:00:00.0000000+01:00"
                }
            },
            "PlacementsReportQueryDataMessage": {
                "required": [
                    "data"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacementsReportQueryEntityMessage"
                        }
                    }
                },
                "description": "Contains queries for Placements report",
                "example": {
                    "data": [
                        {
                            "type": "PlacementReport",
                            "attributes": {
                                "advertiserIds": "123,456,789",
                                "campaignIds": "111,222,333,444",
                                "adsetIds": "135,246,357,468",
                                "environment": "web",
                                "placement": "MyPlacement",
                                "dimensions": [
                                    "AdsetId",
                                    "AdvertiserId",
                                    "Placement"
                                ],
                                "metrics": [
                                    "clicks",
                                    "displays",
                                    "cost"
                                ],
                                "currency": "EUR",
                                "disclosed": false,
                                "format": "csv",
                                "timezone": "Europe/Paris",
                                "startDate": "2021-12-29T00:00:00.0000000+01:00",
                                "endDate": "2021-12-29T00:00:00.0000000+01:00"
                            }
                        }
                    ]
                }
            },
            "TransparencyReportEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/TransparencyReportAttributes"
                    }
                },
                "description": "This is the message defining the entity response for Transparency report"
            },
            "TransactionsReportQueryEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/TransactionsReportQueryMessage"
                    }
                },
                "description": "Contains a query for Transaction report and its type"
            },
            "PlacementsReportQueryEntityMessage": {
                "required": [
                    "type",
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PlacementsReportQueryMessage"
                    }
                },
                "description": "Contains a query for Transaction report and its type"
            },
            "TransparencyReportAttributes": {
                "required": [
                    "advertiserId",
                    "tokenValidUntil",
                    "files"
                ],
                "type": "object",
                "properties": {
                    "advertiserId": {
                        "type": "string"
                    },
                    "tokenValidUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "files": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransparencyReportFile"
                        }
                    }
                },
                "description": "This is the message defining the attribute response for Transparency report"
            },
            "TransactionsReportQueryMessage": {
                "required": [
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Apply a filter on Event type ."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Transaction report"
            },
            "PlacementsReportQueryMessage": {
                "required": [
                    "dimensions",
                    "metrics",
                    "currency",
                    "format",
                    "startDate",
                    "endDate"
                ],
                "type": "object",
                "properties": {
                    "advertiserIds": {
                        "type": "string",
                        "description": "The comma-separated list of advertiser ids."
                    },
                    "campaignIds": {
                        "type": "string",
                        "description": "The comma-separated list of campaign ids."
                    },
                    "adsetIds": {
                        "type": "string",
                        "description": "The comma-separated list of adSet ids."
                    },
                    "environment": {
                        "type": "string",
                        "description": "Type of environment: Web, Android or iOS."
                    },
                    "placement": {
                        "type": "string",
                        "description": "Filter the value of the placement"
                    },
                    "dimensions": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "enum": [
                                "AdsetId",
                                "AdvertiserId",
                                "Placement",
                                "Environment",
                                "AdsetName",
                                "AdvertiserName",
                                "CampaignId",
                                "CampaignName"
                            ],
                            "type": "string"
                        },
                        "description": "The dimensions for the report."
                    },
                    "metrics": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of metrics to report."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
                    },
                    "disclosed": {
                        "type": "boolean",
                        "description": "Returns disclosed or undisclosed placements.",
                        "default": true
                    },
                    "format": {
                        "type": "string",
                        "description": "The file format of the generated report: csv, xml, excel or json."
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone used for the report. Timezone Database format (Tz).",
                        "default": "UTC"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
                        "format": "date-time"
                    }
                },
                "description": "This is the message defining the query for Placements report"
            },
            "TransparencyReportFile": {
                "required": [
                    "fileName",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "description": "This is the message defining the file response for Transparency report"
            },
            "GetPortfolioResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityOfPortfolioMessage"
                        },
                        "description": "The response�s primary data"
                    },
                    "errors": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiError"
                        },
                        "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty"
                    },
                    "warnings": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CriteoApiWarning"
                        },
                        "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
                    }
                },
                "description": "Portfolio fetch Response"
            },
            "EntityOfPortfolioMessage": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "campaign",
                            "adset",
                            "ad",
                            "advertiser",
                            "agency",
                            "publisher",
                            "address",
                            "client",
                            "contact",
                            "industry"
                        ],
                        "type": "string",
                        "description": "A string containing the entity type",
                        "example": "campaign"
                    },
                    "id": {
                        "type": "string",
                        "description": "A opaque string containing the unique Id of the entity"
                    },
                    "attributes": {
                        "$ref": "#/components/schemas/PortfolioMessage"
                    },
                    "meta": {
                        "type": "object",
                        "description": "A meta object that contains application-specific metadata"
                    }
                },
                "description": "Generic Criteo API successful data model"
            },
            "CriteoApiError": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access_control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access_control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    },
                    "source": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
                    }
                },
                "description": "Criteo API response error"
            },
            "CriteoApiWarning": {
                "type": "object",
                "properties": {
                    "traceId": {
                        "type": "string",
                        "description": "The correlation ID provided by the gateway"
                    },
                    "type": {
                        "enum": [
                            "access_control",
                            "authentication",
                            "authorization",
                            "availability",
                            "deprecation",
                            "quota",
                            "validation"
                        ],
                        "type": "string",
                        "description": "A machine-readable code specifying error category",
                        "example": "access_control"
                    },
                    "code": {
                        "enum": [
                            "internal-error",
                            "deprecated-field",
                            "endpoint-deprecated",
                            "required-field",
                            "invalid-date-format",
                            "invalid",
                            "invalid-ranged",
                            "invalid-timespan"
                        ],
                        "type": "string",
                        "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
                        "example": "internal-error"
                    },
                    "instance": {
                        "type": "string",
                        "description": "A URI reference that identifies the specific occurrence of the problem"
                    },
                    "title": {
                        "type": "string",
                        "description": "A short, human-readable remarks of the problem type."
                    },
                    "detail": {
                        "type": "string",
                        "description": "A human-readable explanation specific to this occurrence of the problem."
                    }
                },
                "description": "Criteo API response warning"
            },
            "PortfolioMessage": {
                "type": "object",
                "properties": {
                    "advertiserName": {
                        "type": "string"
                    }
                },
                "description": "Class with elementary info about advertiser"
            }
        },
        "securitySchemes": {
            "oauth": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://api.criteo.com/oauth2/token",
                        "scopes": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "oauth": []
        }
    ],
    "x-samples-languages": [
        "java",
        "python",
        "php",
        "csharp",
        "javascript",
        "curl",
        "ruby"
    ]
}