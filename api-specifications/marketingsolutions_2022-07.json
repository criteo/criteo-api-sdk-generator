{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo API - MarketingSolutions",
    "version": "2022-07"
  },
  "servers": [
    {
      "url": "https://api.criteo.com"
    }
  ],
  "paths": {
    "/2022-07/audiences": {
      "get": {
        "tags": [
          "Audience"
        ],
        "description": "Get a list of all the audiences for the user or for the given advertiser_id",
        "operationId": "getAudiences",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "query",
            "description": "The advertiser id to get all the audiences for.\nMandatory for internal users. For external users,\n           if you don't provide it, we will take into account the advertisers from your portfolio",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudiencesResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "AudienceContactlist",
                      "id": "1",
                      "attributes": {
                        "advertiserId": "18",
                        "name": "Audience name",
                        "description": "Audience",
                        "created": "2018-12-10T10:00:50.0000000+00:00",
                        "updated": "2018-12-10T10:17:15.0000000+00:00",
                        "nbLines": 100,
                        "nbLinesEmail": 10,
                        "nbMatchesEmail": 10
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Audience"
        ],
        "description": "Create an Audience for an Advertiser",
        "operationId": "createAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAudienceRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "The audience was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "Audience"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/2022-07/audiences/{audience-id}": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "description": "Delete an audience by id",
        "operationId": "removeAudience",
        "responses": {
          "200": {
            "description": "The audience was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "Audience"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Update user audience specified by the audience id",
        "operationId": "modifyAudience",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplaceAudienceRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "The audience was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReplaceAudienceResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "AudienceContactlist",
                    "attributes": {
                      "name": "example audience",
                      "description": "example audience description"
                    }
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "audience-id",
          "in": "path",
          "description": "The id of the audience to amend",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string",
            "format": "int32"
          }
        }
      ]
    },
    "/2022-07/audiences/{audience-id}/contactlist": {
      "delete": {
        "tags": [
          "Audience"
        ],
        "description": "delete all identifiers from an Audience",
        "operationId": "deleteIdentifiers",
        "responses": {
          "200": {
            "description": "The contactlist was deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteAudienceContactListResponse"
                },
                "example": {
                  "data": {
                    "id": "1",
                    "type": "AudienceContactlist"
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Audience"
        ],
        "description": "Add/remove users to or from an audience",
        "operationId": "modifyAudienceUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactlistAmendmentRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "body"
        },
        "responses": {
          "200": {
            "description": "Summary of created request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyAudienceResponse"
                },
                "example": {
                  "data": {
                    "type": "ContactlistAmendment",
                    "attributes": {
                      "contactListId": 12,
                      "operation": "add",
                      "requestDate": "2018-12-10T10:00:50.0000000+00:00",
                      "identifierType": "madid",
                      "nbValidIdentifiers": 7343,
                      "nbInvalidIdentifiers": 13,
                      "sampleInvalidIdentifiers": [
                        "InvalidIdentifier"
                      ]
                    }
                  },
                  "errors": [ ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Audience 123 not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorCodeResponse"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "validation",
                      "code": "audience-invalid",
                      "instance": "/audience/314159",
                      "title": "Audience is invalid",
                      "detail": "Audience is not found, please choose a valid audience"
                    }
                  ],
                  "warnings": [
                    {
                      "traceId": "56ed4096-f96a-4944-8881-05468efe0ec9",
                      "type": "deprecation",
                      "code": "deprecated-field",
                      "instance": "/audiences/314195",
                      "title": "'nbValidIds' is deprecated",
                      "detail": "The field 'nbValidIds' is deprecated please use 'nbValidIdentifiers"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "audience-id",
          "in": "path",
          "description": "The id of the audience to amend",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string",
            "format": "int32"
          }
        }
      ]
    },
    "/2022-07/marketing-solutions/me": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "description": "Get information about the currently logged application",
        "operationId": "GetCurrentApplication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationSummaryModelResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of AdSets.",
        "operationId": "PatchAdSets",
        "requestBody": {
          "description": "List of adsets to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsPatchAdSet"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of patched adSets.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAdSetId"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for ad sets",
        "operationId": "SearchAdSets",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAdSetSearch"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the ad sets",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesReadAdSet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/start": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Start the specified list of ad sets",
        "operationId": "StartAdSets",
        "requestBody": {
          "description": "All the ad sets to start",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been started and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/stop": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Stop the specified list of ad sets",
        "operationId": "StopAdSets",
        "requestBody": {
          "description": "All the ad sets to stop",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestsAdSetId"
              }
            }
          },
          "x-bodyName": "adSets"
        },
        "responses": {
          "200": {
            "description": "List of ad sets that have been stopped and errors / warnings by ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsesAdSetId"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/{ad-set-id}/category-bids": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Category Bids for all valid Categories associated to an Ad Set",
        "operationId": "GetCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Category Bids for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetCategoryBidListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Category Bids for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchCategoryBidList",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetCategoryBidListRequest"
              }
            }
          },
          "x-bodyName": "categoryBidsToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Category Bids for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetCategoryBidResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/{ad-set-id}/display-multipliers": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the Display Multipliers for all valid Categories associated to an Ad Set",
        "operationId": "GetDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Display Multipliers for all valid Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdSetDisplayMultiplierListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch Display Multipliers for one or more Categories in a single request. Partial success policy is followed.",
        "operationId": "PatchDisplayMultipliers",
        "parameters": [
          {
            "name": "ad-set-id",
            "in": "path",
            "description": "Id of the Ad Set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierListRequest"
              }
            }
          },
          "x-bodyName": "displayMultipliersToUpdate"
        },
        "responses": {
          "200": {
            "description": "List of updated Display Multipliers for given Categories associated to an Ad Set.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/ad-sets/{adSetId}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified ad set",
        "operationId": "GetAdSet",
        "parameters": [
          {
            "name": "adSetId",
            "in": "path",
            "description": "Id of the ad set",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the ad set",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReadAdSet"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/campaigns": {
      "patch": {
        "tags": [
          "Campaign"
        ],
        "description": "Patch a list of Campaigns.",
        "operationId": "PatchCampaigns",
        "requestBody": {
          "description": "List of campaigns to patch.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCampaignListRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "List of patched campaigns.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchResultCampaignListResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/campaigns/search": {
      "post": {
        "tags": [
          "Campaign"
        ],
        "description": "Search for campaigns",
        "operationId": "SearchCampaigns",
        "requestBody": {
          "description": "filters on campaigns",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSearchRequest"
              }
            }
          },
          "x-bodyName": "request"
        },
        "responses": {
          "200": {
            "description": "data for the campaigns",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/marketing-solutions/campaigns/{campaign-id}": {
      "get": {
        "tags": [
          "Campaign"
        ],
        "description": "Get the data for the specified campaign",
        "operationId": "GetCampaign",
        "parameters": [
          {
            "name": "campaign-id",
            "in": "path",
            "description": "Id of the campaign",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data for the campaign",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignResponse"
                }
              }
            }
          },
          "401": {
            "description": "The API client is not properly authenticated.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          },
          "403": {
            "description": "The API client is not authorized to access this resource or the resource does not exist.",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2022-07/log-level/advertisers/{advertiser-id}/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides publisher data.",
        "operationId": "GetTransparencyReport",
        "parameters": [
          {
            "name": "advertiser-id",
            "in": "path",
            "description": "The advertiser id to fetch the transparency data.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransparencyQueryMessage"
              }
            }
          },
          "x-bodyName": "queryMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                },
                "example": {
                  "data": [
                    {
                      "type": "TransparencyReport",
                      "attributes": {
                        "advertiserId": "123",
                        "tokenValidUntil": "2021-01-31T00:00:00.0000000+00:00",
                        "files": [
                          {
                            "fileName": "report.csv",
                            "url": "https://www.example.com/transparency"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparencyReportDataMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2022-07/placements/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "Your ads are placed in different domains (publishers) and environments (websites and apps). Thanks to the placements endpoint, you can analyse the performances for each publisher, comparing displays, clicks and sales generated.",
        "operationId": "GetPlacementsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlacementsReportQueryDataMessage"
              }
            }
          },
          "x-bodyName": "dataMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2022-07/statistics/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
        "operationId": "GetAdsetReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            }
          },
          "x-bodyName": "reportQuery"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2022-07/transactions/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Transactions endpoint provides transactions id related data.",
        "operationId": "GetTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            }
          },
          "x-bodyName": "dataMessage"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "validation",
                      "code": "required-field",
                      "instance": "/report",
                      "title": "Start date and end date are required."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                },
                "example": {
                  "errors": [
                    {
                      "traceId": "b7888125-dddb-c94e-9240-eb930c4ea146",
                      "traceIdentifier": "1234e1717d88aa8a",
                      "type": "access-control",
                      "code": "insufficient-advertiser-permission",
                      "instance": "/report",
                      "title": "Insufficient advertiser permission.",
                      "detail": "You do not have the rights to report on this advertiser."
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemsDetails"
                }
              }
            }
          }
        }
      }
    },
    "/2022-07/advertisers/me": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Fetch the portfolio of Advertisers for this account",
        "operationId": "ApiPortfolioGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                },
                "example": {
                  "data": [
                    {
                      "type": "advertiser",
                      "id": "13",
                      "attributes": {
                        "advertiserName": "ClientName1"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "1352",
                      "attributes": {
                        "advertiserName": "ClientName2"
                      }
                    },
                    {
                      "type": "advertiser",
                      "id": "73550",
                      "attributes": {
                        "advertiserName": "ClientName3"
                      }
                    }
                  ],
                  "errors": [ ],
                  "warnings": [ ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetAudiencesResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Audience"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Body of the GET audience operation"
      },
      "ErrorCodeResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            },
            "nullable": true
          }
        },
        "description": "Definition of the error code"
      },
      "NewAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of a newly created audience"
      },
      "DeleteAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of an audience deletion"
      },
      "ReplaceAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of an audience replacement"
      },
      "DeleteAudienceContactListResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BasicAudienceDefinition"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Response of a contactlist deletion"
      },
      "ModifyAudienceResponse": {
        "required": [
          "data",
          "errors",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistOperation"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceError"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceWarning"
            }
          }
        },
        "description": "Parameters to modify an audience"
      },
      "NewAudienceRequest": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NewAudience"
          }
        },
        "description": "Body of creation of a new audience"
      },
      "ReplaceAudienceRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReplaceAudience"
          }
        },
        "description": "Request to replace an audience"
      },
      "ContactlistAmendmentRequest": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContactlistAmendment"
          }
        },
        "description": "Request for a contactlist amendment"
      },
      "Audience": {
        "required": [
          "attributes",
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "id": {
            "type": "string",
            "description": "id of the Audience",
            "example": "314159"
          },
          "attributes": {
            "required": [
              "created",
              "description",
              "name",
              "updated"
            ],
            "type": "object",
            "properties": {
              "advertiserId": {
                "type": "string",
                "description": "The advertiser id that owns this Audience",
                "format": "int32",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the Audience"
              },
              "description": {
                "type": "string",
                "description": "The string description of the Audience"
              },
              "created": {
                "type": "string",
                "description": "Date and time ISO 8601 formatted string",
                "format": "date-time"
              },
              "updated": {
                "type": "string",
                "description": "Date and time ISO 8601 formatted string",
                "format": "date-time"
              },
              "nbLines": {
                "type": "integer",
                "description": "The number of line in the audience available once processed",
                "nullable": true
              },
              "nbLinesEmail": {
                "type": "integer",
                "description": "The number of email line in the audience available once processed",
                "nullable": true
              },
              "nbMatchesEmail": {
                "type": "integer",
                "description": "The number of email matches in the audience available once processed",
                "nullable": true
              }
            }
          }
        },
        "description": "Definition of an audience and all its information"
      },
      "AudienceError": {
        "required": [
          "code",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "(RECOMMENDED) A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          }
        },
        "description": "Definition of an audience error"
      },
      "AudienceWarning": {
        "required": [
          "code",
          "detail",
          "instance",
          "type"
        ],
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "(REQUIRED) The Correlation ID provided by the Gateway. It is also a unique identifier for this particular occurrence of the problem.",
            "nullable": true
          },
          "type": {
            "enum": [
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "(REQUIRED) The classification of the error"
          },
          "code": {
            "type": "string",
            "description": "(REQUIRED) A machine-readable unique error code, expressed as a string value. The format used must be kebab-case."
          },
          "instance": {
            "type": "string",
            "description": "(REQUIRED) A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "(RECOMMENDED) A short, human-readable summary of the problem type",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "(REQUIRED) A human-readable explanation specific to this occurrence of the problem"
          },
          "source": {
            "type": "object",
            "description": "(OPTIONAL) A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(NEVER IN PRODUCTION) A human-readable stacktrace produced by the implementation technology",
            "nullable": true
          }
        },
        "description": "Definition of the warning"
      },
      "BasicAudienceDefinition": {
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the id of the entity type"
          },
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceNameDescription"
          }
        },
        "description": "Common definition of an audience"
      },
      "ContactlistOperation": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type"
          },
          "attributes": {
            "required": [
              "operation"
            ],
            "type": "object",
            "properties": {
              "contactListId": {
                "type": "integer",
                "description": "the affected user list id",
                "nullable": true
              },
              "operation": {
                "type": "string",
                "description": "The action recorded"
              },
              "requestDate": {
                "type": "string",
                "description": "When the action was recorded",
                "format": "date-time",
                "nullable": true
              },
              "identifierType": {
                "type": "string",
                "description": "The schema specified for of the identifiers",
                "nullable": true
              },
              "nbValidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were valid for the specified schema",
                "nullable": true
              },
              "nbInvalidIdentifiers": {
                "type": "integer",
                "description": "How many identifiers were invalid for the specified schema",
                "nullable": true
              },
              "sampleInvalidIdentifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A sample of invalid identifiers if there is some",
                "nullable": true
              }
            },
            "description": "the contactlist operation attributes"
          }
        },
        "description": "Response definition of a contactlist operation"
      },
      "NewAudience": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "attributes": {
            "required": [
              "name"
            ],
            "type": "object",
            "properties": {
              "advertiserId": {
                "type": "string",
                "description": "The advertiser id to create the audience for",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "The name of the new audience"
              },
              "description": {
                "type": "string",
                "description": "The description of the audience",
                "nullable": true
              }
            }
          }
        },
        "description": "Body for the creation of a new audience (name, advertiserId, etc)"
      },
      "ReplaceAudience": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "the name of the entity type",
            "example": "Audience"
          },
          "attributes": {
            "$ref": "#/components/schemas/AudienceNameDescription"
          }
        },
        "description": "Parameters required to replace an audience"
      },
      "ContactlistAmendment": {
        "required": [
          "attributes",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "User List",
            "example": "ContactlistAmendment"
          },
          "attributes": {
            "required": [
              "identifiers",
              "operation"
            ],
            "type": "object",
            "properties": {
              "operation": {
                "enum": [
                  "add",
                  "remove"
                ],
                "type": "string",
                "description": "Operation to add or remove users"
              },
              "identifierType": {
                "enum": [
                  "email",
                  "madid",
                  "identityLink",
                  "gum",
                  "customerid"
                ],
                "type": "string",
                "description": "What type of identifiers are used",
                "nullable": true
              },
              "identifiers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The users tos add or remove, each in the schema specified"
              },
              "gumCallerId": {
                "type": "integer",
                "description": "The Gum caller id of the advertiser patching identifiers of type Gum",
                "nullable": true
              }
            },
            "description": "the name of the entity type"
          }
        },
        "description": "Parameters for the amendment of a contactlist"
      },
      "AudienceNameDescription": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name to designate the audience by",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the audience",
            "nullable": true
          }
        },
        "description": "Description of an audience with name and detailed description"
      },
      "ApplicationSummaryModelResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ApplicationSummaryModelResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonProblem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Response of ApplicationSummaryModel"
      },
      "ApplicationSummaryModelResource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/ApplicationSummaryModel"
          }
        },
        "description": "A class that represents a ValueType in a guild compliant way"
      },
      "CommonProblem": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "The problem's category.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "A machine-readable  error code, expressed as a string value.",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "description": "A URI that identifies the specific occurrence of the problem.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short human-readable description of the problem type",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Common problem object. Can be specialized as needed."
      },
      "ApplicationSummaryModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "criteoService": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Model of ApplicationSummary"
      },
      "ResponseAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReadModelAdSetId"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "ResponsesReadAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelReadAdSet"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "ResponsesAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadModelAdSetId"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "AdSetCategoryBidListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetCategoryBidResource"
            },
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetCategoryBidResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResultResource"
            },
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "AdSetDisplayMultiplierListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdSetDisplayMultiplierResource"
            },
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "PatchAdSetDisplayMultiplierResultListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResultResource"
            },
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Data model for a list of response resources"
      },
      "ResponseReadAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ReadModelReadAdSet"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "PatchResultCampaignListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchResultCampaignReadResource"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "CampaignListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignReadResource"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "List of output resources"
      },
      "CampaignResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignReadResource"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "output resource"
      },
      "RequestsPatchAdSet": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelPatchAdSet"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "RequestAdSetSearch": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/AdSetSearchFilter"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "RequestsAdSetId": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WriteModelAdSetId"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "PatchAdSetCategoryBidListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetCategoryBidResource"
            },
            "nullable": true
          }
        },
        "description": "Data model for a list of input resources"
      },
      "PatchAdSetDisplayMultiplierListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchAdSetDisplayMultiplierResource"
            },
            "nullable": true
          }
        },
        "description": "Data model for a list of input resources"
      },
      "PatchCampaignListRequest": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PatchCampaignWriteResource"
            },
            "nullable": true
          }
        },
        "description": "List of input resources"
      },
      "CampaignSearchRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/CampaignSearchFilters"
          }
        },
        "description": "request payload of the search endpoint"
      },
      "ReadModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "AdSetId"
          }
        },
        "description": "read model data for resources"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The request correlation ID this problem comes from.",
            "nullable": true
          },
          "traceIdentifier": {
            "type": "string",
            "description": "The request correlation ID this problem comes from. (deprecated, use traceId instead)",
            "nullable": true
          },
          "type": {
            "enum": [
              "unknown",
              "access-control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Data model for common error or warning"
      },
      "ReadModelReadAdSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "ReadAdSet"
          },
          "attributes": {
            "$ref": "#/components/schemas/ReadAdSet"
          }
        },
        "description": "read model data for resources"
      },
      "AdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetCategoryBidResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "AdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/AdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplierResultResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchResultCampaignReadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Campaign"
          }
        },
        "description": "read model data for resources"
      },
      "CampaignReadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "example": "Campaign"
          },
          "attributes": {
            "$ref": "#/components/schemas/Campaign"
          }
        },
        "description": "read model data for resources"
      },
      "WriteModelPatchAdSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "PatchAdSet"
          },
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSet"
          }
        },
        "description": "write model data for resources"
      },
      "AdSetSearchFilter": {
        "type": "object",
        "properties": {
          "adSetIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Ad set ids to filter on",
            "nullable": true
          },
          "advertiserIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser ids which ad sets belongs to (indirectly via their marketing campaign)",
            "nullable": true
          },
          "campaignIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter on",
            "nullable": true
          }
        },
        "description": "filter on ad set ids"
      },
      "WriteModelAdSetId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetId"
          }
        },
        "description": "write model data for resources"
      },
      "PatchAdSetCategoryBidResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetCategoryBid"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetCategoryBid"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchAdSetDisplayMultiplierResource": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/PatchAdSetDisplayMultiplier"
          },
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "AdSetDisplayMultiplier"
          }
        },
        "description": "Data model for a Resource"
      },
      "PatchCampaignWriteResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the entity",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Canonical type name of the entity",
            "nullable": true,
            "example": "Campaign"
          },
          "attributes": {
            "$ref": "#/components/schemas/PatchCampaign"
          }
        },
        "description": "write model data for resources"
      },
      "CampaignSearchFilters": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Campaign ids to filter on",
            "nullable": true
          },
          "advertiserIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Advertiser ids to which campaigns are linked to",
            "nullable": true
          }
        },
        "description": "filters on campaign"
      },
      "ReadAdSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ad set",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id of the campaign this ad set belongs to",
            "nullable": true
          },
          "datasetId": {
            "type": "string",
            "description": "Dataset id of this ad set",
            "nullable": true
          },
          "campaignId": {
            "type": "string",
            "description": "Campaign id this ad set belongs to",
            "nullable": true
          },
          "destinationEnvironment": {
            "enum": [
              "undefined",
              "web",
              "app"
            ],
            "type": "string",
            "description": "The environment that an ad click will lead a user to",
            "nullable": true
          },
          "schedule": {
            "$ref": "#/components/schemas/ReadAdSetSchedule"
          },
          "bidding": {
            "$ref": "#/components/schemas/ReadAdSetBidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/ReadAdSetBudget"
          },
          "mediaType": {
            "enum": [
              "display",
              "video"
            ],
            "type": "string",
            "description": "Media type for the ad set",
            "nullable": true
          }
        },
        "description": "ad set read model"
      },
      "AdSetCategoryBid": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the Category Bid has been applied.",
            "nullable": true
          },
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Category Bid information about a Category for a given Ad Set."
      },
      "AdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "The name of the Category to which the given for which the Display Multiplier has been applied.",
            "nullable": true
          },
          "displayMultiplier": {
            "type": "number",
            "description": "The Display Multiplier applied to the given Category associated to an Ad Set.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Display Multiplier information about a Category for a given Ad Set."
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the campaign",
            "nullable": true
          },
          "advertiserId": {
            "type": "string",
            "description": "Advertiser id of the campaign",
            "nullable": true
          },
          "objective": {
            "type": "string",
            "description": "Campaign's marketing objective",
            "nullable": true
          },
          "spendLimit": {
            "$ref": "#/components/schemas/CampaignSpendLimit"
          },
          "goal": {
            "enum": [
              "Unspecified",
              "Acquisition",
              "Retention"
            ],
            "type": "string",
            "description": "Goal of the campaign",
            "nullable": true
          }
        },
        "description": "campaign read model"
      },
      "PatchAdSet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ad set",
            "nullable": true
          },
          "scheduling": {
            "$ref": "#/components/schemas/PatchAdSetScheduling"
          },
          "bidding": {
            "$ref": "#/components/schemas/PatchAdSetBidding"
          },
          "targeting": {
            "$ref": "#/components/schemas/AdSetTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/PatchAdSetBudget"
          }
        },
        "description": "ad set patch model"
      },
      "PatchAdSetCategoryBid": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "type": "number",
            "description": "The Bid amount applied to the given Category associated to an Ad Set. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Category Bid to update for a given combination of Ad Set and Category."
      },
      "PatchAdSetDisplayMultiplier": {
        "type": "object",
        "properties": {
          "displayMultiplier": {
            "type": "number",
            "description": "Any positive decimal value. To remove the impact of the Display Multiplier set it to 1. At most 4 decimals are supported. Additional decimals are rounded.",
            "format": "double",
            "nullable": true
          }
        },
        "description": "Display Multiplier to update for a given combination of Ad Set and Category."
      },
      "PatchCampaign": {
        "type": "object",
        "properties": {
          "spendLimit": {
            "$ref": "#/components/schemas/PatchCampaignSpendLimit"
          }
        },
        "description": "campaign patch model"
      },
      "ReadAdSetSchedule": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "activationStatus": {
            "enum": [
              "on",
              "off"
            ],
            "type": "string",
            "description": "Activation status of the ad set, i.e. whether the consumer wants it to deliver",
            "nullable": true
          },
          "deliveryStatus": {
            "enum": [
              "draft",
              "inactive",
              "live",
              "notLive",
              "pausing",
              "paused",
              "scheduled",
              "ended",
              "notDelivering",
              "archived"
            ],
            "type": "string",
            "description": "Delivery status of the delivery of the ad set, i.e. whether the ad set is delivering",
            "nullable": true
          }
        },
        "description": "ad set schedule read model"
      },
      "ReadAdSetBidding": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          },
          "bidStrategy": {
            "enum": [
              "actions",
              "clicks",
              "conversions",
              "displays",
              "installs",
              "revenue",
              "storeConversions",
              "value",
              "viewedImpressions",
              "Visits",
              "completedVideoViews"
            ],
            "type": "string",
            "description": "The intended optimization for the Ad Set",
            "nullable": true
          },
          "costController": {
            "enum": [
              "COS",
              "CPC",
              "CPI",
              "CPM",
              "CPO",
              "CPSV",
              "CPV",
              "dailyBudget"
            ],
            "type": "string",
            "description": "How spend is controlled",
            "nullable": true
          }
        },
        "description": "ad set bidding read model"
      },
      "AdSetTargeting": {
        "type": "object",
        "properties": {
          "deliveryLimitations": {
            "$ref": "#/components/schemas/AdSetDeliveryLimitations"
          },
          "geoLocation": {
            "$ref": "#/components/schemas/AdSetGeoLocation"
          },
          "frequencyCapping": {
            "$ref": "#/components/schemas/AdSetFrequencyCapping"
          }
        },
        "description": "ad set targeting model"
      },
      "ReadAdSetBudget": {
        "type": "object",
        "properties": {
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your budget is capped or not",
            "nullable": true
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the budget renewal",
            "nullable": true
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "description": "The pace at which the budget can be spent",
            "nullable": true
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "description": "The delivery week for the budget",
            "nullable": true
          },
          "budgetAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set budget read model"
      },
      "CampaignSpendLimit": {
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not",
            "nullable": true
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal",
            "nullable": true
          },
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "campaign spend limit model"
      },
      "PatchAdSetScheduling": {
        "type": "object",
        "properties": {
          "startDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/NillableDateTime"
          }
        },
        "description": "ad set schedule patch model"
      },
      "PatchAdSetBidding": {
        "type": "object",
        "properties": {
          "bidAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set bidding patch model"
      },
      "PatchAdSetBudget": {
        "type": "object",
        "properties": {
          "budgetStrategy": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your budget is capped or not",
            "nullable": true
          },
          "budgetRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the budget renewal",
            "nullable": true
          },
          "budgetDeliverySmoothing": {
            "enum": [
              "accelerated",
              "standard"
            ],
            "type": "string",
            "description": "The pace at which the budget can be spent",
            "nullable": true
          },
          "budgetDeliveryWeek": {
            "enum": [
              "undefined",
              "mondayToSunday",
              "tuesdayToMonday",
              "wednesdayToTuesday",
              "thursdayToWednesday",
              "fridayToThursday",
              "saturdayToFriday",
              "sundayToSaturday"
            ],
            "type": "string",
            "description": "The delivery week for the budget",
            "nullable": true
          },
          "budgetAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "ad set budget patch model"
      },
      "PatchCampaignSpendLimit": {
        "type": "object",
        "properties": {
          "spendLimitType": {
            "enum": [
              "capped",
              "uncapped"
            ],
            "type": "string",
            "description": "Whether your spend limit is capped or not",
            "nullable": true
          },
          "spendLimitRenewal": {
            "enum": [
              "undefined",
              "daily",
              "monthly",
              "lifetime"
            ],
            "type": "string",
            "description": "The pace of the spend limit renewal",
            "nullable": true
          },
          "spendLimitAmount": {
            "$ref": "#/components/schemas/NillableDecimal"
          }
        },
        "description": "campaign spend limit model"
      },
      "NillableDateTime": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "NillableDecimal": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double",
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "AdSetDeliveryLimitations": {
        "type": "object",
        "properties": {
          "environments": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "web",
                "inApp"
              ],
              "type": "string"
            },
            "description": "List of environments which the ad set should target",
            "nullable": true
          },
          "devices": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "other",
                "desktop",
                "mobile",
                "tablet"
              ],
              "type": "string"
            },
            "description": "List of devices which the ad set should target",
            "nullable": true
          },
          "operatingSystems": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "android",
                "ios",
                "unknown"
              ],
              "type": "string"
            },
            "description": "List of operating systems which the ad set should target",
            "nullable": true
          }
        },
        "description": "ad set delivery limitations model"
      },
      "AdSetGeoLocation": {
        "type": "object",
        "properties": {
          "countries": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          },
          "subdivisions": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          },
          "zipCodes": {
            "$ref": "#/components/schemas/NillableAdSetTargetingRule"
          }
        },
        "description": "ad set geolocation model"
      },
      "AdSetFrequencyCapping": {
        "type": "object",
        "properties": {
          "frequency": {
            "enum": [
              "hourly",
              "daily",
              "lifetime",
              "advanced"
            ],
            "type": "string",
            "description": "Period on which impression limitation is calculated",
            "nullable": true
          },
          "maximumImpressions": {
            "type": "integer",
            "description": "Maximum impressions for the specified period",
            "format": "int32",
            "nullable": true
          }
        },
        "description": "ad set frequency capping model"
      },
      "NillableAdSetTargetingRule": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdSetTargetingRule"
              }
            ],
            "nullable": true,
            "x-nullable": true
          }
        },
        "description": "structure that encapsulates an object that have valid business null values. If the structure is provided (i.e. not null), then the value in it, even null, is provided."
      },
      "AdSetTargetingRule": {
        "type": "object",
        "properties": {
          "operand": {
            "enum": [
              "undefined",
              "in",
              "notIn"
            ],
            "type": "string",
            "description": "Operand which states how the values should be applied",
            "nullable": true
          },
          "values": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of values to apply",
            "nullable": true
          }
        },
        "description": "ad set targeting rule model"
      },
      "TransparencyReportDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportEntityMessage"
            }
          }
        },
        "description": "This is the message defining the response for Transparency report"
      },
      "ProblemsDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Common problems object"
      },
      "TransparencyQueryMessage": {
        "required": [
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "shouldDisplayProductIds": {
            "type": "boolean",
            "description": "Specify if the product ids are displayed in the report.",
            "default": false,
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Transparency report",
        "example": {
          "shouldDisplayProductIds": false,
          "startDate": "2023-04-03T00:00:00.0000000+00:00",
          "endDate": "2023-04-06T00:00:00.0000000+00:00"
        }
      },
      "PlacementsReportQueryDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlacementsReportQueryEntityMessage"
            }
          }
        },
        "description": "Contains queries for Placements report",
        "example": {
          "data": [
            {
              "type": "PlacementReport",
              "attributes": {
                "advertiserIds": "123,456,789",
                "campaignIds": "111,222,333,444",
                "adsetIds": "135,246,357,468",
                "environment": "web",
                "placement": "MyPlacement",
                "dimensions": [
                  "AdsetId",
                  "AdvertiserId",
                  "Placement"
                ],
                "metrics": [
                  "clicks",
                  "displays",
                  "cost"
                ],
                "currency": "EUR",
                "disclosed": false,
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2022-08-29T00:00:00.0000000+00:00",
                "endDate": "2022-08-29T00:00:00.0000000+00:00"
              }
            }
          ]
        }
      },
      "StatisticsReportQueryMessage": {
        "required": [
          "dimensions",
          "metrics",
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used",
            "nullable": true
          },
          "adSetIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets ids. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetNames": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets names. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "adSetStatus": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of adSets status. If empty, all the adSets will be fetched",
            "nullable": true
          },
          "dimensions": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "Adset",
                "AdvertiserId",
                "Advertiser",
                "CategoryId",
                "Category",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year",
                "Os",
                "Device",
                "CampaignId",
                "Campaign",
                "AdId",
                "Ad",
                "CouponId",
                "Coupon",
                "MarketingObjectiveId",
                "MarketingObjective",
                "ChannelId",
                "Channel",
                "Goal"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "metrics": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Adset report",
        "example": {
          "advertiserIds": "123,456,789",
          "adSetIds": [
            "12345",
            "54321"
          ],
          "adSetNames": [
            "myAdSet1",
            "myAdSet2"
          ],
          "adSetStatus": [
            "Active"
          ],
          "dimensions": [
            "CampaignId",
            "Campaign",
            "AdsetId",
            "Adset",
            "AdvertiserId",
            "Advertiser",
            "AdId",
            "Ad",
            "CouponId",
            "Coupon",
            "CategoryId",
            "Category",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year",
            "Os",
            "Device"
          ],
          "metrics": [
            "Clicks",
            "Displays",
            "Cpc",
            "Visits"
          ],
          "currency": "EUR",
          "format": "csv",
          "timezone": "Europe/Paris",
          "startDate": "2022-08-29T00:00:00.0000000+00:00",
          "endDate": "2022-09-01T00:00:00.0000000+00:00"
        }
      },
      "TransactionsReportQueryDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsReportQueryEntityMessage"
            }
          }
        },
        "description": "Contains queries for Transactions report",
        "example": {
          "data": [
            {
              "type": "TransactionsReport",
              "attributes": {
                "advertiserIds": "123,456,789",
                "eventType": "display",
                "currency": "EUR",
                "format": "csv",
                "timezone": "Europe/Paris",
                "startDate": "2023-04-03T00:00:00.0000000+00:00",
                "endDate": "2023-04-03T00:00:00.0000000+00:00"
              }
            }
          ]
        }
      },
      "TransparencyReportEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/TransparencyReportAttributes"
          }
        },
        "description": "This is the message defining the entity response for Transparency report"
      },
      "PlacementsReportQueryEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/PlacementsReportQueryMessage"
          }
        },
        "description": "Contains a query for Transaction report and its type"
      },
      "TransactionsReportQueryEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/TransactionsReportQueryMessage"
          }
        },
        "description": "Contains a query for Transaction report and its type"
      },
      "TransparencyReportAttributes": {
        "required": [
          "advertiserId",
          "tokenValidUntil",
          "files"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string"
          },
          "tokenValidUntil": {
            "type": "string",
            "format": "date-time"
          },
          "files": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransparencyReportFile"
            }
          }
        },
        "description": "This is the message defining the attribute response for Transparency report"
      },
      "PlacementsReportQueryMessage": {
        "required": [
          "advertiserIds",
          "dimensions",
          "metrics",
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids."
          },
          "campaignIds": {
            "type": "string",
            "description": "The comma-separated list of campaign ids.",
            "nullable": true
          },
          "adsetIds": {
            "type": "string",
            "description": "The comma-separated list of adSet ids.",
            "nullable": true
          },
          "environment": {
            "type": "string",
            "description": "Type of environment: Web, Android or iOS.",
            "nullable": true
          },
          "placement": {
            "type": "string",
            "description": "Filter the value of the placement",
            "nullable": true
          },
          "dimensions": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "AdvertiserId",
                "Placement",
                "Environment",
                "AdsetName",
                "AdvertiserName",
                "CampaignId",
                "CampaignName"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "metrics": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "disclosed": {
            "type": "boolean",
            "description": "Returns disclosed or undisclosed placements.",
            "default": true,
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Placements report"
      },
      "TransactionsReportQueryMessage": {
        "required": [
          "currency",
          "format",
          "startDate",
          "endDate"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "description": "Apply a filter on Event type .",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "format": {
            "type": "string",
            "description": "The file format of the generated report: csv, xml, excel or json."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report. Timezone Database format (Tz).",
            "default": "UTC",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report. Date component of ISO 8061 format, any time or timezone component is ignored.",
            "format": "date-time"
          }
        },
        "description": "This is the message defining the query for Transaction report"
      },
      "TransparencyReportFile": {
        "required": [
          "fileName",
          "url"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "description": "This is the message defining the file response for Transparency report"
      },
      "GetPortfolioResponse": {
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityOfPortfolioMessage"
            },
            "description": "The response�s primary data",
            "nullable": true
          },
          "errors": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiError"
            },
            "description": "Error list returned by the Criteo API\r\nFor successful requests it is empty",
            "nullable": true
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarning"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future.",
            "nullable": true
          }
        },
        "description": "Portfolio fetch Response"
      },
      "EntityOfPortfolioMessage": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "publisher",
              "address",
              "client",
              "contact",
              "industry"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "nullable": true,
            "example": "campaign"
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PortfolioMessage"
          },
          "meta": {
            "type": "object",
            "description": "A meta object that contains application-specific metadata",
            "nullable": true
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "CriteoApiError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway",
            "nullable": true
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "nullable": true,
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "nullable": true,
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s).",
            "nullable": true
          }
        },
        "description": "Criteo API response error"
      },
      "CriteoApiWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway",
            "nullable": true
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "nullable": true,
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "nullable": true,
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable remarks of the problem type.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "nullable": true
          }
        },
        "description": "Criteo API response warning"
      },
      "PortfolioMessage": {
        "type": "object",
        "properties": {
          "advertiserName": {
            "type": "string",
            "nullable": true
          }
        },
        "description": "Class with elementary info about advertiser"
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          },
          "authorizationCode": {
            "authorizationUrl": "https://api.criteo.com/oauth2",
            "tokenUrl": "https://api.criteo.com/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth": [ ]
    }
  ],
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}