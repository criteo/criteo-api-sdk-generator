buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'idea'
    id 'eclipse'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

if (JavaVersion.current().isJava8Compatible()) {
    // Suppress the many Javadoc warnings that we would otherwise get from the generated code
    tasks.withType(Javadoc) {
        options.addBooleanOption('Xdoclint:none', true)
    }
}

group = '{{groupId}}'
version = '{{artifactVersion}}'

repositories {
    jcenter()
}
{{#sourceFolder}}
sourceSets {
    main.java.srcDirs = ['{{sourceFolder}}']
}
{{/sourceFolder}}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile 'io.swagger:swagger-annotations:1.5.22'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile 'com.squareup.okhttp3:okhttp:4.9.3'
    compile 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'io.gsonfire:gson-fire:1.8.3'
    compile group: 'org.apache.oltu.oauth2', name: 'org.apache.oltu.oauth2.client', version: '1.0.1'
    testCompile 'junit:junit:4.13.1'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

javadoc {
    options.encoding = 'UTF-8'
    options.tags = [ "http.response.details:a:Http Response Details" ]
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId '{{groupId}}'
            artifactId '{{artifactId}}'
            version '{{artifactVersion}}'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                packaging = 'jar'
                name = '{{groupId}}:{{artifactId}}'
                description = '{{artifactDescription}}'
                url = '{{artifactUrl}}'
                licenses {
                    license {
                        name = '{{licenseName}}'
                        url = '{{licenseUrl}}'
                    }
                }
                developers {
                    developer {
                        name = '{{developerName}}'
                        email = '{{developerEmail}}'
                        url = '{{developerOrganizationUrl}}'
                        organization = '{{developerOrganization}}'
                        organizationUrl = '{{developerOrganizationUrl}}'
                    }
                }
                scm {
                    connection = '{{scmConnection}}'
                    developerConnection = '{{scmDeveloperConnection}}'
                    url = '{{scmUrl}}'
                }
            }
        }
    }
}

signing {
    def signingKey = System.getenv("MAVEN_SECRING_GPG_BASE64")
    def signingPassword = System.getenv("MAVEN_SECRING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    packageGroup = '{{groupId}}'
    repositories {
        sonatype {
            username = "criteo-oss"
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }

    transitionCheckOptions {
        maxRetries.set(50)
        delayBetween.set(java.time.Duration.ofMillis(3000))
    }
}